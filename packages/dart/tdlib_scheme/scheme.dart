// ignore_for_file: non_constant_identifier_names, unnecessary_brace_in_string_interps

import 'dart:convert';

extension RemoveValueNullMapExtensions on Map {
  Map removeValueNull() {
    try {
      forEach((key, value) {
        try {
          if (value == null) {
            remove(key);
          }
        } catch (e) {}
      });
      return this;
    } catch (e) {
      return this;
    }
  }
}

class TdlibFunction {
  late Map rawData;
  TdlibFunction(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getAuthorizationState.html).
  factory TdlibFunction.getAuthorizationState() {
    try {
      return TdlibFunction({
        "@type": "getAuthorizationState",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getAuthorizationState",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setTdlibParameters.html).
  factory TdlibFunction.setTdlibParameters({
    bool? use_test_dc,
    String? database_directory,
    String? files_directory,
    String? database_encryption_key,
    bool? use_file_database,
    bool? use_chat_info_database,
    bool? use_message_database,
    bool? use_secret_chats,
    int? api_id,
    String? api_hash,
    String? system_language_code,
    String? device_model,
    String? system_version,
    String? application_version,
    bool? enable_storage_optimizer,
    bool? ignore_file_names,
  }) {
    try {
      return TdlibFunction({
        "@type": "setTdlibParameters",
        "use_test_dc": use_test_dc,
        "database_directory": database_directory,
        "files_directory": files_directory,
        "database_encryption_key": database_encryption_key,
        "use_file_database": use_file_database,
        "use_chat_info_database": use_chat_info_database,
        "use_message_database": use_message_database,
        "use_secret_chats": use_secret_chats,
        "api_id": api_id,
        "api_hash": api_hash,
        "system_language_code": system_language_code,
        "device_model": device_model,
        "system_version": system_version,
        "application_version": application_version,
        "enable_storage_optimizer": enable_storage_optimizer,
        "ignore_file_names": ignore_file_names,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setTdlibParameters",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setAuthenticationPhoneNumber.html).
  factory TdlibFunction.setAuthenticationPhoneNumber({
    String? phone_number,
    PhoneNumberAuthenticationSettings? settings,
  }) {
    try {
      return TdlibFunction({
        "@type": "setAuthenticationPhoneNumber",
        "phone_number": phone_number,
        "settings": (settings != null) ? settings.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setAuthenticationPhoneNumber",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setAuthenticationEmailAddress.html).
  factory TdlibFunction.setAuthenticationEmailAddress({
    String? email_address,
  }) {
    try {
      return TdlibFunction({
        "@type": "setAuthenticationEmailAddress",
        "email_address": email_address,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setAuthenticationEmailAddress",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1resendAuthenticationCode.html).
  factory TdlibFunction.resendAuthenticationCode() {
    try {
      return TdlibFunction({
        "@type": "resendAuthenticationCode",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method resendAuthenticationCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1checkAuthenticationEmailCode.html).
  factory TdlibFunction.checkAuthenticationEmailCode({
    EmailAddressAuthentication? code,
  }) {
    try {
      return TdlibFunction({
        "@type": "checkAuthenticationEmailCode",
        "code": (code != null) ? code.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method checkAuthenticationEmailCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1checkAuthenticationCode.html).
  factory TdlibFunction.checkAuthenticationCode({
    String? code,
  }) {
    try {
      return TdlibFunction({
        "@type": "checkAuthenticationCode",
        "code": code,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method checkAuthenticationCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1requestQrCodeAuthentication.html).
  factory TdlibFunction.requestQrCodeAuthentication({
    List<int>? other_user_ids,
  }) {
    try {
      return TdlibFunction({
        "@type": "requestQrCodeAuthentication",
        "other_user_ids": other_user_ids,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method requestQrCodeAuthentication",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1registerUser.html).
  factory TdlibFunction.registerUser({
    String? first_name,
    String? last_name,
  }) {
    try {
      return TdlibFunction({
        "@type": "registerUser",
        "first_name": first_name,
        "last_name": last_name,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method registerUser",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1checkAuthenticationPassword.html).
  factory TdlibFunction.checkAuthenticationPassword({
    String? password,
  }) {
    try {
      return TdlibFunction({
        "@type": "checkAuthenticationPassword",
        "password": password,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method checkAuthenticationPassword",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1requestAuthenticationPasswordRecovery.html).
  factory TdlibFunction.requestAuthenticationPasswordRecovery() {
    try {
      return TdlibFunction({
        "@type": "requestAuthenticationPasswordRecovery",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method requestAuthenticationPasswordRecovery",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1checkAuthenticationPasswordRecoveryCode.html).
  factory TdlibFunction.checkAuthenticationPasswordRecoveryCode({
    String? recovery_code,
  }) {
    try {
      return TdlibFunction({
        "@type": "checkAuthenticationPasswordRecoveryCode",
        "recovery_code": recovery_code,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method checkAuthenticationPasswordRecoveryCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1recoverAuthenticationPassword.html).
  factory TdlibFunction.recoverAuthenticationPassword({
    String? recovery_code,
    String? new_password,
    String? new_hint,
  }) {
    try {
      return TdlibFunction({
        "@type": "recoverAuthenticationPassword",
        "recovery_code": recovery_code,
        "new_password": new_password,
        "new_hint": new_hint,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method recoverAuthenticationPassword",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1checkAuthenticationBotToken.html).
  factory TdlibFunction.checkAuthenticationBotToken({
    String? token,
  }) {
    try {
      return TdlibFunction({
        "@type": "checkAuthenticationBotToken",
        "token": token,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method checkAuthenticationBotToken",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1logOut.html).
  factory TdlibFunction.logOut() {
    try {
      return TdlibFunction({
        "@type": "logOut",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method logOut",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1close.html).
  factory TdlibFunction.close() {
    try {
      return TdlibFunction({
        "@type": "close",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method close",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1destroy.html).
  factory TdlibFunction.destroy() {
    try {
      return TdlibFunction({
        "@type": "destroy",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method destroy",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1confirmQrCodeAuthentication.html).
  factory TdlibFunction.confirmQrCodeAuthentication({
    String? link,
  }) {
    try {
      return TdlibFunction({
        "@type": "confirmQrCodeAuthentication",
        "link": link,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method confirmQrCodeAuthentication",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getCurrentState.html).
  factory TdlibFunction.getCurrentState() {
    try {
      return TdlibFunction({
        "@type": "getCurrentState",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getCurrentState",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setDatabaseEncryptionKey.html).
  factory TdlibFunction.setDatabaseEncryptionKey({
    String? new_encryption_key,
  }) {
    try {
      return TdlibFunction({
        "@type": "setDatabaseEncryptionKey",
        "new_encryption_key": new_encryption_key,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setDatabaseEncryptionKey",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getPasswordState.html).
  factory TdlibFunction.getPasswordState() {
    try {
      return TdlibFunction({
        "@type": "getPasswordState",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getPasswordState",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setPassword.html).
  factory TdlibFunction.setPassword({
    String? old_password,
    String? new_password,
    String? new_hint,
    bool? set_recovery_email_address,
    String? new_recovery_email_address,
  }) {
    try {
      return TdlibFunction({
        "@type": "setPassword",
        "old_password": old_password,
        "new_password": new_password,
        "new_hint": new_hint,
        "set_recovery_email_address": set_recovery_email_address,
        "new_recovery_email_address": new_recovery_email_address,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setPassword",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setLoginEmailAddress.html).
  factory TdlibFunction.setLoginEmailAddress({
    String? new_login_email_address,
  }) {
    try {
      return TdlibFunction({
        "@type": "setLoginEmailAddress",
        "new_login_email_address": new_login_email_address,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setLoginEmailAddress",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1resendLoginEmailAddressCode.html).
  factory TdlibFunction.resendLoginEmailAddressCode() {
    try {
      return TdlibFunction({
        "@type": "resendLoginEmailAddressCode",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method resendLoginEmailAddressCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1checkLoginEmailAddressCode.html).
  factory TdlibFunction.checkLoginEmailAddressCode({
    EmailAddressAuthentication? code,
  }) {
    try {
      return TdlibFunction({
        "@type": "checkLoginEmailAddressCode",
        "code": (code != null) ? code.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method checkLoginEmailAddressCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getRecoveryEmailAddress.html).
  factory TdlibFunction.getRecoveryEmailAddress({
    String? password,
  }) {
    try {
      return TdlibFunction({
        "@type": "getRecoveryEmailAddress",
        "password": password,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getRecoveryEmailAddress",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setRecoveryEmailAddress.html).
  factory TdlibFunction.setRecoveryEmailAddress({
    String? password,
    String? new_recovery_email_address,
  }) {
    try {
      return TdlibFunction({
        "@type": "setRecoveryEmailAddress",
        "password": password,
        "new_recovery_email_address": new_recovery_email_address,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setRecoveryEmailAddress",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1checkRecoveryEmailAddressCode.html).
  factory TdlibFunction.checkRecoveryEmailAddressCode({
    String? code,
  }) {
    try {
      return TdlibFunction({
        "@type": "checkRecoveryEmailAddressCode",
        "code": code,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method checkRecoveryEmailAddressCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1resendRecoveryEmailAddressCode.html).
  factory TdlibFunction.resendRecoveryEmailAddressCode() {
    try {
      return TdlibFunction({
        "@type": "resendRecoveryEmailAddressCode",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method resendRecoveryEmailAddressCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1requestPasswordRecovery.html).
  factory TdlibFunction.requestPasswordRecovery() {
    try {
      return TdlibFunction({
        "@type": "requestPasswordRecovery",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method requestPasswordRecovery",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1checkPasswordRecoveryCode.html).
  factory TdlibFunction.checkPasswordRecoveryCode({
    String? recovery_code,
  }) {
    try {
      return TdlibFunction({
        "@type": "checkPasswordRecoveryCode",
        "recovery_code": recovery_code,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method checkPasswordRecoveryCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1recoverPassword.html).
  factory TdlibFunction.recoverPassword({
    String? recovery_code,
    String? new_password,
    String? new_hint,
  }) {
    try {
      return TdlibFunction({
        "@type": "recoverPassword",
        "recovery_code": recovery_code,
        "new_password": new_password,
        "new_hint": new_hint,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method recoverPassword",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1resetPassword.html).
  factory TdlibFunction.resetPassword() {
    try {
      return TdlibFunction({
        "@type": "resetPassword",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method resetPassword",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1cancelPasswordReset.html).
  factory TdlibFunction.cancelPasswordReset() {
    try {
      return TdlibFunction({
        "@type": "cancelPasswordReset",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method cancelPasswordReset",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1createTemporaryPassword.html).
  factory TdlibFunction.createTemporaryPassword({
    String? password,
    int? valid_for,
  }) {
    try {
      return TdlibFunction({
        "@type": "createTemporaryPassword",
        "password": password,
        "valid_for": valid_for,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method createTemporaryPassword",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getTemporaryPasswordState.html).
  factory TdlibFunction.getTemporaryPasswordState() {
    try {
      return TdlibFunction({
        "@type": "getTemporaryPasswordState",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getTemporaryPasswordState",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMe.html).
  factory TdlibFunction.getMe() {
    try {
      return TdlibFunction({
        "@type": "getMe",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMe",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getUser.html).
  factory TdlibFunction.getUser({
    int? user_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getUser",
        "user_id": user_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getUser",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getUserFullInfo.html).
  factory TdlibFunction.getUserFullInfo({
    int? user_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getUserFullInfo",
        "user_id": user_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getUserFullInfo",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getBasicGroup.html).
  factory TdlibFunction.getBasicGroup({
    int? basic_group_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getBasicGroup",
        "basic_group_id": basic_group_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getBasicGroup",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getBasicGroupFullInfo.html).
  factory TdlibFunction.getBasicGroupFullInfo({
    int? basic_group_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getBasicGroupFullInfo",
        "basic_group_id": basic_group_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getBasicGroupFullInfo",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getSupergroup.html).
  factory TdlibFunction.getSupergroup({
    int? supergroup_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getSupergroup",
        "supergroup_id": supergroup_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getSupergroup",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getSupergroupFullInfo.html).
  factory TdlibFunction.getSupergroupFullInfo({
    int? supergroup_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getSupergroupFullInfo",
        "supergroup_id": supergroup_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getSupergroupFullInfo",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getSecretChat.html).
  factory TdlibFunction.getSecretChat({
    int? secret_chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getSecretChat",
        "secret_chat_id": secret_chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getSecretChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChat.html).
  factory TdlibFunction.getChat({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChat",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMessage.html).
  factory TdlibFunction.getMessage({
    int? chat_id,
    int? message_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMessage",
        "chat_id": chat_id,
        "message_id": message_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMessage",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMessageLocally.html).
  factory TdlibFunction.getMessageLocally({
    int? chat_id,
    int? message_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMessageLocally",
        "chat_id": chat_id,
        "message_id": message_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMessageLocally",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getRepliedMessage.html).
  factory TdlibFunction.getRepliedMessage({
    int? chat_id,
    int? message_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getRepliedMessage",
        "chat_id": chat_id,
        "message_id": message_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getRepliedMessage",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatPinnedMessage.html).
  factory TdlibFunction.getChatPinnedMessage({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatPinnedMessage",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatPinnedMessage",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getCallbackQueryMessage.html).
  factory TdlibFunction.getCallbackQueryMessage({
    int? chat_id,
    int? message_id,
    int? callback_query_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getCallbackQueryMessage",
        "chat_id": chat_id,
        "message_id": message_id,
        "callback_query_id": callback_query_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getCallbackQueryMessage",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMessages.html).
  factory TdlibFunction.getMessages({
    int? chat_id,
    List<int>? message_ids,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMessages",
        "chat_id": chat_id,
        "message_ids": message_ids,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMessageThread.html).
  factory TdlibFunction.getMessageThread({
    int? chat_id,
    int? message_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMessageThread",
        "chat_id": chat_id,
        "message_id": message_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMessageThread",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMessageViewers.html).
  factory TdlibFunction.getMessageViewers({
    int? chat_id,
    int? message_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMessageViewers",
        "chat_id": chat_id,
        "message_id": message_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMessageViewers",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getFile.html).
  factory TdlibFunction.getFile({
    int? file_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getFile",
        "file_id": file_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getFile",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getRemoteFile.html).
  factory TdlibFunction.getRemoteFile({
    String? remote_file_id,
    FileType? file_type,
  }) {
    try {
      return TdlibFunction({
        "@type": "getRemoteFile",
        "remote_file_id": remote_file_id,
        "file_type": (file_type != null) ? file_type.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getRemoteFile",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1loadChats.html).
  factory TdlibFunction.loadChats({
    ChatList? chat_list,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "loadChats",
        "chat_list": (chat_list != null) ? chat_list.toJson() : null,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method loadChats",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChats.html).
  factory TdlibFunction.getChats({
    ChatList? chat_list,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChats",
        "chat_list": (chat_list != null) ? chat_list.toJson() : null,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChats",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchPublicChat.html).
  factory TdlibFunction.searchPublicChat({
    String? username,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchPublicChat",
        "username": username,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchPublicChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchPublicChats.html).
  factory TdlibFunction.searchPublicChats({
    String? query,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchPublicChats",
        "query": query,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchPublicChats",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchChats.html).
  factory TdlibFunction.searchChats({
    String? query,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchChats",
        "query": query,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchChats",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchChatsOnServer.html).
  factory TdlibFunction.searchChatsOnServer({
    String? query,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchChatsOnServer",
        "query": query,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchChatsOnServer",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchChatsNearby.html).
  factory TdlibFunction.searchChatsNearby({
    Location? location,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchChatsNearby",
        "location": (location != null) ? location.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchChatsNearby",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getTopChats.html).
  factory TdlibFunction.getTopChats({
    TopChatCategory? category,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getTopChats",
        "category": (category != null) ? category.toJson() : null,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getTopChats",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1removeTopChat.html).
  factory TdlibFunction.removeTopChat({
    TopChatCategory? category,
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "removeTopChat",
        "category": (category != null) ? category.toJson() : null,
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method removeTopChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1addRecentlyFoundChat.html).
  factory TdlibFunction.addRecentlyFoundChat({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "addRecentlyFoundChat",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method addRecentlyFoundChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1removeRecentlyFoundChat.html).
  factory TdlibFunction.removeRecentlyFoundChat({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "removeRecentlyFoundChat",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method removeRecentlyFoundChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1clearRecentlyFoundChats.html).
  factory TdlibFunction.clearRecentlyFoundChats() {
    try {
      return TdlibFunction({
        "@type": "clearRecentlyFoundChats",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method clearRecentlyFoundChats",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getRecentlyOpenedChats.html).
  factory TdlibFunction.getRecentlyOpenedChats({
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getRecentlyOpenedChats",
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getRecentlyOpenedChats",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1checkChatUsername.html).
  factory TdlibFunction.checkChatUsername({
    int? chat_id,
    String? username,
  }) {
    try {
      return TdlibFunction({
        "@type": "checkChatUsername",
        "chat_id": chat_id,
        "username": username,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method checkChatUsername",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getCreatedPublicChats.html).
  factory TdlibFunction.getCreatedPublicChats({
    PublicChatType? type,
  }) {
    try {
      return TdlibFunction({
        "@type": "getCreatedPublicChats",
        "type": (type != null) ? type.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getCreatedPublicChats",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1checkCreatedPublicChatsLimit.html).
  factory TdlibFunction.checkCreatedPublicChatsLimit({
    PublicChatType? type,
  }) {
    try {
      return TdlibFunction({
        "@type": "checkCreatedPublicChatsLimit",
        "type": (type != null) ? type.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method checkCreatedPublicChatsLimit",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getSuitableDiscussionChats.html).
  factory TdlibFunction.getSuitableDiscussionChats() {
    try {
      return TdlibFunction({
        "@type": "getSuitableDiscussionChats",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getSuitableDiscussionChats",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getInactiveSupergroupChats.html).
  factory TdlibFunction.getInactiveSupergroupChats() {
    try {
      return TdlibFunction({
        "@type": "getInactiveSupergroupChats",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getInactiveSupergroupChats",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getGroupsInCommon.html).
  factory TdlibFunction.getGroupsInCommon({
    int? user_id,
    int? offset_chat_id,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getGroupsInCommon",
        "user_id": user_id,
        "offset_chat_id": offset_chat_id,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getGroupsInCommon",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatHistory.html).
  factory TdlibFunction.getChatHistory({
    int? chat_id,
    int? from_message_id,
    int? offset,
    int? limit,
    bool? only_local,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatHistory",
        "chat_id": chat_id,
        "from_message_id": from_message_id,
        "offset": offset,
        "limit": limit,
        "only_local": only_local,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatHistory",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMessageThreadHistory.html).
  factory TdlibFunction.getMessageThreadHistory({
    int? chat_id,
    int? message_id,
    int? from_message_id,
    int? offset,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMessageThreadHistory",
        "chat_id": chat_id,
        "message_id": message_id,
        "from_message_id": from_message_id,
        "offset": offset,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMessageThreadHistory",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deleteChatHistory.html).
  factory TdlibFunction.deleteChatHistory({
    int? chat_id,
    bool? remove_from_chat_list,
    bool? revoke,
  }) {
    try {
      return TdlibFunction({
        "@type": "deleteChatHistory",
        "chat_id": chat_id,
        "remove_from_chat_list": remove_from_chat_list,
        "revoke": revoke,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deleteChatHistory",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deleteChat.html).
  factory TdlibFunction.deleteChat({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "deleteChat",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deleteChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchChatMessages.html).
  factory TdlibFunction.searchChatMessages({
    int? chat_id,
    String? query,
    MessageSender? sender_id,
    int? from_message_id,
    int? offset,
    int? limit,
    SearchMessagesFilter? filter,
    int? message_thread_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchChatMessages",
        "chat_id": chat_id,
        "query": query,
        "sender_id": (sender_id != null) ? sender_id.toJson() : null,
        "from_message_id": from_message_id,
        "offset": offset,
        "limit": limit,
        "filter": (filter != null) ? filter.toJson() : null,
        "message_thread_id": message_thread_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchChatMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchMessages.html).
  factory TdlibFunction.searchMessages({
    ChatList? chat_list,
    String? query,
    int? offset_date,
    int? offset_chat_id,
    int? offset_message_id,
    int? limit,
    SearchMessagesFilter? filter,
    int? min_date,
    int? max_date,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchMessages",
        "chat_list": (chat_list != null) ? chat_list.toJson() : null,
        "query": query,
        "offset_date": offset_date,
        "offset_chat_id": offset_chat_id,
        "offset_message_id": offset_message_id,
        "limit": limit,
        "filter": (filter != null) ? filter.toJson() : null,
        "min_date": min_date,
        "max_date": max_date,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchSecretMessages.html).
  factory TdlibFunction.searchSecretMessages({
    int? chat_id,
    String? query,
    String? offset,
    int? limit,
    SearchMessagesFilter? filter,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchSecretMessages",
        "chat_id": chat_id,
        "query": query,
        "offset": offset,
        "limit": limit,
        "filter": (filter != null) ? filter.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchSecretMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchCallMessages.html).
  factory TdlibFunction.searchCallMessages({
    int? from_message_id,
    int? limit,
    bool? only_missed,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchCallMessages",
        "from_message_id": from_message_id,
        "limit": limit,
        "only_missed": only_missed,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchCallMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchOutgoingDocumentMessages.html).
  factory TdlibFunction.searchOutgoingDocumentMessages({
    String? query,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchOutgoingDocumentMessages",
        "query": query,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchOutgoingDocumentMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deleteAllCallMessages.html).
  factory TdlibFunction.deleteAllCallMessages({
    bool? revoke,
  }) {
    try {
      return TdlibFunction({
        "@type": "deleteAllCallMessages",
        "revoke": revoke,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deleteAllCallMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchChatRecentLocationMessages.html).
  factory TdlibFunction.searchChatRecentLocationMessages({
    int? chat_id,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchChatRecentLocationMessages",
        "chat_id": chat_id,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchChatRecentLocationMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getActiveLiveLocationMessages.html).
  factory TdlibFunction.getActiveLiveLocationMessages() {
    try {
      return TdlibFunction({
        "@type": "getActiveLiveLocationMessages",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getActiveLiveLocationMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatMessageByDate.html).
  factory TdlibFunction.getChatMessageByDate({
    int? chat_id,
    int? date,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatMessageByDate",
        "chat_id": chat_id,
        "date": date,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatMessageByDate",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatSparseMessagePositions.html).
  factory TdlibFunction.getChatSparseMessagePositions({
    int? chat_id,
    SearchMessagesFilter? filter,
    int? from_message_id,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatSparseMessagePositions",
        "chat_id": chat_id,
        "filter": (filter != null) ? filter.toJson() : null,
        "from_message_id": from_message_id,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatSparseMessagePositions",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatMessageCalendar.html).
  factory TdlibFunction.getChatMessageCalendar({
    int? chat_id,
    SearchMessagesFilter? filter,
    int? from_message_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatMessageCalendar",
        "chat_id": chat_id,
        "filter": (filter != null) ? filter.toJson() : null,
        "from_message_id": from_message_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatMessageCalendar",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatMessageCount.html).
  factory TdlibFunction.getChatMessageCount({
    int? chat_id,
    SearchMessagesFilter? filter,
    bool? return_local,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatMessageCount",
        "chat_id": chat_id,
        "filter": (filter != null) ? filter.toJson() : null,
        "return_local": return_local,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatMessageCount",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatMessagePosition.html).
  factory TdlibFunction.getChatMessagePosition({
    int? chat_id,
    int? message_id,
    SearchMessagesFilter? filter,
    int? message_thread_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatMessagePosition",
        "chat_id": chat_id,
        "message_id": message_id,
        "filter": (filter != null) ? filter.toJson() : null,
        "message_thread_id": message_thread_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatMessagePosition",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatScheduledMessages.html).
  factory TdlibFunction.getChatScheduledMessages({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatScheduledMessages",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatScheduledMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMessagePublicForwards.html).
  factory TdlibFunction.getMessagePublicForwards({
    int? chat_id,
    int? message_id,
    String? offset,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMessagePublicForwards",
        "chat_id": chat_id,
        "message_id": message_id,
        "offset": offset,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMessagePublicForwards",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatSponsoredMessage.html).
  factory TdlibFunction.getChatSponsoredMessage({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatSponsoredMessage",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatSponsoredMessage",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1removeNotification.html).
  factory TdlibFunction.removeNotification({
    int? notification_group_id,
    int? notification_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "removeNotification",
        "notification_group_id": notification_group_id,
        "notification_id": notification_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method removeNotification",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1removeNotificationGroup.html).
  factory TdlibFunction.removeNotificationGroup({
    int? notification_group_id,
    int? max_notification_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "removeNotificationGroup",
        "notification_group_id": notification_group_id,
        "max_notification_id": max_notification_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method removeNotificationGroup",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMessageLink.html).
  factory TdlibFunction.getMessageLink({
    int? chat_id,
    int? message_id,
    int? media_timestamp,
    bool? for_album,
    bool? for_comment,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMessageLink",
        "chat_id": chat_id,
        "message_id": message_id,
        "media_timestamp": media_timestamp,
        "for_album": for_album,
        "for_comment": for_comment,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMessageLink",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMessageEmbeddingCode.html).
  factory TdlibFunction.getMessageEmbeddingCode({
    int? chat_id,
    int? message_id,
    bool? for_album,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMessageEmbeddingCode",
        "chat_id": chat_id,
        "message_id": message_id,
        "for_album": for_album,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMessageEmbeddingCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMessageLinkInfo.html).
  factory TdlibFunction.getMessageLinkInfo({
    String? url,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMessageLinkInfo",
        "url": url,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMessageLinkInfo",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1translateText.html).
  factory TdlibFunction.translateText({
    String? text,
    String? from_language_code,
    String? to_language_code,
  }) {
    try {
      return TdlibFunction({
        "@type": "translateText",
        "text": text,
        "from_language_code": from_language_code,
        "to_language_code": to_language_code,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method translateText",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1recognizeSpeech.html).
  factory TdlibFunction.recognizeSpeech({
    int? chat_id,
    int? message_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "recognizeSpeech",
        "chat_id": chat_id,
        "message_id": message_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method recognizeSpeech",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1rateSpeechRecognition.html).
  factory TdlibFunction.rateSpeechRecognition({
    int? chat_id,
    int? message_id,
    bool? is_good,
  }) {
    try {
      return TdlibFunction({
        "@type": "rateSpeechRecognition",
        "chat_id": chat_id,
        "message_id": message_id,
        "is_good": is_good,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method rateSpeechRecognition",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatAvailableMessageSenders.html).
  factory TdlibFunction.getChatAvailableMessageSenders({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatAvailableMessageSenders",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatAvailableMessageSenders",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setChatMessageSender.html).
  factory TdlibFunction.setChatMessageSender({
    int? chat_id,
    MessageSender? message_sender_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "setChatMessageSender",
        "chat_id": chat_id,
        "message_sender_id": (message_sender_id != null) ? message_sender_id.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setChatMessageSender",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sendMessage.html).
  factory TdlibFunction.sendMessage({
    int? chat_id,
    int? message_thread_id,
    int? reply_to_message_id,
    MessageSendOptions? options,
    ReplyMarkup? reply_markup,
    InputMessageContent? input_message_content,
  }) {
    try {
      return TdlibFunction({
        "@type": "sendMessage",
        "chat_id": chat_id,
        "message_thread_id": message_thread_id,
        "reply_to_message_id": reply_to_message_id,
        "options": (options != null) ? options.toJson() : null,
        "reply_markup": (reply_markup != null) ? reply_markup.toJson() : null,
        "input_message_content": (input_message_content != null) ? input_message_content.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sendMessage",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sendMessageAlbum.html).
  factory TdlibFunction.sendMessageAlbum({
    int? chat_id,
    int? message_thread_id,
    int? reply_to_message_id,
    MessageSendOptions? options,
    List<InputMessageContent>? input_message_contents,
    bool? only_preview,
  }) {
    try {
      return TdlibFunction({
        "@type": "sendMessageAlbum",
        "chat_id": chat_id,
        "message_thread_id": message_thread_id,
        "reply_to_message_id": reply_to_message_id,
        "options": (options != null) ? options.toJson() : null,
        "input_message_contents": (input_message_contents != null)
            ? input_message_contents.map((e) {
                return InputMessageContent((e as Map)).toJson();
              }).toList()
            : null,
        "only_preview": only_preview,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sendMessageAlbum",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sendBotStartMessage.html).
  factory TdlibFunction.sendBotStartMessage({
    int? bot_user_id,
    int? chat_id,
    String? parameter,
  }) {
    try {
      return TdlibFunction({
        "@type": "sendBotStartMessage",
        "bot_user_id": bot_user_id,
        "chat_id": chat_id,
        "parameter": parameter,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sendBotStartMessage",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sendInlineQueryResultMessage.html).
  factory TdlibFunction.sendInlineQueryResultMessage({
    int? chat_id,
    int? message_thread_id,
    int? reply_to_message_id,
    MessageSendOptions? options,
    int? query_id,
    String? result_id,
    bool? hide_via_bot,
  }) {
    try {
      return TdlibFunction({
        "@type": "sendInlineQueryResultMessage",
        "chat_id": chat_id,
        "message_thread_id": message_thread_id,
        "reply_to_message_id": reply_to_message_id,
        "options": (options != null) ? options.toJson() : null,
        "query_id": query_id,
        "result_id": result_id,
        "hide_via_bot": hide_via_bot,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sendInlineQueryResultMessage",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1forwardMessages.html).
  factory TdlibFunction.forwardMessages({
    int? chat_id,
    int? from_chat_id,
    List<int>? message_ids,
    MessageSendOptions? options,
    bool? send_copy,
    bool? remove_caption,
    bool? only_preview,
  }) {
    try {
      return TdlibFunction({
        "@type": "forwardMessages",
        "chat_id": chat_id,
        "from_chat_id": from_chat_id,
        "message_ids": message_ids,
        "options": (options != null) ? options.toJson() : null,
        "send_copy": send_copy,
        "remove_caption": remove_caption,
        "only_preview": only_preview,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method forwardMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1resendMessages.html).
  factory TdlibFunction.resendMessages({
    int? chat_id,
    List<int>? message_ids,
  }) {
    try {
      return TdlibFunction({
        "@type": "resendMessages",
        "chat_id": chat_id,
        "message_ids": message_ids,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method resendMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sendChatScreenshotTakenNotification.html).
  factory TdlibFunction.sendChatScreenshotTakenNotification({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "sendChatScreenshotTakenNotification",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sendChatScreenshotTakenNotification",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1addLocalMessage.html).
  factory TdlibFunction.addLocalMessage({
    int? chat_id,
    MessageSender? sender_id,
    int? reply_to_message_id,
    bool? disable_notification,
    InputMessageContent? input_message_content,
  }) {
    try {
      return TdlibFunction({
        "@type": "addLocalMessage",
        "chat_id": chat_id,
        "sender_id": (sender_id != null) ? sender_id.toJson() : null,
        "reply_to_message_id": reply_to_message_id,
        "disable_notification": disable_notification,
        "input_message_content": (input_message_content != null) ? input_message_content.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method addLocalMessage",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deleteMessages.html).
  factory TdlibFunction.deleteMessages({
    int? chat_id,
    List<int>? message_ids,
    bool? revoke,
  }) {
    try {
      return TdlibFunction({
        "@type": "deleteMessages",
        "chat_id": chat_id,
        "message_ids": message_ids,
        "revoke": revoke,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deleteMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deleteChatMessagesBySender.html).
  factory TdlibFunction.deleteChatMessagesBySender({
    int? chat_id,
    MessageSender? sender_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "deleteChatMessagesBySender",
        "chat_id": chat_id,
        "sender_id": (sender_id != null) ? sender_id.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deleteChatMessagesBySender",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deleteChatMessagesByDate.html).
  factory TdlibFunction.deleteChatMessagesByDate({
    int? chat_id,
    int? min_date,
    int? max_date,
    bool? revoke,
  }) {
    try {
      return TdlibFunction({
        "@type": "deleteChatMessagesByDate",
        "chat_id": chat_id,
        "min_date": min_date,
        "max_date": max_date,
        "revoke": revoke,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deleteChatMessagesByDate",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1editMessageText.html).
  factory TdlibFunction.editMessageText({
    int? chat_id,
    int? message_id,
    ReplyMarkup? reply_markup,
    InputMessageContent? input_message_content,
  }) {
    try {
      return TdlibFunction({
        "@type": "editMessageText",
        "chat_id": chat_id,
        "message_id": message_id,
        "reply_markup": (reply_markup != null) ? reply_markup.toJson() : null,
        "input_message_content": (input_message_content != null) ? input_message_content.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method editMessageText",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1editMessageLiveLocation.html).
  factory TdlibFunction.editMessageLiveLocation({
    int? chat_id,
    int? message_id,
    ReplyMarkup? reply_markup,
    Location? location,
    int? heading,
    int? proximity_alert_radius,
  }) {
    try {
      return TdlibFunction({
        "@type": "editMessageLiveLocation",
        "chat_id": chat_id,
        "message_id": message_id,
        "reply_markup": (reply_markup != null) ? reply_markup.toJson() : null,
        "location": (location != null) ? location.toJson() : null,
        "heading": heading,
        "proximity_alert_radius": proximity_alert_radius,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method editMessageLiveLocation",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1editMessageMedia.html).
  factory TdlibFunction.editMessageMedia({
    int? chat_id,
    int? message_id,
    ReplyMarkup? reply_markup,
    InputMessageContent? input_message_content,
  }) {
    try {
      return TdlibFunction({
        "@type": "editMessageMedia",
        "chat_id": chat_id,
        "message_id": message_id,
        "reply_markup": (reply_markup != null) ? reply_markup.toJson() : null,
        "input_message_content": (input_message_content != null) ? input_message_content.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method editMessageMedia",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1editMessageCaption.html).
  factory TdlibFunction.editMessageCaption({
    int? chat_id,
    int? message_id,
    ReplyMarkup? reply_markup,
    FormattedText? caption,
  }) {
    try {
      return TdlibFunction({
        "@type": "editMessageCaption",
        "chat_id": chat_id,
        "message_id": message_id,
        "reply_markup": (reply_markup != null) ? reply_markup.toJson() : null,
        "caption": (caption != null) ? caption.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method editMessageCaption",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1editMessageReplyMarkup.html).
  factory TdlibFunction.editMessageReplyMarkup({
    int? chat_id,
    int? message_id,
    ReplyMarkup? reply_markup,
  }) {
    try {
      return TdlibFunction({
        "@type": "editMessageReplyMarkup",
        "chat_id": chat_id,
        "message_id": message_id,
        "reply_markup": (reply_markup != null) ? reply_markup.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method editMessageReplyMarkup",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1editInlineMessageText.html).
  factory TdlibFunction.editInlineMessageText({
    String? inline_message_id,
    ReplyMarkup? reply_markup,
    InputMessageContent? input_message_content,
  }) {
    try {
      return TdlibFunction({
        "@type": "editInlineMessageText",
        "inline_message_id": inline_message_id,
        "reply_markup": (reply_markup != null) ? reply_markup.toJson() : null,
        "input_message_content": (input_message_content != null) ? input_message_content.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method editInlineMessageText",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1editInlineMessageLiveLocation.html).
  factory TdlibFunction.editInlineMessageLiveLocation({
    String? inline_message_id,
    ReplyMarkup? reply_markup,
    Location? location,
    int? heading,
    int? proximity_alert_radius,
  }) {
    try {
      return TdlibFunction({
        "@type": "editInlineMessageLiveLocation",
        "inline_message_id": inline_message_id,
        "reply_markup": (reply_markup != null) ? reply_markup.toJson() : null,
        "location": (location != null) ? location.toJson() : null,
        "heading": heading,
        "proximity_alert_radius": proximity_alert_radius,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method editInlineMessageLiveLocation",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1editInlineMessageMedia.html).
  factory TdlibFunction.editInlineMessageMedia({
    String? inline_message_id,
    ReplyMarkup? reply_markup,
    InputMessageContent? input_message_content,
  }) {
    try {
      return TdlibFunction({
        "@type": "editInlineMessageMedia",
        "inline_message_id": inline_message_id,
        "reply_markup": (reply_markup != null) ? reply_markup.toJson() : null,
        "input_message_content": (input_message_content != null) ? input_message_content.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method editInlineMessageMedia",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1editInlineMessageCaption.html).
  factory TdlibFunction.editInlineMessageCaption({
    String? inline_message_id,
    ReplyMarkup? reply_markup,
    FormattedText? caption,
  }) {
    try {
      return TdlibFunction({
        "@type": "editInlineMessageCaption",
        "inline_message_id": inline_message_id,
        "reply_markup": (reply_markup != null) ? reply_markup.toJson() : null,
        "caption": (caption != null) ? caption.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method editInlineMessageCaption",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1editInlineMessageReplyMarkup.html).
  factory TdlibFunction.editInlineMessageReplyMarkup({
    String? inline_message_id,
    ReplyMarkup? reply_markup,
  }) {
    try {
      return TdlibFunction({
        "@type": "editInlineMessageReplyMarkup",
        "inline_message_id": inline_message_id,
        "reply_markup": (reply_markup != null) ? reply_markup.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method editInlineMessageReplyMarkup",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1editMessageSchedulingState.html).
  factory TdlibFunction.editMessageSchedulingState({
    int? chat_id,
    int? message_id,
    MessageSchedulingState? scheduling_state,
  }) {
    try {
      return TdlibFunction({
        "@type": "editMessageSchedulingState",
        "chat_id": chat_id,
        "message_id": message_id,
        "scheduling_state": (scheduling_state != null) ? scheduling_state.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method editMessageSchedulingState",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getEmojiReaction.html).
  factory TdlibFunction.getEmojiReaction({
    String? emoji,
  }) {
    try {
      return TdlibFunction({
        "@type": "getEmojiReaction",
        "emoji": emoji,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getEmojiReaction",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getCustomEmojiReactionAnimations.html).
  factory TdlibFunction.getCustomEmojiReactionAnimations() {
    try {
      return TdlibFunction({
        "@type": "getCustomEmojiReactionAnimations",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getCustomEmojiReactionAnimations",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMessageAvailableReactions.html).
  factory TdlibFunction.getMessageAvailableReactions({
    int? chat_id,
    int? message_id,
    int? row_size,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMessageAvailableReactions",
        "chat_id": chat_id,
        "message_id": message_id,
        "row_size": row_size,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMessageAvailableReactions",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1clearRecentReactions.html).
  factory TdlibFunction.clearRecentReactions() {
    try {
      return TdlibFunction({
        "@type": "clearRecentReactions",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method clearRecentReactions",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1addMessageReaction.html).
  factory TdlibFunction.addMessageReaction({
    int? chat_id,
    int? message_id,
    ReactionType? reaction_type,
    bool? is_big,
    bool? update_recent_reactions,
  }) {
    try {
      return TdlibFunction({
        "@type": "addMessageReaction",
        "chat_id": chat_id,
        "message_id": message_id,
        "reaction_type": (reaction_type != null) ? reaction_type.toJson() : null,
        "is_big": is_big,
        "update_recent_reactions": update_recent_reactions,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method addMessageReaction",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1removeMessageReaction.html).
  factory TdlibFunction.removeMessageReaction({
    int? chat_id,
    int? message_id,
    ReactionType? reaction_type,
  }) {
    try {
      return TdlibFunction({
        "@type": "removeMessageReaction",
        "chat_id": chat_id,
        "message_id": message_id,
        "reaction_type": (reaction_type != null) ? reaction_type.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method removeMessageReaction",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMessageAddedReactions.html).
  factory TdlibFunction.getMessageAddedReactions({
    int? chat_id,
    int? message_id,
    ReactionType? reaction_type,
    String? offset,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMessageAddedReactions",
        "chat_id": chat_id,
        "message_id": message_id,
        "reaction_type": (reaction_type != null) ? reaction_type.toJson() : null,
        "offset": offset,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMessageAddedReactions",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setDefaultReactionType.html).
  factory TdlibFunction.setDefaultReactionType({
    ReactionType? reaction_type,
  }) {
    try {
      return TdlibFunction({
        "@type": "setDefaultReactionType",
        "reaction_type": (reaction_type != null) ? reaction_type.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setDefaultReactionType",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getTextEntities.html).
  factory TdlibFunction.getTextEntities({
    String? text,
  }) {
    try {
      return TdlibFunction({
        "@type": "getTextEntities",
        "text": text,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getTextEntities",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1parseTextEntities.html).
  factory TdlibFunction.parseTextEntities({
    String? text,
    TextParseMode? parse_mode,
  }) {
    try {
      return TdlibFunction({
        "@type": "parseTextEntities",
        "text": text,
        "parse_mode": (parse_mode != null) ? parse_mode.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method parseTextEntities",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1parseMarkdown.html).
  factory TdlibFunction.parseMarkdown({
    FormattedText? text,
  }) {
    try {
      return TdlibFunction({
        "@type": "parseMarkdown",
        "text": (text != null) ? text.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method parseMarkdown",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMarkdownText.html).
  factory TdlibFunction.getMarkdownText({
    FormattedText? text,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMarkdownText",
        "text": (text != null) ? text.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMarkdownText",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getFileMimeType.html).
  factory TdlibFunction.getFileMimeType({
    String? file_name,
  }) {
    try {
      return TdlibFunction({
        "@type": "getFileMimeType",
        "file_name": file_name,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getFileMimeType",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getFileExtension.html).
  factory TdlibFunction.getFileExtension({
    String? mime_type,
  }) {
    try {
      return TdlibFunction({
        "@type": "getFileExtension",
        "mime_type": mime_type,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getFileExtension",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1cleanFileName.html).
  factory TdlibFunction.cleanFileName({
    String? file_name,
  }) {
    try {
      return TdlibFunction({
        "@type": "cleanFileName",
        "file_name": file_name,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method cleanFileName",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getLanguagePackString.html).
  factory TdlibFunction.getLanguagePackString({
    String? language_pack_database_path,
    String? localization_target,
    String? language_pack_id,
    String? key,
  }) {
    try {
      return TdlibFunction({
        "@type": "getLanguagePackString",
        "language_pack_database_path": language_pack_database_path,
        "localization_target": localization_target,
        "language_pack_id": language_pack_id,
        "key": key,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getLanguagePackString",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getJsonValue.html).
  factory TdlibFunction.getJsonValue({
    String? json,
  }) {
    try {
      return TdlibFunction({
        "@type": "getJsonValue",
        "json": json,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getJsonValue",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getJsonString.html).
  factory TdlibFunction.getJsonString({
    JsonValue? json_value,
  }) {
    try {
      return TdlibFunction({
        "@type": "getJsonString",
        "json_value": (json_value != null) ? json_value.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getJsonString",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getThemeParametersJsonString.html).
  factory TdlibFunction.getThemeParametersJsonString({
    ThemeParameters? theme,
  }) {
    try {
      return TdlibFunction({
        "@type": "getThemeParametersJsonString",
        "theme": (theme != null) ? theme.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getThemeParametersJsonString",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setPollAnswer.html).
  factory TdlibFunction.setPollAnswer({
    int? chat_id,
    int? message_id,
    List<int>? option_ids,
  }) {
    try {
      return TdlibFunction({
        "@type": "setPollAnswer",
        "chat_id": chat_id,
        "message_id": message_id,
        "option_ids": option_ids,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setPollAnswer",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getPollVoters.html).
  factory TdlibFunction.getPollVoters({
    int? chat_id,
    int? message_id,
    int? option_id,
    int? offset,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getPollVoters",
        "chat_id": chat_id,
        "message_id": message_id,
        "option_id": option_id,
        "offset": offset,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getPollVoters",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1stopPoll.html).
  factory TdlibFunction.stopPoll({
    int? chat_id,
    int? message_id,
    ReplyMarkup? reply_markup,
  }) {
    try {
      return TdlibFunction({
        "@type": "stopPoll",
        "chat_id": chat_id,
        "message_id": message_id,
        "reply_markup": (reply_markup != null) ? reply_markup.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method stopPoll",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1hideSuggestedAction.html).
  factory TdlibFunction.hideSuggestedAction({
    SuggestedAction? action,
  }) {
    try {
      return TdlibFunction({
        "@type": "hideSuggestedAction",
        "action": (action != null) ? action.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method hideSuggestedAction",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getLoginUrlInfo.html).
  factory TdlibFunction.getLoginUrlInfo({
    int? chat_id,
    int? message_id,
    int? button_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getLoginUrlInfo",
        "chat_id": chat_id,
        "message_id": message_id,
        "button_id": button_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getLoginUrlInfo",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getLoginUrl.html).
  factory TdlibFunction.getLoginUrl({
    int? chat_id,
    int? message_id,
    int? button_id,
    bool? allow_write_access,
  }) {
    try {
      return TdlibFunction({
        "@type": "getLoginUrl",
        "chat_id": chat_id,
        "message_id": message_id,
        "button_id": button_id,
        "allow_write_access": allow_write_access,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getLoginUrl",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getInlineQueryResults.html).
  factory TdlibFunction.getInlineQueryResults({
    int? bot_user_id,
    int? chat_id,
    Location? user_location,
    String? query,
    String? offset,
  }) {
    try {
      return TdlibFunction({
        "@type": "getInlineQueryResults",
        "bot_user_id": bot_user_id,
        "chat_id": chat_id,
        "user_location": (user_location != null) ? user_location.toJson() : null,
        "query": query,
        "offset": offset,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getInlineQueryResults",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1answerInlineQuery.html).
  factory TdlibFunction.answerInlineQuery({
    int? inline_query_id,
    bool? is_personal,
    List<InputInlineQueryResult>? results,
    int? cache_time,
    String? next_offset,
    String? switch_pm_text,
    String? switch_pm_parameter,
  }) {
    try {
      return TdlibFunction({
        "@type": "answerInlineQuery",
        "inline_query_id": inline_query_id,
        "is_personal": is_personal,
        "results": (results != null)
            ? results.map((e) {
                return InputInlineQueryResult((e as Map)).toJson();
              }).toList()
            : null,
        "cache_time": cache_time,
        "next_offset": next_offset,
        "switch_pm_text": switch_pm_text,
        "switch_pm_parameter": switch_pm_parameter,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method answerInlineQuery",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getWebAppUrl.html).
  factory TdlibFunction.getWebAppUrl({
    int? bot_user_id,
    String? url,
    ThemeParameters? theme,
    String? application_name,
  }) {
    try {
      return TdlibFunction({
        "@type": "getWebAppUrl",
        "bot_user_id": bot_user_id,
        "url": url,
        "theme": (theme != null) ? theme.toJson() : null,
        "application_name": application_name,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getWebAppUrl",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sendWebAppData.html).
  factory TdlibFunction.sendWebAppData({
    int? bot_user_id,
    String? button_text,
    String? data,
  }) {
    try {
      return TdlibFunction({
        "@type": "sendWebAppData",
        "bot_user_id": bot_user_id,
        "button_text": button_text,
        "data": data,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sendWebAppData",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1openWebApp.html).
  factory TdlibFunction.openWebApp({
    int? chat_id,
    int? bot_user_id,
    String? url,
    ThemeParameters? theme,
    String? application_name,
    int? reply_to_message_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "openWebApp",
        "chat_id": chat_id,
        "bot_user_id": bot_user_id,
        "url": url,
        "theme": (theme != null) ? theme.toJson() : null,
        "application_name": application_name,
        "reply_to_message_id": reply_to_message_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method openWebApp",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1closeWebApp.html).
  factory TdlibFunction.closeWebApp({
    int? web_app_launch_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "closeWebApp",
        "web_app_launch_id": web_app_launch_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method closeWebApp",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1answerWebAppQuery.html).
  factory TdlibFunction.answerWebAppQuery({
    String? web_app_query_id,
    InputInlineQueryResult? result,
  }) {
    try {
      return TdlibFunction({
        "@type": "answerWebAppQuery",
        "web_app_query_id": web_app_query_id,
        "result": (result != null) ? result.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method answerWebAppQuery",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getCallbackQueryAnswer.html).
  factory TdlibFunction.getCallbackQueryAnswer({
    int? chat_id,
    int? message_id,
    CallbackQueryPayload? payload,
  }) {
    try {
      return TdlibFunction({
        "@type": "getCallbackQueryAnswer",
        "chat_id": chat_id,
        "message_id": message_id,
        "payload": (payload != null) ? payload.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getCallbackQueryAnswer",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1answerCallbackQuery.html).
  factory TdlibFunction.answerCallbackQuery({
    int? callback_query_id,
    String? text,
    bool? show_alert,
    String? url,
    int? cache_time,
  }) {
    try {
      return TdlibFunction({
        "@type": "answerCallbackQuery",
        "callback_query_id": callback_query_id,
        "text": text,
        "show_alert": show_alert,
        "url": url,
        "cache_time": cache_time,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method answerCallbackQuery",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1answerShippingQuery.html).
  factory TdlibFunction.answerShippingQuery({
    int? shipping_query_id,
    List<ShippingOption>? shipping_options,
    String? error_message,
  }) {
    try {
      return TdlibFunction({
        "@type": "answerShippingQuery",
        "shipping_query_id": shipping_query_id,
        "shipping_options": (shipping_options != null)
            ? shipping_options.map((e) {
                return ShippingOption((e as Map)).toJson();
              }).toList()
            : null,
        "error_message": error_message,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method answerShippingQuery",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1answerPreCheckoutQuery.html).
  factory TdlibFunction.answerPreCheckoutQuery({
    int? pre_checkout_query_id,
    String? error_message,
  }) {
    try {
      return TdlibFunction({
        "@type": "answerPreCheckoutQuery",
        "pre_checkout_query_id": pre_checkout_query_id,
        "error_message": error_message,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method answerPreCheckoutQuery",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setGameScore.html).
  factory TdlibFunction.setGameScore({
    int? chat_id,
    int? message_id,
    bool? edit_message,
    int? user_id,
    int? score,
    bool? force,
  }) {
    try {
      return TdlibFunction({
        "@type": "setGameScore",
        "chat_id": chat_id,
        "message_id": message_id,
        "edit_message": edit_message,
        "user_id": user_id,
        "score": score,
        "force": force,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setGameScore",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setInlineGameScore.html).
  factory TdlibFunction.setInlineGameScore({
    String? inline_message_id,
    bool? edit_message,
    int? user_id,
    int? score,
    bool? force,
  }) {
    try {
      return TdlibFunction({
        "@type": "setInlineGameScore",
        "inline_message_id": inline_message_id,
        "edit_message": edit_message,
        "user_id": user_id,
        "score": score,
        "force": force,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setInlineGameScore",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getGameHighScores.html).
  factory TdlibFunction.getGameHighScores({
    int? chat_id,
    int? message_id,
    int? user_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getGameHighScores",
        "chat_id": chat_id,
        "message_id": message_id,
        "user_id": user_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getGameHighScores",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getInlineGameHighScores.html).
  factory TdlibFunction.getInlineGameHighScores({
    String? inline_message_id,
    int? user_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getInlineGameHighScores",
        "inline_message_id": inline_message_id,
        "user_id": user_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getInlineGameHighScores",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deleteChatReplyMarkup.html).
  factory TdlibFunction.deleteChatReplyMarkup({
    int? chat_id,
    int? message_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "deleteChatReplyMarkup",
        "chat_id": chat_id,
        "message_id": message_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deleteChatReplyMarkup",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sendChatAction.html).
  factory TdlibFunction.sendChatAction({
    int? chat_id,
    int? message_thread_id,
    ChatAction? action,
  }) {
    try {
      return TdlibFunction({
        "@type": "sendChatAction",
        "chat_id": chat_id,
        "message_thread_id": message_thread_id,
        "action": (action != null) ? action.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sendChatAction",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1openChat.html).
  factory TdlibFunction.openChat({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "openChat",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method openChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1closeChat.html).
  factory TdlibFunction.closeChat({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "closeChat",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method closeChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1viewMessages.html).
  factory TdlibFunction.viewMessages({
    int? chat_id,
    int? message_thread_id,
    List<int>? message_ids,
    bool? force_read,
  }) {
    try {
      return TdlibFunction({
        "@type": "viewMessages",
        "chat_id": chat_id,
        "message_thread_id": message_thread_id,
        "message_ids": message_ids,
        "force_read": force_read,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method viewMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1openMessageContent.html).
  factory TdlibFunction.openMessageContent({
    int? chat_id,
    int? message_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "openMessageContent",
        "chat_id": chat_id,
        "message_id": message_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method openMessageContent",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1clickAnimatedEmojiMessage.html).
  factory TdlibFunction.clickAnimatedEmojiMessage({
    int? chat_id,
    int? message_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "clickAnimatedEmojiMessage",
        "chat_id": chat_id,
        "message_id": message_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method clickAnimatedEmojiMessage",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getInternalLinkType.html).
  factory TdlibFunction.getInternalLinkType({
    String? link,
  }) {
    try {
      return TdlibFunction({
        "@type": "getInternalLinkType",
        "link": link,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getInternalLinkType",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getExternalLinkInfo.html).
  factory TdlibFunction.getExternalLinkInfo({
    String? link,
  }) {
    try {
      return TdlibFunction({
        "@type": "getExternalLinkInfo",
        "link": link,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getExternalLinkInfo",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getExternalLink.html).
  factory TdlibFunction.getExternalLink({
    String? link,
    bool? allow_write_access,
  }) {
    try {
      return TdlibFunction({
        "@type": "getExternalLink",
        "link": link,
        "allow_write_access": allow_write_access,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getExternalLink",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1readAllChatMentions.html).
  factory TdlibFunction.readAllChatMentions({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "readAllChatMentions",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method readAllChatMentions",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1readAllChatReactions.html).
  factory TdlibFunction.readAllChatReactions({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "readAllChatReactions",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method readAllChatReactions",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1createPrivateChat.html).
  factory TdlibFunction.createPrivateChat({
    int? user_id,
    bool? force,
  }) {
    try {
      return TdlibFunction({
        "@type": "createPrivateChat",
        "user_id": user_id,
        "force": force,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method createPrivateChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1createBasicGroupChat.html).
  factory TdlibFunction.createBasicGroupChat({
    int? basic_group_id,
    bool? force,
  }) {
    try {
      return TdlibFunction({
        "@type": "createBasicGroupChat",
        "basic_group_id": basic_group_id,
        "force": force,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method createBasicGroupChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1createSupergroupChat.html).
  factory TdlibFunction.createSupergroupChat({
    int? supergroup_id,
    bool? force,
  }) {
    try {
      return TdlibFunction({
        "@type": "createSupergroupChat",
        "supergroup_id": supergroup_id,
        "force": force,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method createSupergroupChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1createSecretChat.html).
  factory TdlibFunction.createSecretChat({
    int? secret_chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "createSecretChat",
        "secret_chat_id": secret_chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method createSecretChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1createNewBasicGroupChat.html).
  factory TdlibFunction.createNewBasicGroupChat({
    List<int>? user_ids,
    String? title,
  }) {
    try {
      return TdlibFunction({
        "@type": "createNewBasicGroupChat",
        "user_ids": user_ids,
        "title": title,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method createNewBasicGroupChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1createNewSupergroupChat.html).
  factory TdlibFunction.createNewSupergroupChat({
    String? title,
    bool? is_channel,
    String? description,
    ChatLocation? location,
    bool? for_import,
  }) {
    try {
      return TdlibFunction({
        "@type": "createNewSupergroupChat",
        "title": title,
        "is_channel": is_channel,
        "description": description,
        "location": (location != null) ? location.toJson() : null,
        "for_import": for_import,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method createNewSupergroupChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1createNewSecretChat.html).
  factory TdlibFunction.createNewSecretChat({
    int? user_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "createNewSecretChat",
        "user_id": user_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method createNewSecretChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1upgradeBasicGroupChatToSupergroupChat.html).
  factory TdlibFunction.upgradeBasicGroupChatToSupergroupChat({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "upgradeBasicGroupChatToSupergroupChat",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method upgradeBasicGroupChatToSupergroupChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatListsToAddChat.html).
  factory TdlibFunction.getChatListsToAddChat({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatListsToAddChat",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatListsToAddChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1addChatToList.html).
  factory TdlibFunction.addChatToList({
    int? chat_id,
    ChatList? chat_list,
  }) {
    try {
      return TdlibFunction({
        "@type": "addChatToList",
        "chat_id": chat_id,
        "chat_list": (chat_list != null) ? chat_list.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method addChatToList",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatFilter.html).
  factory TdlibFunction.getChatFilter({
    int? chat_filter_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatFilter",
        "chat_filter_id": chat_filter_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatFilter",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1createChatFilter.html).
  factory TdlibFunction.createChatFilter({
    ChatFilter? filter,
  }) {
    try {
      return TdlibFunction({
        "@type": "createChatFilter",
        "filter": (filter != null) ? filter.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method createChatFilter",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1editChatFilter.html).
  factory TdlibFunction.editChatFilter({
    int? chat_filter_id,
    ChatFilter? filter,
  }) {
    try {
      return TdlibFunction({
        "@type": "editChatFilter",
        "chat_filter_id": chat_filter_id,
        "filter": (filter != null) ? filter.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method editChatFilter",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deleteChatFilter.html).
  factory TdlibFunction.deleteChatFilter({
    int? chat_filter_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "deleteChatFilter",
        "chat_filter_id": chat_filter_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deleteChatFilter",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1reorderChatFilters.html).
  factory TdlibFunction.reorderChatFilters({
    List<int>? chat_filter_ids,
    int? main_chat_list_position,
  }) {
    try {
      return TdlibFunction({
        "@type": "reorderChatFilters",
        "chat_filter_ids": chat_filter_ids,
        "main_chat_list_position": main_chat_list_position,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method reorderChatFilters",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getRecommendedChatFilters.html).
  factory TdlibFunction.getRecommendedChatFilters() {
    try {
      return TdlibFunction({
        "@type": "getRecommendedChatFilters",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getRecommendedChatFilters",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatFilterDefaultIconName.html).
  factory TdlibFunction.getChatFilterDefaultIconName({
    ChatFilter? filter,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatFilterDefaultIconName",
        "filter": (filter != null) ? filter.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatFilterDefaultIconName",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setChatTitle.html).
  factory TdlibFunction.setChatTitle({
    int? chat_id,
    String? title,
  }) {
    try {
      return TdlibFunction({
        "@type": "setChatTitle",
        "chat_id": chat_id,
        "title": title,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setChatTitle",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setChatPhoto.html).
  factory TdlibFunction.setChatPhoto({
    int? chat_id,
    InputChatPhoto? photo,
  }) {
    try {
      return TdlibFunction({
        "@type": "setChatPhoto",
        "chat_id": chat_id,
        "photo": (photo != null) ? photo.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setChatPhoto",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setChatMessageTtl.html).
  factory TdlibFunction.setChatMessageTtl({
    int? chat_id,
    int? ttl,
  }) {
    try {
      return TdlibFunction({
        "@type": "setChatMessageTtl",
        "chat_id": chat_id,
        "ttl": ttl,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setChatMessageTtl",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setChatPermissions.html).
  factory TdlibFunction.setChatPermissions({
    int? chat_id,
    ChatPermissions? permissions,
  }) {
    try {
      return TdlibFunction({
        "@type": "setChatPermissions",
        "chat_id": chat_id,
        "permissions": (permissions != null) ? permissions.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setChatPermissions",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setChatTheme.html).
  factory TdlibFunction.setChatTheme({
    int? chat_id,
    String? theme_name,
  }) {
    try {
      return TdlibFunction({
        "@type": "setChatTheme",
        "chat_id": chat_id,
        "theme_name": theme_name,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setChatTheme",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setChatDraftMessage.html).
  factory TdlibFunction.setChatDraftMessage({
    int? chat_id,
    int? message_thread_id,
    DraftMessage? draft_message,
  }) {
    try {
      return TdlibFunction({
        "@type": "setChatDraftMessage",
        "chat_id": chat_id,
        "message_thread_id": message_thread_id,
        "draft_message": (draft_message != null) ? draft_message.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setChatDraftMessage",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setChatNotificationSettings.html).
  factory TdlibFunction.setChatNotificationSettings({
    int? chat_id,
    ChatNotificationSettings? notification_settings,
  }) {
    try {
      return TdlibFunction({
        "@type": "setChatNotificationSettings",
        "chat_id": chat_id,
        "notification_settings": (notification_settings != null) ? notification_settings.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setChatNotificationSettings",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleChatHasProtectedContent.html).
  factory TdlibFunction.toggleChatHasProtectedContent({
    int? chat_id,
    bool? has_protected_content,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleChatHasProtectedContent",
        "chat_id": chat_id,
        "has_protected_content": has_protected_content,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleChatHasProtectedContent",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleChatIsMarkedAsUnread.html).
  factory TdlibFunction.toggleChatIsMarkedAsUnread({
    int? chat_id,
    bool? is_marked_as_unread,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleChatIsMarkedAsUnread",
        "chat_id": chat_id,
        "is_marked_as_unread": is_marked_as_unread,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleChatIsMarkedAsUnread",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleChatDefaultDisableNotification.html).
  factory TdlibFunction.toggleChatDefaultDisableNotification({
    int? chat_id,
    bool? default_disable_notification,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleChatDefaultDisableNotification",
        "chat_id": chat_id,
        "default_disable_notification": default_disable_notification,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleChatDefaultDisableNotification",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setChatAvailableReactions.html).
  factory TdlibFunction.setChatAvailableReactions({
    int? chat_id,
    ChatAvailableReactions? available_reactions,
  }) {
    try {
      return TdlibFunction({
        "@type": "setChatAvailableReactions",
        "chat_id": chat_id,
        "available_reactions": (available_reactions != null) ? available_reactions.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setChatAvailableReactions",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setChatClientData.html).
  factory TdlibFunction.setChatClientData({
    int? chat_id,
    String? client_data,
  }) {
    try {
      return TdlibFunction({
        "@type": "setChatClientData",
        "chat_id": chat_id,
        "client_data": client_data,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setChatClientData",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setChatDescription.html).
  factory TdlibFunction.setChatDescription({
    int? chat_id,
    String? description,
  }) {
    try {
      return TdlibFunction({
        "@type": "setChatDescription",
        "chat_id": chat_id,
        "description": description,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setChatDescription",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setChatDiscussionGroup.html).
  factory TdlibFunction.setChatDiscussionGroup({
    int? chat_id,
    int? discussion_chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "setChatDiscussionGroup",
        "chat_id": chat_id,
        "discussion_chat_id": discussion_chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setChatDiscussionGroup",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setChatLocation.html).
  factory TdlibFunction.setChatLocation({
    int? chat_id,
    ChatLocation? location,
  }) {
    try {
      return TdlibFunction({
        "@type": "setChatLocation",
        "chat_id": chat_id,
        "location": (location != null) ? location.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setChatLocation",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setChatSlowModeDelay.html).
  factory TdlibFunction.setChatSlowModeDelay({
    int? chat_id,
    int? slow_mode_delay,
  }) {
    try {
      return TdlibFunction({
        "@type": "setChatSlowModeDelay",
        "chat_id": chat_id,
        "slow_mode_delay": slow_mode_delay,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setChatSlowModeDelay",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1pinChatMessage.html).
  factory TdlibFunction.pinChatMessage({
    int? chat_id,
    int? message_id,
    bool? disable_notification,
    bool? only_for_self,
  }) {
    try {
      return TdlibFunction({
        "@type": "pinChatMessage",
        "chat_id": chat_id,
        "message_id": message_id,
        "disable_notification": disable_notification,
        "only_for_self": only_for_self,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method pinChatMessage",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1unpinChatMessage.html).
  factory TdlibFunction.unpinChatMessage({
    int? chat_id,
    int? message_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "unpinChatMessage",
        "chat_id": chat_id,
        "message_id": message_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method unpinChatMessage",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1unpinAllChatMessages.html).
  factory TdlibFunction.unpinAllChatMessages({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "unpinAllChatMessages",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method unpinAllChatMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1joinChat.html).
  factory TdlibFunction.joinChat({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "joinChat",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method joinChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1leaveChat.html).
  factory TdlibFunction.leaveChat({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "leaveChat",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method leaveChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1addChatMember.html).
  factory TdlibFunction.addChatMember({
    int? chat_id,
    int? user_id,
    int? forward_limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "addChatMember",
        "chat_id": chat_id,
        "user_id": user_id,
        "forward_limit": forward_limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method addChatMember",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1addChatMembers.html).
  factory TdlibFunction.addChatMembers({
    int? chat_id,
    List<int>? user_ids,
  }) {
    try {
      return TdlibFunction({
        "@type": "addChatMembers",
        "chat_id": chat_id,
        "user_ids": user_ids,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method addChatMembers",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setChatMemberStatus.html).
  factory TdlibFunction.setChatMemberStatus({
    int? chat_id,
    MessageSender? member_id,
    ChatMemberStatus? status,
  }) {
    try {
      return TdlibFunction({
        "@type": "setChatMemberStatus",
        "chat_id": chat_id,
        "member_id": (member_id != null) ? member_id.toJson() : null,
        "status": (status != null) ? status.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setChatMemberStatus",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1banChatMember.html).
  factory TdlibFunction.banChatMember({
    int? chat_id,
    MessageSender? member_id,
    int? banned_until_date,
    bool? revoke_messages,
  }) {
    try {
      return TdlibFunction({
        "@type": "banChatMember",
        "chat_id": chat_id,
        "member_id": (member_id != null) ? member_id.toJson() : null,
        "banned_until_date": banned_until_date,
        "revoke_messages": revoke_messages,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method banChatMember",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1canTransferOwnership.html).
  factory TdlibFunction.canTransferOwnership() {
    try {
      return TdlibFunction({
        "@type": "canTransferOwnership",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method canTransferOwnership",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1transferChatOwnership.html).
  factory TdlibFunction.transferChatOwnership({
    int? chat_id,
    int? user_id,
    String? password,
  }) {
    try {
      return TdlibFunction({
        "@type": "transferChatOwnership",
        "chat_id": chat_id,
        "user_id": user_id,
        "password": password,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method transferChatOwnership",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatMember.html).
  factory TdlibFunction.getChatMember({
    int? chat_id,
    MessageSender? member_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatMember",
        "chat_id": chat_id,
        "member_id": (member_id != null) ? member_id.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatMember",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchChatMembers.html).
  factory TdlibFunction.searchChatMembers({
    int? chat_id,
    String? query,
    int? limit,
    ChatMembersFilter? filter,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchChatMembers",
        "chat_id": chat_id,
        "query": query,
        "limit": limit,
        "filter": (filter != null) ? filter.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchChatMembers",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatAdministrators.html).
  factory TdlibFunction.getChatAdministrators({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatAdministrators",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatAdministrators",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1clearAllDraftMessages.html).
  factory TdlibFunction.clearAllDraftMessages({
    bool? exclude_secret_chats,
  }) {
    try {
      return TdlibFunction({
        "@type": "clearAllDraftMessages",
        "exclude_secret_chats": exclude_secret_chats,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method clearAllDraftMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getSavedNotificationSound.html).
  factory TdlibFunction.getSavedNotificationSound({
    int? notification_sound_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getSavedNotificationSound",
        "notification_sound_id": notification_sound_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getSavedNotificationSound",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getSavedNotificationSounds.html).
  factory TdlibFunction.getSavedNotificationSounds() {
    try {
      return TdlibFunction({
        "@type": "getSavedNotificationSounds",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getSavedNotificationSounds",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1addSavedNotificationSound.html).
  factory TdlibFunction.addSavedNotificationSound({
    InputFile? sound,
  }) {
    try {
      return TdlibFunction({
        "@type": "addSavedNotificationSound",
        "sound": (sound != null) ? sound.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method addSavedNotificationSound",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1removeSavedNotificationSound.html).
  factory TdlibFunction.removeSavedNotificationSound({
    int? notification_sound_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "removeSavedNotificationSound",
        "notification_sound_id": notification_sound_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method removeSavedNotificationSound",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatNotificationSettingsExceptions.html).
  factory TdlibFunction.getChatNotificationSettingsExceptions({
    NotificationSettingsScope? scope,
    bool? compare_sound,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatNotificationSettingsExceptions",
        "scope": (scope != null) ? scope.toJson() : null,
        "compare_sound": compare_sound,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatNotificationSettingsExceptions",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getScopeNotificationSettings.html).
  factory TdlibFunction.getScopeNotificationSettings({
    NotificationSettingsScope? scope,
  }) {
    try {
      return TdlibFunction({
        "@type": "getScopeNotificationSettings",
        "scope": (scope != null) ? scope.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getScopeNotificationSettings",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setScopeNotificationSettings.html).
  factory TdlibFunction.setScopeNotificationSettings({
    NotificationSettingsScope? scope,
    ScopeNotificationSettings? notification_settings,
  }) {
    try {
      return TdlibFunction({
        "@type": "setScopeNotificationSettings",
        "scope": (scope != null) ? scope.toJson() : null,
        "notification_settings": (notification_settings != null) ? notification_settings.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setScopeNotificationSettings",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1resetAllNotificationSettings.html).
  factory TdlibFunction.resetAllNotificationSettings() {
    try {
      return TdlibFunction({
        "@type": "resetAllNotificationSettings",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method resetAllNotificationSettings",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleChatIsPinned.html).
  factory TdlibFunction.toggleChatIsPinned({
    ChatList? chat_list,
    int? chat_id,
    bool? is_pinned,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleChatIsPinned",
        "chat_list": (chat_list != null) ? chat_list.toJson() : null,
        "chat_id": chat_id,
        "is_pinned": is_pinned,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleChatIsPinned",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setPinnedChats.html).
  factory TdlibFunction.setPinnedChats({
    ChatList? chat_list,
    List<int>? chat_ids,
  }) {
    try {
      return TdlibFunction({
        "@type": "setPinnedChats",
        "chat_list": (chat_list != null) ? chat_list.toJson() : null,
        "chat_ids": chat_ids,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setPinnedChats",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getAttachmentMenuBot.html).
  factory TdlibFunction.getAttachmentMenuBot({
    int? bot_user_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getAttachmentMenuBot",
        "bot_user_id": bot_user_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getAttachmentMenuBot",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleBotIsAddedToAttachmentMenu.html).
  factory TdlibFunction.toggleBotIsAddedToAttachmentMenu({
    int? bot_user_id,
    bool? is_added,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleBotIsAddedToAttachmentMenu",
        "bot_user_id": bot_user_id,
        "is_added": is_added,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleBotIsAddedToAttachmentMenu",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getThemedEmojiStatuses.html).
  factory TdlibFunction.getThemedEmojiStatuses() {
    try {
      return TdlibFunction({
        "@type": "getThemedEmojiStatuses",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getThemedEmojiStatuses",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getRecentEmojiStatuses.html).
  factory TdlibFunction.getRecentEmojiStatuses() {
    try {
      return TdlibFunction({
        "@type": "getRecentEmojiStatuses",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getRecentEmojiStatuses",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getDefaultEmojiStatuses.html).
  factory TdlibFunction.getDefaultEmojiStatuses() {
    try {
      return TdlibFunction({
        "@type": "getDefaultEmojiStatuses",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getDefaultEmojiStatuses",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1clearRecentEmojiStatuses.html).
  factory TdlibFunction.clearRecentEmojiStatuses() {
    try {
      return TdlibFunction({
        "@type": "clearRecentEmojiStatuses",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method clearRecentEmojiStatuses",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1downloadFile.html).
  factory TdlibFunction.downloadFile({
    int? file_id,
    int? priority,
    int? offset,
    int? limit,
    bool? synchronous,
  }) {
    try {
      return TdlibFunction({
        "@type": "downloadFile",
        "file_id": file_id,
        "priority": priority,
        "offset": offset,
        "limit": limit,
        "synchronous": synchronous,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method downloadFile",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getFileDownloadedPrefixSize.html).
  factory TdlibFunction.getFileDownloadedPrefixSize({
    int? file_id,
    int? offset,
  }) {
    try {
      return TdlibFunction({
        "@type": "getFileDownloadedPrefixSize",
        "file_id": file_id,
        "offset": offset,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getFileDownloadedPrefixSize",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1cancelDownloadFile.html).
  factory TdlibFunction.cancelDownloadFile({
    int? file_id,
    bool? only_if_pending,
  }) {
    try {
      return TdlibFunction({
        "@type": "cancelDownloadFile",
        "file_id": file_id,
        "only_if_pending": only_if_pending,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method cancelDownloadFile",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getSuggestedFileName.html).
  factory TdlibFunction.getSuggestedFileName({
    int? file_id,
    String? directory,
  }) {
    try {
      return TdlibFunction({
        "@type": "getSuggestedFileName",
        "file_id": file_id,
        "directory": directory,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getSuggestedFileName",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1preliminaryUploadFile.html).
  factory TdlibFunction.preliminaryUploadFile({
    InputFile? file,
    FileType? file_type,
    int? priority,
  }) {
    try {
      return TdlibFunction({
        "@type": "preliminaryUploadFile",
        "file": (file != null) ? file.toJson() : null,
        "file_type": (file_type != null) ? file_type.toJson() : null,
        "priority": priority,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method preliminaryUploadFile",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1cancelPreliminaryUploadFile.html).
  factory TdlibFunction.cancelPreliminaryUploadFile({
    int? file_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "cancelPreliminaryUploadFile",
        "file_id": file_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method cancelPreliminaryUploadFile",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1writeGeneratedFilePart.html).
  factory TdlibFunction.writeGeneratedFilePart({
    int? generation_id,
    int? offset,
    String? data,
  }) {
    try {
      return TdlibFunction({
        "@type": "writeGeneratedFilePart",
        "generation_id": generation_id,
        "offset": offset,
        "data": data,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method writeGeneratedFilePart",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setFileGenerationProgress.html).
  factory TdlibFunction.setFileGenerationProgress({
    int? generation_id,
    int? expected_size,
    int? local_prefix_size,
  }) {
    try {
      return TdlibFunction({
        "@type": "setFileGenerationProgress",
        "generation_id": generation_id,
        "expected_size": expected_size,
        "local_prefix_size": local_prefix_size,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setFileGenerationProgress",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1finishFileGeneration.html).
  factory TdlibFunction.finishFileGeneration({
    int? generation_id,
    Error? error,
  }) {
    try {
      return TdlibFunction({
        "@type": "finishFileGeneration",
        "generation_id": generation_id,
        "error": (error != null) ? error.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method finishFileGeneration",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1readFilePart.html).
  factory TdlibFunction.readFilePart({
    int? file_id,
    int? offset,
    int? count,
  }) {
    try {
      return TdlibFunction({
        "@type": "readFilePart",
        "file_id": file_id,
        "offset": offset,
        "count": count,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method readFilePart",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deleteFile.html).
  factory TdlibFunction.deleteFile({
    int? file_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "deleteFile",
        "file_id": file_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deleteFile",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1addFileToDownloads.html).
  factory TdlibFunction.addFileToDownloads({
    int? file_id,
    int? chat_id,
    int? message_id,
    int? priority,
  }) {
    try {
      return TdlibFunction({
        "@type": "addFileToDownloads",
        "file_id": file_id,
        "chat_id": chat_id,
        "message_id": message_id,
        "priority": priority,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method addFileToDownloads",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleDownloadIsPaused.html).
  factory TdlibFunction.toggleDownloadIsPaused({
    int? file_id,
    bool? is_paused,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleDownloadIsPaused",
        "file_id": file_id,
        "is_paused": is_paused,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleDownloadIsPaused",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleAllDownloadsArePaused.html).
  factory TdlibFunction.toggleAllDownloadsArePaused({
    bool? are_paused,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleAllDownloadsArePaused",
        "are_paused": are_paused,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleAllDownloadsArePaused",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1removeFileFromDownloads.html).
  factory TdlibFunction.removeFileFromDownloads({
    int? file_id,
    bool? delete_from_cache,
  }) {
    try {
      return TdlibFunction({
        "@type": "removeFileFromDownloads",
        "file_id": file_id,
        "delete_from_cache": delete_from_cache,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method removeFileFromDownloads",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1removeAllFilesFromDownloads.html).
  factory TdlibFunction.removeAllFilesFromDownloads({
    bool? only_active,
    bool? only_completed,
    bool? delete_from_cache,
  }) {
    try {
      return TdlibFunction({
        "@type": "removeAllFilesFromDownloads",
        "only_active": only_active,
        "only_completed": only_completed,
        "delete_from_cache": delete_from_cache,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method removeAllFilesFromDownloads",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchFileDownloads.html).
  factory TdlibFunction.searchFileDownloads({
    String? query,
    bool? only_active,
    bool? only_completed,
    String? offset,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchFileDownloads",
        "query": query,
        "only_active": only_active,
        "only_completed": only_completed,
        "offset": offset,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchFileDownloads",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMessageFileType.html).
  factory TdlibFunction.getMessageFileType({
    String? message_file_head,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMessageFileType",
        "message_file_head": message_file_head,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMessageFileType",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMessageImportConfirmationText.html).
  factory TdlibFunction.getMessageImportConfirmationText({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMessageImportConfirmationText",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMessageImportConfirmationText",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1importMessages.html).
  factory TdlibFunction.importMessages({
    int? chat_id,
    InputFile? message_file,
    List<InputFile>? attached_files,
  }) {
    try {
      return TdlibFunction({
        "@type": "importMessages",
        "chat_id": chat_id,
        "message_file": (message_file != null) ? message_file.toJson() : null,
        "attached_files": (attached_files != null)
            ? attached_files.map((e) {
                return InputFile((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method importMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1replacePrimaryChatInviteLink.html).
  factory TdlibFunction.replacePrimaryChatInviteLink({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "replacePrimaryChatInviteLink",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method replacePrimaryChatInviteLink",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1createChatInviteLink.html).
  factory TdlibFunction.createChatInviteLink({
    int? chat_id,
    String? name,
    int? expiration_date,
    int? member_limit,
    bool? creates_join_request,
  }) {
    try {
      return TdlibFunction({
        "@type": "createChatInviteLink",
        "chat_id": chat_id,
        "name": name,
        "expiration_date": expiration_date,
        "member_limit": member_limit,
        "creates_join_request": creates_join_request,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method createChatInviteLink",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1editChatInviteLink.html).
  factory TdlibFunction.editChatInviteLink({
    int? chat_id,
    String? invite_link,
    String? name,
    int? expiration_date,
    int? member_limit,
    bool? creates_join_request,
  }) {
    try {
      return TdlibFunction({
        "@type": "editChatInviteLink",
        "chat_id": chat_id,
        "invite_link": invite_link,
        "name": name,
        "expiration_date": expiration_date,
        "member_limit": member_limit,
        "creates_join_request": creates_join_request,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method editChatInviteLink",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatInviteLink.html).
  factory TdlibFunction.getChatInviteLink({
    int? chat_id,
    String? invite_link,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatInviteLink",
        "chat_id": chat_id,
        "invite_link": invite_link,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatInviteLink",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatInviteLinkCounts.html).
  factory TdlibFunction.getChatInviteLinkCounts({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatInviteLinkCounts",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatInviteLinkCounts",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatInviteLinks.html).
  factory TdlibFunction.getChatInviteLinks({
    int? chat_id,
    int? creator_user_id,
    bool? is_revoked,
    int? offset_date,
    String? offset_invite_link,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatInviteLinks",
        "chat_id": chat_id,
        "creator_user_id": creator_user_id,
        "is_revoked": is_revoked,
        "offset_date": offset_date,
        "offset_invite_link": offset_invite_link,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatInviteLinks",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatInviteLinkMembers.html).
  factory TdlibFunction.getChatInviteLinkMembers({
    int? chat_id,
    String? invite_link,
    ChatInviteLinkMember? offset_member,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatInviteLinkMembers",
        "chat_id": chat_id,
        "invite_link": invite_link,
        "offset_member": (offset_member != null) ? offset_member.toJson() : null,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatInviteLinkMembers",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1revokeChatInviteLink.html).
  factory TdlibFunction.revokeChatInviteLink({
    int? chat_id,
    String? invite_link,
  }) {
    try {
      return TdlibFunction({
        "@type": "revokeChatInviteLink",
        "chat_id": chat_id,
        "invite_link": invite_link,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method revokeChatInviteLink",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deleteRevokedChatInviteLink.html).
  factory TdlibFunction.deleteRevokedChatInviteLink({
    int? chat_id,
    String? invite_link,
  }) {
    try {
      return TdlibFunction({
        "@type": "deleteRevokedChatInviteLink",
        "chat_id": chat_id,
        "invite_link": invite_link,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deleteRevokedChatInviteLink",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deleteAllRevokedChatInviteLinks.html).
  factory TdlibFunction.deleteAllRevokedChatInviteLinks({
    int? chat_id,
    int? creator_user_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "deleteAllRevokedChatInviteLinks",
        "chat_id": chat_id,
        "creator_user_id": creator_user_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deleteAllRevokedChatInviteLinks",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1checkChatInviteLink.html).
  factory TdlibFunction.checkChatInviteLink({
    String? invite_link,
  }) {
    try {
      return TdlibFunction({
        "@type": "checkChatInviteLink",
        "invite_link": invite_link,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method checkChatInviteLink",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1joinChatByInviteLink.html).
  factory TdlibFunction.joinChatByInviteLink({
    String? invite_link,
  }) {
    try {
      return TdlibFunction({
        "@type": "joinChatByInviteLink",
        "invite_link": invite_link,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method joinChatByInviteLink",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatJoinRequests.html).
  factory TdlibFunction.getChatJoinRequests({
    int? chat_id,
    String? invite_link,
    String? query,
    ChatJoinRequest? offset_request,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatJoinRequests",
        "chat_id": chat_id,
        "invite_link": invite_link,
        "query": query,
        "offset_request": (offset_request != null) ? offset_request.toJson() : null,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatJoinRequests",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1processChatJoinRequest.html).
  factory TdlibFunction.processChatJoinRequest({
    int? chat_id,
    int? user_id,
    bool? approve,
  }) {
    try {
      return TdlibFunction({
        "@type": "processChatJoinRequest",
        "chat_id": chat_id,
        "user_id": user_id,
        "approve": approve,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method processChatJoinRequest",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1processChatJoinRequests.html).
  factory TdlibFunction.processChatJoinRequests({
    int? chat_id,
    String? invite_link,
    bool? approve,
  }) {
    try {
      return TdlibFunction({
        "@type": "processChatJoinRequests",
        "chat_id": chat_id,
        "invite_link": invite_link,
        "approve": approve,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method processChatJoinRequests",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1createCall.html).
  factory TdlibFunction.createCall({
    int? user_id,
    CallProtocol? protocol,
    bool? is_video,
  }) {
    try {
      return TdlibFunction({
        "@type": "createCall",
        "user_id": user_id,
        "protocol": (protocol != null) ? protocol.toJson() : null,
        "is_video": is_video,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method createCall",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1acceptCall.html).
  factory TdlibFunction.acceptCall({
    int? call_id,
    CallProtocol? protocol,
  }) {
    try {
      return TdlibFunction({
        "@type": "acceptCall",
        "call_id": call_id,
        "protocol": (protocol != null) ? protocol.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method acceptCall",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sendCallSignalingData.html).
  factory TdlibFunction.sendCallSignalingData({
    int? call_id,
    String? data,
  }) {
    try {
      return TdlibFunction({
        "@type": "sendCallSignalingData",
        "call_id": call_id,
        "data": data,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sendCallSignalingData",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1discardCall.html).
  factory TdlibFunction.discardCall({
    int? call_id,
    bool? is_disconnected,
    int? duration,
    bool? is_video,
    int? connection_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "discardCall",
        "call_id": call_id,
        "is_disconnected": is_disconnected,
        "duration": duration,
        "is_video": is_video,
        "connection_id": connection_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method discardCall",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sendCallRating.html).
  factory TdlibFunction.sendCallRating({
    int? call_id,
    int? rating,
    String? comment,
    List<CallProblem>? problems,
  }) {
    try {
      return TdlibFunction({
        "@type": "sendCallRating",
        "call_id": call_id,
        "rating": rating,
        "comment": comment,
        "problems": (problems != null)
            ? problems.map((e) {
                return CallProblem((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sendCallRating",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sendCallDebugInformation.html).
  factory TdlibFunction.sendCallDebugInformation({
    int? call_id,
    String? debug_information,
  }) {
    try {
      return TdlibFunction({
        "@type": "sendCallDebugInformation",
        "call_id": call_id,
        "debug_information": debug_information,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sendCallDebugInformation",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sendCallLog.html).
  factory TdlibFunction.sendCallLog({
    int? call_id,
    InputFile? log_file,
  }) {
    try {
      return TdlibFunction({
        "@type": "sendCallLog",
        "call_id": call_id,
        "log_file": (log_file != null) ? log_file.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sendCallLog",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getVideoChatAvailableParticipants.html).
  factory TdlibFunction.getVideoChatAvailableParticipants({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getVideoChatAvailableParticipants",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getVideoChatAvailableParticipants",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setVideoChatDefaultParticipant.html).
  factory TdlibFunction.setVideoChatDefaultParticipant({
    int? chat_id,
    MessageSender? default_participant_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "setVideoChatDefaultParticipant",
        "chat_id": chat_id,
        "default_participant_id": (default_participant_id != null) ? default_participant_id.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setVideoChatDefaultParticipant",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1createVideoChat.html).
  factory TdlibFunction.createVideoChat({
    int? chat_id,
    String? title,
    int? start_date,
    bool? is_rtmp_stream,
  }) {
    try {
      return TdlibFunction({
        "@type": "createVideoChat",
        "chat_id": chat_id,
        "title": title,
        "start_date": start_date,
        "is_rtmp_stream": is_rtmp_stream,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method createVideoChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getVideoChatRtmpUrl.html).
  factory TdlibFunction.getVideoChatRtmpUrl({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getVideoChatRtmpUrl",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getVideoChatRtmpUrl",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1replaceVideoChatRtmpUrl.html).
  factory TdlibFunction.replaceVideoChatRtmpUrl({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "replaceVideoChatRtmpUrl",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method replaceVideoChatRtmpUrl",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getGroupCall.html).
  factory TdlibFunction.getGroupCall({
    int? group_call_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getGroupCall",
        "group_call_id": group_call_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getGroupCall",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1startScheduledGroupCall.html).
  factory TdlibFunction.startScheduledGroupCall({
    int? group_call_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "startScheduledGroupCall",
        "group_call_id": group_call_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method startScheduledGroupCall",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleGroupCallEnabledStartNotification.html).
  factory TdlibFunction.toggleGroupCallEnabledStartNotification({
    int? group_call_id,
    bool? enabled_start_notification,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleGroupCallEnabledStartNotification",
        "group_call_id": group_call_id,
        "enabled_start_notification": enabled_start_notification,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleGroupCallEnabledStartNotification",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1joinGroupCall.html).
  factory TdlibFunction.joinGroupCall({
    int? group_call_id,
    MessageSender? participant_id,
    int? audio_source_id,
    String? payload,
    bool? is_muted,
    bool? is_my_video_enabled,
    String? invite_hash,
  }) {
    try {
      return TdlibFunction({
        "@type": "joinGroupCall",
        "group_call_id": group_call_id,
        "participant_id": (participant_id != null) ? participant_id.toJson() : null,
        "audio_source_id": audio_source_id,
        "payload": payload,
        "is_muted": is_muted,
        "is_my_video_enabled": is_my_video_enabled,
        "invite_hash": invite_hash,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method joinGroupCall",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1startGroupCallScreenSharing.html).
  factory TdlibFunction.startGroupCallScreenSharing({
    int? group_call_id,
    int? audio_source_id,
    String? payload,
  }) {
    try {
      return TdlibFunction({
        "@type": "startGroupCallScreenSharing",
        "group_call_id": group_call_id,
        "audio_source_id": audio_source_id,
        "payload": payload,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method startGroupCallScreenSharing",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleGroupCallScreenSharingIsPaused.html).
  factory TdlibFunction.toggleGroupCallScreenSharingIsPaused({
    int? group_call_id,
    bool? is_paused,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleGroupCallScreenSharingIsPaused",
        "group_call_id": group_call_id,
        "is_paused": is_paused,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleGroupCallScreenSharingIsPaused",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1endGroupCallScreenSharing.html).
  factory TdlibFunction.endGroupCallScreenSharing({
    int? group_call_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "endGroupCallScreenSharing",
        "group_call_id": group_call_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method endGroupCallScreenSharing",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setGroupCallTitle.html).
  factory TdlibFunction.setGroupCallTitle({
    int? group_call_id,
    String? title,
  }) {
    try {
      return TdlibFunction({
        "@type": "setGroupCallTitle",
        "group_call_id": group_call_id,
        "title": title,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setGroupCallTitle",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleGroupCallMuteNewParticipants.html).
  factory TdlibFunction.toggleGroupCallMuteNewParticipants({
    int? group_call_id,
    bool? mute_new_participants,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleGroupCallMuteNewParticipants",
        "group_call_id": group_call_id,
        "mute_new_participants": mute_new_participants,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleGroupCallMuteNewParticipants",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1inviteGroupCallParticipants.html).
  factory TdlibFunction.inviteGroupCallParticipants({
    int? group_call_id,
    List<int>? user_ids,
  }) {
    try {
      return TdlibFunction({
        "@type": "inviteGroupCallParticipants",
        "group_call_id": group_call_id,
        "user_ids": user_ids,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method inviteGroupCallParticipants",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getGroupCallInviteLink.html).
  factory TdlibFunction.getGroupCallInviteLink({
    int? group_call_id,
    bool? can_self_unmute,
  }) {
    try {
      return TdlibFunction({
        "@type": "getGroupCallInviteLink",
        "group_call_id": group_call_id,
        "can_self_unmute": can_self_unmute,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getGroupCallInviteLink",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1revokeGroupCallInviteLink.html).
  factory TdlibFunction.revokeGroupCallInviteLink({
    int? group_call_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "revokeGroupCallInviteLink",
        "group_call_id": group_call_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method revokeGroupCallInviteLink",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1startGroupCallRecording.html).
  factory TdlibFunction.startGroupCallRecording({
    int? group_call_id,
    String? title,
    bool? record_video,
    bool? use_portrait_orientation,
  }) {
    try {
      return TdlibFunction({
        "@type": "startGroupCallRecording",
        "group_call_id": group_call_id,
        "title": title,
        "record_video": record_video,
        "use_portrait_orientation": use_portrait_orientation,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method startGroupCallRecording",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1endGroupCallRecording.html).
  factory TdlibFunction.endGroupCallRecording({
    int? group_call_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "endGroupCallRecording",
        "group_call_id": group_call_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method endGroupCallRecording",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleGroupCallIsMyVideoPaused.html).
  factory TdlibFunction.toggleGroupCallIsMyVideoPaused({
    int? group_call_id,
    bool? is_my_video_paused,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleGroupCallIsMyVideoPaused",
        "group_call_id": group_call_id,
        "is_my_video_paused": is_my_video_paused,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleGroupCallIsMyVideoPaused",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleGroupCallIsMyVideoEnabled.html).
  factory TdlibFunction.toggleGroupCallIsMyVideoEnabled({
    int? group_call_id,
    bool? is_my_video_enabled,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleGroupCallIsMyVideoEnabled",
        "group_call_id": group_call_id,
        "is_my_video_enabled": is_my_video_enabled,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleGroupCallIsMyVideoEnabled",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setGroupCallParticipantIsSpeaking.html).
  factory TdlibFunction.setGroupCallParticipantIsSpeaking({
    int? group_call_id,
    int? audio_source,
    bool? is_speaking,
  }) {
    try {
      return TdlibFunction({
        "@type": "setGroupCallParticipantIsSpeaking",
        "group_call_id": group_call_id,
        "audio_source": audio_source,
        "is_speaking": is_speaking,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setGroupCallParticipantIsSpeaking",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleGroupCallParticipantIsMuted.html).
  factory TdlibFunction.toggleGroupCallParticipantIsMuted({
    int? group_call_id,
    MessageSender? participant_id,
    bool? is_muted,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleGroupCallParticipantIsMuted",
        "group_call_id": group_call_id,
        "participant_id": (participant_id != null) ? participant_id.toJson() : null,
        "is_muted": is_muted,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleGroupCallParticipantIsMuted",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setGroupCallParticipantVolumeLevel.html).
  factory TdlibFunction.setGroupCallParticipantVolumeLevel({
    int? group_call_id,
    MessageSender? participant_id,
    int? volume_level,
  }) {
    try {
      return TdlibFunction({
        "@type": "setGroupCallParticipantVolumeLevel",
        "group_call_id": group_call_id,
        "participant_id": (participant_id != null) ? participant_id.toJson() : null,
        "volume_level": volume_level,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setGroupCallParticipantVolumeLevel",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleGroupCallParticipantIsHandRaised.html).
  factory TdlibFunction.toggleGroupCallParticipantIsHandRaised({
    int? group_call_id,
    MessageSender? participant_id,
    bool? is_hand_raised,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleGroupCallParticipantIsHandRaised",
        "group_call_id": group_call_id,
        "participant_id": (participant_id != null) ? participant_id.toJson() : null,
        "is_hand_raised": is_hand_raised,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleGroupCallParticipantIsHandRaised",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1loadGroupCallParticipants.html).
  factory TdlibFunction.loadGroupCallParticipants({
    int? group_call_id,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "loadGroupCallParticipants",
        "group_call_id": group_call_id,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method loadGroupCallParticipants",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1leaveGroupCall.html).
  factory TdlibFunction.leaveGroupCall({
    int? group_call_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "leaveGroupCall",
        "group_call_id": group_call_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method leaveGroupCall",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1endGroupCall.html).
  factory TdlibFunction.endGroupCall({
    int? group_call_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "endGroupCall",
        "group_call_id": group_call_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method endGroupCall",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getGroupCallStreams.html).
  factory TdlibFunction.getGroupCallStreams({
    int? group_call_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getGroupCallStreams",
        "group_call_id": group_call_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getGroupCallStreams",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getGroupCallStreamSegment.html).
  factory TdlibFunction.getGroupCallStreamSegment({
    int? group_call_id,
    int? time_offset,
    int? scale,
    int? channel_id,
    GroupCallVideoQuality? video_quality,
  }) {
    try {
      return TdlibFunction({
        "@type": "getGroupCallStreamSegment",
        "group_call_id": group_call_id,
        "time_offset": time_offset,
        "scale": scale,
        "channel_id": channel_id,
        "video_quality": (video_quality != null) ? video_quality.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getGroupCallStreamSegment",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleMessageSenderIsBlocked.html).
  factory TdlibFunction.toggleMessageSenderIsBlocked({
    MessageSender? sender_id,
    bool? is_blocked,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleMessageSenderIsBlocked",
        "sender_id": (sender_id != null) ? sender_id.toJson() : null,
        "is_blocked": is_blocked,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleMessageSenderIsBlocked",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1blockMessageSenderFromReplies.html).
  factory TdlibFunction.blockMessageSenderFromReplies({
    int? message_id,
    bool? delete_message,
    bool? delete_all_messages,
    bool? report_spam,
  }) {
    try {
      return TdlibFunction({
        "@type": "blockMessageSenderFromReplies",
        "message_id": message_id,
        "delete_message": delete_message,
        "delete_all_messages": delete_all_messages,
        "report_spam": report_spam,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method blockMessageSenderFromReplies",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getBlockedMessageSenders.html).
  factory TdlibFunction.getBlockedMessageSenders({
    int? offset,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getBlockedMessageSenders",
        "offset": offset,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getBlockedMessageSenders",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1addContact.html).
  factory TdlibFunction.addContact({
    Contact? contact,
    bool? share_phone_number,
  }) {
    try {
      return TdlibFunction({
        "@type": "addContact",
        "contact": (contact != null) ? contact.toJson() : null,
        "share_phone_number": share_phone_number,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method addContact",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1importContacts.html).
  factory TdlibFunction.importContacts({
    List<Contact>? contacts,
  }) {
    try {
      return TdlibFunction({
        "@type": "importContacts",
        "contacts": (contacts != null)
            ? contacts.map((e) {
                return Contact((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method importContacts",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getContacts.html).
  factory TdlibFunction.getContacts() {
    try {
      return TdlibFunction({
        "@type": "getContacts",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getContacts",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchContacts.html).
  factory TdlibFunction.searchContacts({
    String? query,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchContacts",
        "query": query,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchContacts",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1removeContacts.html).
  factory TdlibFunction.removeContacts({
    List<int>? user_ids,
  }) {
    try {
      return TdlibFunction({
        "@type": "removeContacts",
        "user_ids": user_ids,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method removeContacts",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getImportedContactCount.html).
  factory TdlibFunction.getImportedContactCount() {
    try {
      return TdlibFunction({
        "@type": "getImportedContactCount",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getImportedContactCount",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1changeImportedContacts.html).
  factory TdlibFunction.changeImportedContacts({
    List<Contact>? contacts,
  }) {
    try {
      return TdlibFunction({
        "@type": "changeImportedContacts",
        "contacts": (contacts != null)
            ? contacts.map((e) {
                return Contact((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method changeImportedContacts",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1clearImportedContacts.html).
  factory TdlibFunction.clearImportedContacts() {
    try {
      return TdlibFunction({
        "@type": "clearImportedContacts",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method clearImportedContacts",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchUserByPhoneNumber.html).
  factory TdlibFunction.searchUserByPhoneNumber({
    String? phone_number,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchUserByPhoneNumber",
        "phone_number": phone_number,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchUserByPhoneNumber",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sharePhoneNumber.html).
  factory TdlibFunction.sharePhoneNumber({
    int? user_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "sharePhoneNumber",
        "user_id": user_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sharePhoneNumber",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getUserProfilePhotos.html).
  factory TdlibFunction.getUserProfilePhotos({
    int? user_id,
    int? offset,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getUserProfilePhotos",
        "user_id": user_id,
        "offset": offset,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getUserProfilePhotos",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getStickers.html).
  factory TdlibFunction.getStickers({
    StickerType? sticker_type,
    String? query,
    int? limit,
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getStickers",
        "sticker_type": (sticker_type != null) ? sticker_type.toJson() : null,
        "query": query,
        "limit": limit,
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getStickers",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchStickers.html).
  factory TdlibFunction.searchStickers({
    String? emoji,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchStickers",
        "emoji": emoji,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchStickers",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getPremiumStickers.html).
  factory TdlibFunction.getPremiumStickers({
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getPremiumStickers",
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getPremiumStickers",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getInstalledStickerSets.html).
  factory TdlibFunction.getInstalledStickerSets({
    StickerType? sticker_type,
  }) {
    try {
      return TdlibFunction({
        "@type": "getInstalledStickerSets",
        "sticker_type": (sticker_type != null) ? sticker_type.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getInstalledStickerSets",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getArchivedStickerSets.html).
  factory TdlibFunction.getArchivedStickerSets({
    StickerType? sticker_type,
    int? offset_sticker_set_id,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getArchivedStickerSets",
        "sticker_type": (sticker_type != null) ? sticker_type.toJson() : null,
        "offset_sticker_set_id": offset_sticker_set_id,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getArchivedStickerSets",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getTrendingStickerSets.html).
  factory TdlibFunction.getTrendingStickerSets({
    StickerType? sticker_type,
    int? offset,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getTrendingStickerSets",
        "sticker_type": (sticker_type != null) ? sticker_type.toJson() : null,
        "offset": offset,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getTrendingStickerSets",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getAttachedStickerSets.html).
  factory TdlibFunction.getAttachedStickerSets({
    int? file_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getAttachedStickerSets",
        "file_id": file_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getAttachedStickerSets",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getStickerSet.html).
  factory TdlibFunction.getStickerSet({
    int? set_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getStickerSet",
        "set_id": set_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getStickerSet",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchStickerSet.html).
  factory TdlibFunction.searchStickerSet({
    String? name,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchStickerSet",
        "name": name,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchStickerSet",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchInstalledStickerSets.html).
  factory TdlibFunction.searchInstalledStickerSets({
    StickerType? sticker_type,
    String? query,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchInstalledStickerSets",
        "sticker_type": (sticker_type != null) ? sticker_type.toJson() : null,
        "query": query,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchInstalledStickerSets",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchStickerSets.html).
  factory TdlibFunction.searchStickerSets({
    String? query,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchStickerSets",
        "query": query,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchStickerSets",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1changeStickerSet.html).
  factory TdlibFunction.changeStickerSet({
    int? set_id,
    bool? is_installed,
    bool? is_archived,
  }) {
    try {
      return TdlibFunction({
        "@type": "changeStickerSet",
        "set_id": set_id,
        "is_installed": is_installed,
        "is_archived": is_archived,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method changeStickerSet",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1viewTrendingStickerSets.html).
  factory TdlibFunction.viewTrendingStickerSets({
    List<int>? sticker_set_ids,
  }) {
    try {
      return TdlibFunction({
        "@type": "viewTrendingStickerSets",
        "sticker_set_ids": sticker_set_ids,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method viewTrendingStickerSets",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1reorderInstalledStickerSets.html).
  factory TdlibFunction.reorderInstalledStickerSets({
    StickerType? sticker_type,
    List<int>? sticker_set_ids,
  }) {
    try {
      return TdlibFunction({
        "@type": "reorderInstalledStickerSets",
        "sticker_type": (sticker_type != null) ? sticker_type.toJson() : null,
        "sticker_set_ids": sticker_set_ids,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method reorderInstalledStickerSets",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getRecentStickers.html).
  factory TdlibFunction.getRecentStickers({
    bool? is_attached,
  }) {
    try {
      return TdlibFunction({
        "@type": "getRecentStickers",
        "is_attached": is_attached,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getRecentStickers",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1addRecentSticker.html).
  factory TdlibFunction.addRecentSticker({
    bool? is_attached,
    InputFile? sticker,
  }) {
    try {
      return TdlibFunction({
        "@type": "addRecentSticker",
        "is_attached": is_attached,
        "sticker": (sticker != null) ? sticker.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method addRecentSticker",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1removeRecentSticker.html).
  factory TdlibFunction.removeRecentSticker({
    bool? is_attached,
    InputFile? sticker,
  }) {
    try {
      return TdlibFunction({
        "@type": "removeRecentSticker",
        "is_attached": is_attached,
        "sticker": (sticker != null) ? sticker.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method removeRecentSticker",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1clearRecentStickers.html).
  factory TdlibFunction.clearRecentStickers({
    bool? is_attached,
  }) {
    try {
      return TdlibFunction({
        "@type": "clearRecentStickers",
        "is_attached": is_attached,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method clearRecentStickers",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getFavoriteStickers.html).
  factory TdlibFunction.getFavoriteStickers() {
    try {
      return TdlibFunction({
        "@type": "getFavoriteStickers",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getFavoriteStickers",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1addFavoriteSticker.html).
  factory TdlibFunction.addFavoriteSticker({
    InputFile? sticker,
  }) {
    try {
      return TdlibFunction({
        "@type": "addFavoriteSticker",
        "sticker": (sticker != null) ? sticker.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method addFavoriteSticker",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1removeFavoriteSticker.html).
  factory TdlibFunction.removeFavoriteSticker({
    InputFile? sticker,
  }) {
    try {
      return TdlibFunction({
        "@type": "removeFavoriteSticker",
        "sticker": (sticker != null) ? sticker.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method removeFavoriteSticker",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getStickerEmojis.html).
  factory TdlibFunction.getStickerEmojis({
    InputFile? sticker,
  }) {
    try {
      return TdlibFunction({
        "@type": "getStickerEmojis",
        "sticker": (sticker != null) ? sticker.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getStickerEmojis",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchEmojis.html).
  factory TdlibFunction.searchEmojis({
    String? text,
    bool? exact_match,
    List<String>? input_language_codes,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchEmojis",
        "text": text,
        "exact_match": exact_match,
        "input_language_codes": input_language_codes,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchEmojis",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getAnimatedEmoji.html).
  factory TdlibFunction.getAnimatedEmoji({
    String? emoji,
  }) {
    try {
      return TdlibFunction({
        "@type": "getAnimatedEmoji",
        "emoji": emoji,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getAnimatedEmoji",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getEmojiSuggestionsUrl.html).
  factory TdlibFunction.getEmojiSuggestionsUrl({
    String? language_code,
  }) {
    try {
      return TdlibFunction({
        "@type": "getEmojiSuggestionsUrl",
        "language_code": language_code,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getEmojiSuggestionsUrl",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getCustomEmojiStickers.html).
  factory TdlibFunction.getCustomEmojiStickers({
    List<int>? custom_emoji_ids,
  }) {
    try {
      return TdlibFunction({
        "@type": "getCustomEmojiStickers",
        "custom_emoji_ids": custom_emoji_ids,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getCustomEmojiStickers",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getSavedAnimations.html).
  factory TdlibFunction.getSavedAnimations() {
    try {
      return TdlibFunction({
        "@type": "getSavedAnimations",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getSavedAnimations",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1addSavedAnimation.html).
  factory TdlibFunction.addSavedAnimation({
    InputFile? animation,
  }) {
    try {
      return TdlibFunction({
        "@type": "addSavedAnimation",
        "animation": (animation != null) ? animation.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method addSavedAnimation",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1removeSavedAnimation.html).
  factory TdlibFunction.removeSavedAnimation({
    InputFile? animation,
  }) {
    try {
      return TdlibFunction({
        "@type": "removeSavedAnimation",
        "animation": (animation != null) ? animation.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method removeSavedAnimation",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getRecentInlineBots.html).
  factory TdlibFunction.getRecentInlineBots() {
    try {
      return TdlibFunction({
        "@type": "getRecentInlineBots",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getRecentInlineBots",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchHashtags.html).
  factory TdlibFunction.searchHashtags({
    String? prefix,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchHashtags",
        "prefix": prefix,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchHashtags",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1removeRecentHashtag.html).
  factory TdlibFunction.removeRecentHashtag({
    String? hashtag,
  }) {
    try {
      return TdlibFunction({
        "@type": "removeRecentHashtag",
        "hashtag": hashtag,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method removeRecentHashtag",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getWebPagePreview.html).
  factory TdlibFunction.getWebPagePreview({
    FormattedText? text,
  }) {
    try {
      return TdlibFunction({
        "@type": "getWebPagePreview",
        "text": (text != null) ? text.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getWebPagePreview",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getWebPageInstantView.html).
  factory TdlibFunction.getWebPageInstantView({
    String? url,
    bool? force_full,
  }) {
    try {
      return TdlibFunction({
        "@type": "getWebPageInstantView",
        "url": url,
        "force_full": force_full,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getWebPageInstantView",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setProfilePhoto.html).
  factory TdlibFunction.setProfilePhoto({
    InputChatPhoto? photo,
  }) {
    try {
      return TdlibFunction({
        "@type": "setProfilePhoto",
        "photo": (photo != null) ? photo.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setProfilePhoto",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deleteProfilePhoto.html).
  factory TdlibFunction.deleteProfilePhoto({
    int? profile_photo_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "deleteProfilePhoto",
        "profile_photo_id": profile_photo_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deleteProfilePhoto",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setName.html).
  factory TdlibFunction.setName({
    String? first_name,
    String? last_name,
  }) {
    try {
      return TdlibFunction({
        "@type": "setName",
        "first_name": first_name,
        "last_name": last_name,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setName",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setBio.html).
  factory TdlibFunction.setBio({
    String? bio,
  }) {
    try {
      return TdlibFunction({
        "@type": "setBio",
        "bio": bio,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setBio",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setUsername.html).
  factory TdlibFunction.setUsername({
    String? username,
  }) {
    try {
      return TdlibFunction({
        "@type": "setUsername",
        "username": username,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setUsername",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setEmojiStatus.html).
  factory TdlibFunction.setEmojiStatus({
    EmojiStatus? emoji_status,
    int? duration,
  }) {
    try {
      return TdlibFunction({
        "@type": "setEmojiStatus",
        "emoji_status": (emoji_status != null) ? emoji_status.toJson() : null,
        "duration": duration,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setEmojiStatus",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setLocation.html).
  factory TdlibFunction.setLocation({
    Location? location,
  }) {
    try {
      return TdlibFunction({
        "@type": "setLocation",
        "location": (location != null) ? location.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setLocation",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1changePhoneNumber.html).
  factory TdlibFunction.changePhoneNumber({
    String? phone_number,
    PhoneNumberAuthenticationSettings? settings,
  }) {
    try {
      return TdlibFunction({
        "@type": "changePhoneNumber",
        "phone_number": phone_number,
        "settings": (settings != null) ? settings.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method changePhoneNumber",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1resendChangePhoneNumberCode.html).
  factory TdlibFunction.resendChangePhoneNumberCode() {
    try {
      return TdlibFunction({
        "@type": "resendChangePhoneNumberCode",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method resendChangePhoneNumberCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1checkChangePhoneNumberCode.html).
  factory TdlibFunction.checkChangePhoneNumberCode({
    String? code,
  }) {
    try {
      return TdlibFunction({
        "@type": "checkChangePhoneNumberCode",
        "code": code,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method checkChangePhoneNumberCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setCommands.html).
  factory TdlibFunction.setCommands({
    BotCommandScope? scope,
    String? language_code,
    List<BotCommand>? commands,
  }) {
    try {
      return TdlibFunction({
        "@type": "setCommands",
        "scope": (scope != null) ? scope.toJson() : null,
        "language_code": language_code,
        "commands": (commands != null)
            ? commands.map((e) {
                return BotCommand((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setCommands",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deleteCommands.html).
  factory TdlibFunction.deleteCommands({
    BotCommandScope? scope,
    String? language_code,
  }) {
    try {
      return TdlibFunction({
        "@type": "deleteCommands",
        "scope": (scope != null) ? scope.toJson() : null,
        "language_code": language_code,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deleteCommands",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getCommands.html).
  factory TdlibFunction.getCommands({
    BotCommandScope? scope,
    String? language_code,
  }) {
    try {
      return TdlibFunction({
        "@type": "getCommands",
        "scope": (scope != null) ? scope.toJson() : null,
        "language_code": language_code,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getCommands",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setMenuButton.html).
  factory TdlibFunction.setMenuButton({
    int? user_id,
    BotMenuButton? menu_button,
  }) {
    try {
      return TdlibFunction({
        "@type": "setMenuButton",
        "user_id": user_id,
        "menu_button": (menu_button != null) ? menu_button.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setMenuButton",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMenuButton.html).
  factory TdlibFunction.getMenuButton({
    int? user_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMenuButton",
        "user_id": user_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMenuButton",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setDefaultGroupAdministratorRights.html).
  factory TdlibFunction.setDefaultGroupAdministratorRights({
    ChatAdministratorRights? default_group_administrator_rights,
  }) {
    try {
      return TdlibFunction({
        "@type": "setDefaultGroupAdministratorRights",
        "default_group_administrator_rights": (default_group_administrator_rights != null) ? default_group_administrator_rights.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setDefaultGroupAdministratorRights",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setDefaultChannelAdministratorRights.html).
  factory TdlibFunction.setDefaultChannelAdministratorRights({
    ChatAdministratorRights? default_channel_administrator_rights,
  }) {
    try {
      return TdlibFunction({
        "@type": "setDefaultChannelAdministratorRights",
        "default_channel_administrator_rights": (default_channel_administrator_rights != null) ? default_channel_administrator_rights.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setDefaultChannelAdministratorRights",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getActiveSessions.html).
  factory TdlibFunction.getActiveSessions() {
    try {
      return TdlibFunction({
        "@type": "getActiveSessions",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getActiveSessions",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1terminateSession.html).
  factory TdlibFunction.terminateSession({
    int? session_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "terminateSession",
        "session_id": session_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method terminateSession",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1terminateAllOtherSessions.html).
  factory TdlibFunction.terminateAllOtherSessions() {
    try {
      return TdlibFunction({
        "@type": "terminateAllOtherSessions",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method terminateAllOtherSessions",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleSessionCanAcceptCalls.html).
  factory TdlibFunction.toggleSessionCanAcceptCalls({
    int? session_id,
    bool? can_accept_calls,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleSessionCanAcceptCalls",
        "session_id": session_id,
        "can_accept_calls": can_accept_calls,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleSessionCanAcceptCalls",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleSessionCanAcceptSecretChats.html).
  factory TdlibFunction.toggleSessionCanAcceptSecretChats({
    int? session_id,
    bool? can_accept_secret_chats,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleSessionCanAcceptSecretChats",
        "session_id": session_id,
        "can_accept_secret_chats": can_accept_secret_chats,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleSessionCanAcceptSecretChats",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setInactiveSessionTtl.html).
  factory TdlibFunction.setInactiveSessionTtl({
    int? inactive_session_ttl_days,
  }) {
    try {
      return TdlibFunction({
        "@type": "setInactiveSessionTtl",
        "inactive_session_ttl_days": inactive_session_ttl_days,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setInactiveSessionTtl",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getConnectedWebsites.html).
  factory TdlibFunction.getConnectedWebsites() {
    try {
      return TdlibFunction({
        "@type": "getConnectedWebsites",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getConnectedWebsites",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1disconnectWebsite.html).
  factory TdlibFunction.disconnectWebsite({
    int? website_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "disconnectWebsite",
        "website_id": website_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method disconnectWebsite",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1disconnectAllWebsites.html).
  factory TdlibFunction.disconnectAllWebsites() {
    try {
      return TdlibFunction({
        "@type": "disconnectAllWebsites",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method disconnectAllWebsites",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setSupergroupUsername.html).
  factory TdlibFunction.setSupergroupUsername({
    int? supergroup_id,
    String? username,
  }) {
    try {
      return TdlibFunction({
        "@type": "setSupergroupUsername",
        "supergroup_id": supergroup_id,
        "username": username,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setSupergroupUsername",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setSupergroupStickerSet.html).
  factory TdlibFunction.setSupergroupStickerSet({
    int? supergroup_id,
    int? sticker_set_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "setSupergroupStickerSet",
        "supergroup_id": supergroup_id,
        "sticker_set_id": sticker_set_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setSupergroupStickerSet",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleSupergroupSignMessages.html).
  factory TdlibFunction.toggleSupergroupSignMessages({
    int? supergroup_id,
    bool? sign_messages,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleSupergroupSignMessages",
        "supergroup_id": supergroup_id,
        "sign_messages": sign_messages,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleSupergroupSignMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleSupergroupJoinToSendMessages.html).
  factory TdlibFunction.toggleSupergroupJoinToSendMessages({
    int? supergroup_id,
    bool? join_to_send_messages,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleSupergroupJoinToSendMessages",
        "supergroup_id": supergroup_id,
        "join_to_send_messages": join_to_send_messages,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleSupergroupJoinToSendMessages",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleSupergroupJoinByRequest.html).
  factory TdlibFunction.toggleSupergroupJoinByRequest({
    int? supergroup_id,
    bool? join_by_request,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleSupergroupJoinByRequest",
        "supergroup_id": supergroup_id,
        "join_by_request": join_by_request,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleSupergroupJoinByRequest",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleSupergroupIsAllHistoryAvailable.html).
  factory TdlibFunction.toggleSupergroupIsAllHistoryAvailable({
    int? supergroup_id,
    bool? is_all_history_available,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleSupergroupIsAllHistoryAvailable",
        "supergroup_id": supergroup_id,
        "is_all_history_available": is_all_history_available,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleSupergroupIsAllHistoryAvailable",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1toggleSupergroupIsBroadcastGroup.html).
  factory TdlibFunction.toggleSupergroupIsBroadcastGroup({
    int? supergroup_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "toggleSupergroupIsBroadcastGroup",
        "supergroup_id": supergroup_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method toggleSupergroupIsBroadcastGroup",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1reportSupergroupSpam.html).
  factory TdlibFunction.reportSupergroupSpam({
    int? supergroup_id,
    List<int>? message_ids,
  }) {
    try {
      return TdlibFunction({
        "@type": "reportSupergroupSpam",
        "supergroup_id": supergroup_id,
        "message_ids": message_ids,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method reportSupergroupSpam",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getSupergroupMembers.html).
  factory TdlibFunction.getSupergroupMembers({
    int? supergroup_id,
    SupergroupMembersFilter? filter,
    int? offset,
    int? limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getSupergroupMembers",
        "supergroup_id": supergroup_id,
        "filter": (filter != null) ? filter.toJson() : null,
        "offset": offset,
        "limit": limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getSupergroupMembers",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1closeSecretChat.html).
  factory TdlibFunction.closeSecretChat({
    int? secret_chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "closeSecretChat",
        "secret_chat_id": secret_chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method closeSecretChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatEventLog.html).
  factory TdlibFunction.getChatEventLog({
    int? chat_id,
    String? query,
    int? from_event_id,
    int? limit,
    ChatEventLogFilters? filters,
    List<int>? user_ids,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatEventLog",
        "chat_id": chat_id,
        "query": query,
        "from_event_id": from_event_id,
        "limit": limit,
        "filters": (filters != null) ? filters.toJson() : null,
        "user_ids": user_ids,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatEventLog",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getPaymentForm.html).
  factory TdlibFunction.getPaymentForm({
    InputInvoice? input_invoice,
    ThemeParameters? theme,
  }) {
    try {
      return TdlibFunction({
        "@type": "getPaymentForm",
        "input_invoice": (input_invoice != null) ? input_invoice.toJson() : null,
        "theme": (theme != null) ? theme.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getPaymentForm",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1validateOrderInfo.html).
  factory TdlibFunction.validateOrderInfo({
    InputInvoice? input_invoice,
    OrderInfo? order_info,
    bool? allow_save,
  }) {
    try {
      return TdlibFunction({
        "@type": "validateOrderInfo",
        "input_invoice": (input_invoice != null) ? input_invoice.toJson() : null,
        "order_info": (order_info != null) ? order_info.toJson() : null,
        "allow_save": allow_save,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method validateOrderInfo",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sendPaymentForm.html).
  factory TdlibFunction.sendPaymentForm({
    InputInvoice? input_invoice,
    int? payment_form_id,
    String? order_info_id,
    String? shipping_option_id,
    InputCredentials? credentials,
    int? tip_amount,
  }) {
    try {
      return TdlibFunction({
        "@type": "sendPaymentForm",
        "input_invoice": (input_invoice != null) ? input_invoice.toJson() : null,
        "payment_form_id": payment_form_id,
        "order_info_id": order_info_id,
        "shipping_option_id": shipping_option_id,
        "credentials": (credentials != null) ? credentials.toJson() : null,
        "tip_amount": tip_amount,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sendPaymentForm",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getPaymentReceipt.html).
  factory TdlibFunction.getPaymentReceipt({
    int? chat_id,
    int? message_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getPaymentReceipt",
        "chat_id": chat_id,
        "message_id": message_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getPaymentReceipt",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getSavedOrderInfo.html).
  factory TdlibFunction.getSavedOrderInfo() {
    try {
      return TdlibFunction({
        "@type": "getSavedOrderInfo",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getSavedOrderInfo",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deleteSavedOrderInfo.html).
  factory TdlibFunction.deleteSavedOrderInfo() {
    try {
      return TdlibFunction({
        "@type": "deleteSavedOrderInfo",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deleteSavedOrderInfo",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deleteSavedCredentials.html).
  factory TdlibFunction.deleteSavedCredentials() {
    try {
      return TdlibFunction({
        "@type": "deleteSavedCredentials",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deleteSavedCredentials",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1createInvoiceLink.html).
  factory TdlibFunction.createInvoiceLink({
    InputMessageContent? invoice,
  }) {
    try {
      return TdlibFunction({
        "@type": "createInvoiceLink",
        "invoice": (invoice != null) ? invoice.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method createInvoiceLink",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getSupportUser.html).
  factory TdlibFunction.getSupportUser() {
    try {
      return TdlibFunction({
        "@type": "getSupportUser",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getSupportUser",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getBackgrounds.html).
  factory TdlibFunction.getBackgrounds({
    bool? for_dark_theme,
  }) {
    try {
      return TdlibFunction({
        "@type": "getBackgrounds",
        "for_dark_theme": for_dark_theme,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getBackgrounds",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getBackgroundUrl.html).
  factory TdlibFunction.getBackgroundUrl({
    String? name,
    BackgroundType? type,
  }) {
    try {
      return TdlibFunction({
        "@type": "getBackgroundUrl",
        "name": name,
        "type": (type != null) ? type.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getBackgroundUrl",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1searchBackground.html).
  factory TdlibFunction.searchBackground({
    String? name,
  }) {
    try {
      return TdlibFunction({
        "@type": "searchBackground",
        "name": name,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method searchBackground",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setBackground.html).
  factory TdlibFunction.setBackground({
    InputBackground? background,
    BackgroundType? type,
    bool? for_dark_theme,
  }) {
    try {
      return TdlibFunction({
        "@type": "setBackground",
        "background": (background != null) ? background.toJson() : null,
        "type": (type != null) ? type.toJson() : null,
        "for_dark_theme": for_dark_theme,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setBackground",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1removeBackground.html).
  factory TdlibFunction.removeBackground({
    int? background_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "removeBackground",
        "background_id": background_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method removeBackground",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1resetBackgrounds.html).
  factory TdlibFunction.resetBackgrounds() {
    try {
      return TdlibFunction({
        "@type": "resetBackgrounds",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method resetBackgrounds",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getLocalizationTargetInfo.html).
  factory TdlibFunction.getLocalizationTargetInfo({
    bool? only_local,
  }) {
    try {
      return TdlibFunction({
        "@type": "getLocalizationTargetInfo",
        "only_local": only_local,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getLocalizationTargetInfo",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getLanguagePackInfo.html).
  factory TdlibFunction.getLanguagePackInfo({
    String? language_pack_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getLanguagePackInfo",
        "language_pack_id": language_pack_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getLanguagePackInfo",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getLanguagePackStrings.html).
  factory TdlibFunction.getLanguagePackStrings({
    String? language_pack_id,
    List<String>? keys,
  }) {
    try {
      return TdlibFunction({
        "@type": "getLanguagePackStrings",
        "language_pack_id": language_pack_id,
        "keys": keys,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getLanguagePackStrings",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1synchronizeLanguagePack.html).
  factory TdlibFunction.synchronizeLanguagePack({
    String? language_pack_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "synchronizeLanguagePack",
        "language_pack_id": language_pack_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method synchronizeLanguagePack",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1addCustomServerLanguagePack.html).
  factory TdlibFunction.addCustomServerLanguagePack({
    String? language_pack_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "addCustomServerLanguagePack",
        "language_pack_id": language_pack_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method addCustomServerLanguagePack",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setCustomLanguagePack.html).
  factory TdlibFunction.setCustomLanguagePack({
    LanguagePackInfo? info,
    List<LanguagePackString>? strings,
  }) {
    try {
      return TdlibFunction({
        "@type": "setCustomLanguagePack",
        "info": (info != null) ? info.toJson() : null,
        "strings": (strings != null)
            ? strings.map((e) {
                return LanguagePackString((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setCustomLanguagePack",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1editCustomLanguagePackInfo.html).
  factory TdlibFunction.editCustomLanguagePackInfo({
    LanguagePackInfo? info,
  }) {
    try {
      return TdlibFunction({
        "@type": "editCustomLanguagePackInfo",
        "info": (info != null) ? info.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method editCustomLanguagePackInfo",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setCustomLanguagePackString.html).
  factory TdlibFunction.setCustomLanguagePackString({
    String? language_pack_id,
    LanguagePackString? new_string,
  }) {
    try {
      return TdlibFunction({
        "@type": "setCustomLanguagePackString",
        "language_pack_id": language_pack_id,
        "new_string": (new_string != null) ? new_string.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setCustomLanguagePackString",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deleteLanguagePack.html).
  factory TdlibFunction.deleteLanguagePack({
    String? language_pack_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "deleteLanguagePack",
        "language_pack_id": language_pack_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deleteLanguagePack",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1registerDevice.html).
  factory TdlibFunction.registerDevice({
    DeviceToken? device_token,
    List<int>? other_user_ids,
  }) {
    try {
      return TdlibFunction({
        "@type": "registerDevice",
        "device_token": (device_token != null) ? device_token.toJson() : null,
        "other_user_ids": other_user_ids,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method registerDevice",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1processPushNotification.html).
  factory TdlibFunction.processPushNotification({
    String? payload,
  }) {
    try {
      return TdlibFunction({
        "@type": "processPushNotification",
        "payload": payload,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method processPushNotification",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getPushReceiverId.html).
  factory TdlibFunction.getPushReceiverId({
    String? payload,
  }) {
    try {
      return TdlibFunction({
        "@type": "getPushReceiverId",
        "payload": payload,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getPushReceiverId",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getRecentlyVisitedTMeUrls.html).
  factory TdlibFunction.getRecentlyVisitedTMeUrls({
    String? referrer,
  }) {
    try {
      return TdlibFunction({
        "@type": "getRecentlyVisitedTMeUrls",
        "referrer": referrer,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getRecentlyVisitedTMeUrls",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setUserPrivacySettingRules.html).
  factory TdlibFunction.setUserPrivacySettingRules({
    UserPrivacySetting? setting,
    UserPrivacySettingRules? rules,
  }) {
    try {
      return TdlibFunction({
        "@type": "setUserPrivacySettingRules",
        "setting": (setting != null) ? setting.toJson() : null,
        "rules": (rules != null) ? rules.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setUserPrivacySettingRules",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getUserPrivacySettingRules.html).
  factory TdlibFunction.getUserPrivacySettingRules({
    UserPrivacySetting? setting,
  }) {
    try {
      return TdlibFunction({
        "@type": "getUserPrivacySettingRules",
        "setting": (setting != null) ? setting.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getUserPrivacySettingRules",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getOption.html).
  factory TdlibFunction.getOption({
    String? name,
  }) {
    try {
      return TdlibFunction({
        "@type": "getOption",
        "name": name,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getOption",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setOption.html).
  factory TdlibFunction.setOption({
    String? name,
    OptionValue? value,
  }) {
    try {
      return TdlibFunction({
        "@type": "setOption",
        "name": name,
        "value": (value != null) ? value.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setOption",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setAccountTtl.html).
  factory TdlibFunction.setAccountTtl({
    AccountTtl? ttl,
  }) {
    try {
      return TdlibFunction({
        "@type": "setAccountTtl",
        "ttl": (ttl != null) ? ttl.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setAccountTtl",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getAccountTtl.html).
  factory TdlibFunction.getAccountTtl() {
    try {
      return TdlibFunction({
        "@type": "getAccountTtl",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getAccountTtl",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deleteAccount.html).
  factory TdlibFunction.deleteAccount({
    String? reason,
    String? password,
  }) {
    try {
      return TdlibFunction({
        "@type": "deleteAccount",
        "reason": reason,
        "password": password,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deleteAccount",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1removeChatActionBar.html).
  factory TdlibFunction.removeChatActionBar({
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "removeChatActionBar",
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method removeChatActionBar",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1reportChat.html).
  factory TdlibFunction.reportChat({
    int? chat_id,
    List<int>? message_ids,
    ChatReportReason? reason,
    String? text,
  }) {
    try {
      return TdlibFunction({
        "@type": "reportChat",
        "chat_id": chat_id,
        "message_ids": message_ids,
        "reason": (reason != null) ? reason.toJson() : null,
        "text": text,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method reportChat",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1reportChatPhoto.html).
  factory TdlibFunction.reportChatPhoto({
    int? chat_id,
    int? file_id,
    ChatReportReason? reason,
    String? text,
  }) {
    try {
      return TdlibFunction({
        "@type": "reportChatPhoto",
        "chat_id": chat_id,
        "file_id": file_id,
        "reason": (reason != null) ? reason.toJson() : null,
        "text": text,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method reportChatPhoto",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1reportMessageReactions.html).
  factory TdlibFunction.reportMessageReactions({
    int? chat_id,
    int? message_id,
    MessageSender? sender_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "reportMessageReactions",
        "chat_id": chat_id,
        "message_id": message_id,
        "sender_id": (sender_id != null) ? sender_id.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method reportMessageReactions",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getChatStatistics.html).
  factory TdlibFunction.getChatStatistics({
    int? chat_id,
    bool? is_dark,
  }) {
    try {
      return TdlibFunction({
        "@type": "getChatStatistics",
        "chat_id": chat_id,
        "is_dark": is_dark,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getChatStatistics",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMessageStatistics.html).
  factory TdlibFunction.getMessageStatistics({
    int? chat_id,
    int? message_id,
    bool? is_dark,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMessageStatistics",
        "chat_id": chat_id,
        "message_id": message_id,
        "is_dark": is_dark,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMessageStatistics",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getStatisticalGraph.html).
  factory TdlibFunction.getStatisticalGraph({
    int? chat_id,
    String? token,
    int? x,
  }) {
    try {
      return TdlibFunction({
        "@type": "getStatisticalGraph",
        "chat_id": chat_id,
        "token": token,
        "x": x,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getStatisticalGraph",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getStorageStatistics.html).
  factory TdlibFunction.getStorageStatistics({
    int? chat_limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "getStorageStatistics",
        "chat_limit": chat_limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getStorageStatistics",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getStorageStatisticsFast.html).
  factory TdlibFunction.getStorageStatisticsFast() {
    try {
      return TdlibFunction({
        "@type": "getStorageStatisticsFast",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getStorageStatisticsFast",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getDatabaseStatistics.html).
  factory TdlibFunction.getDatabaseStatistics() {
    try {
      return TdlibFunction({
        "@type": "getDatabaseStatistics",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getDatabaseStatistics",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1optimizeStorage.html).
  factory TdlibFunction.optimizeStorage({
    int? size,
    int? ttl,
    int? count,
    int? immunity_delay,
    List<FileType>? file_types,
    List<int>? chat_ids,
    List<int>? exclude_chat_ids,
    bool? return_deleted_file_statistics,
    int? chat_limit,
  }) {
    try {
      return TdlibFunction({
        "@type": "optimizeStorage",
        "size": size,
        "ttl": ttl,
        "count": count,
        "immunity_delay": immunity_delay,
        "file_types": (file_types != null)
            ? file_types.map((e) {
                return FileType((e as Map)).toJson();
              }).toList()
            : null,
        "chat_ids": chat_ids,
        "exclude_chat_ids": exclude_chat_ids,
        "return_deleted_file_statistics": return_deleted_file_statistics,
        "chat_limit": chat_limit,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method optimizeStorage",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setNetworkType.html).
  factory TdlibFunction.setNetworkType({
    NetworkType? type,
  }) {
    try {
      return TdlibFunction({
        "@type": "setNetworkType",
        "type": (type != null) ? type.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setNetworkType",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getNetworkStatistics.html).
  factory TdlibFunction.getNetworkStatistics({
    bool? only_current,
  }) {
    try {
      return TdlibFunction({
        "@type": "getNetworkStatistics",
        "only_current": only_current,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getNetworkStatistics",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1addNetworkStatistics.html).
  factory TdlibFunction.addNetworkStatistics({
    NetworkStatisticsEntry? entry,
  }) {
    try {
      return TdlibFunction({
        "@type": "addNetworkStatistics",
        "entry": (entry != null) ? entry.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method addNetworkStatistics",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1resetNetworkStatistics.html).
  factory TdlibFunction.resetNetworkStatistics() {
    try {
      return TdlibFunction({
        "@type": "resetNetworkStatistics",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method resetNetworkStatistics",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getAutoDownloadSettingsPresets.html).
  factory TdlibFunction.getAutoDownloadSettingsPresets() {
    try {
      return TdlibFunction({
        "@type": "getAutoDownloadSettingsPresets",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getAutoDownloadSettingsPresets",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setAutoDownloadSettings.html).
  factory TdlibFunction.setAutoDownloadSettings({
    AutoDownloadSettings? settings,
    NetworkType? type,
  }) {
    try {
      return TdlibFunction({
        "@type": "setAutoDownloadSettings",
        "settings": (settings != null) ? settings.toJson() : null,
        "type": (type != null) ? type.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setAutoDownloadSettings",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getBankCardInfo.html).
  factory TdlibFunction.getBankCardInfo({
    String? bank_card_number,
  }) {
    try {
      return TdlibFunction({
        "@type": "getBankCardInfo",
        "bank_card_number": bank_card_number,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getBankCardInfo",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getPassportElement.html).
  factory TdlibFunction.getPassportElement({
    PassportElementType? type,
    String? password,
  }) {
    try {
      return TdlibFunction({
        "@type": "getPassportElement",
        "type": (type != null) ? type.toJson() : null,
        "password": password,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getPassportElement",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getAllPassportElements.html).
  factory TdlibFunction.getAllPassportElements({
    String? password,
  }) {
    try {
      return TdlibFunction({
        "@type": "getAllPassportElements",
        "password": password,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getAllPassportElements",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setPassportElement.html).
  factory TdlibFunction.setPassportElement({
    InputPassportElement? element,
    String? password,
  }) {
    try {
      return TdlibFunction({
        "@type": "setPassportElement",
        "element": (element != null) ? element.toJson() : null,
        "password": password,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setPassportElement",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1deletePassportElement.html).
  factory TdlibFunction.deletePassportElement({
    PassportElementType? type,
  }) {
    try {
      return TdlibFunction({
        "@type": "deletePassportElement",
        "type": (type != null) ? type.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method deletePassportElement",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setPassportElementErrors.html).
  factory TdlibFunction.setPassportElementErrors({
    int? user_id,
    List<InputPassportElementError>? errors,
  }) {
    try {
      return TdlibFunction({
        "@type": "setPassportElementErrors",
        "user_id": user_id,
        "errors": (errors != null)
            ? errors.map((e) {
                return InputPassportElementError((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setPassportElementErrors",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getPreferredCountryLanguage.html).
  factory TdlibFunction.getPreferredCountryLanguage({
    String? country_code,
  }) {
    try {
      return TdlibFunction({
        "@type": "getPreferredCountryLanguage",
        "country_code": country_code,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getPreferredCountryLanguage",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sendPhoneNumberVerificationCode.html).
  factory TdlibFunction.sendPhoneNumberVerificationCode({
    String? phone_number,
    PhoneNumberAuthenticationSettings? settings,
  }) {
    try {
      return TdlibFunction({
        "@type": "sendPhoneNumberVerificationCode",
        "phone_number": phone_number,
        "settings": (settings != null) ? settings.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sendPhoneNumberVerificationCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1resendPhoneNumberVerificationCode.html).
  factory TdlibFunction.resendPhoneNumberVerificationCode() {
    try {
      return TdlibFunction({
        "@type": "resendPhoneNumberVerificationCode",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method resendPhoneNumberVerificationCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1checkPhoneNumberVerificationCode.html).
  factory TdlibFunction.checkPhoneNumberVerificationCode({
    String? code,
  }) {
    try {
      return TdlibFunction({
        "@type": "checkPhoneNumberVerificationCode",
        "code": code,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method checkPhoneNumberVerificationCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sendEmailAddressVerificationCode.html).
  factory TdlibFunction.sendEmailAddressVerificationCode({
    String? email_address,
  }) {
    try {
      return TdlibFunction({
        "@type": "sendEmailAddressVerificationCode",
        "email_address": email_address,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sendEmailAddressVerificationCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1resendEmailAddressVerificationCode.html).
  factory TdlibFunction.resendEmailAddressVerificationCode() {
    try {
      return TdlibFunction({
        "@type": "resendEmailAddressVerificationCode",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method resendEmailAddressVerificationCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1checkEmailAddressVerificationCode.html).
  factory TdlibFunction.checkEmailAddressVerificationCode({
    String? code,
  }) {
    try {
      return TdlibFunction({
        "@type": "checkEmailAddressVerificationCode",
        "code": code,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method checkEmailAddressVerificationCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getPassportAuthorizationForm.html).
  factory TdlibFunction.getPassportAuthorizationForm({
    int? bot_user_id,
    String? scope,
    String? public_key,
    String? nonce,
  }) {
    try {
      return TdlibFunction({
        "@type": "getPassportAuthorizationForm",
        "bot_user_id": bot_user_id,
        "scope": scope,
        "public_key": public_key,
        "nonce": nonce,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getPassportAuthorizationForm",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getPassportAuthorizationFormAvailableElements.html).
  factory TdlibFunction.getPassportAuthorizationFormAvailableElements({
    int? autorization_form_id,
    String? password,
  }) {
    try {
      return TdlibFunction({
        "@type": "getPassportAuthorizationFormAvailableElements",
        "autorization_form_id": autorization_form_id,
        "password": password,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getPassportAuthorizationFormAvailableElements",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sendPassportAuthorizationForm.html).
  factory TdlibFunction.sendPassportAuthorizationForm({
    int? autorization_form_id,
    List<PassportElementType>? types,
  }) {
    try {
      return TdlibFunction({
        "@type": "sendPassportAuthorizationForm",
        "autorization_form_id": autorization_form_id,
        "types": (types != null)
            ? types.map((e) {
                return PassportElementType((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sendPassportAuthorizationForm",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sendPhoneNumberConfirmationCode.html).
  factory TdlibFunction.sendPhoneNumberConfirmationCode({
    String? hash,
    String? phone_number,
    PhoneNumberAuthenticationSettings? settings,
  }) {
    try {
      return TdlibFunction({
        "@type": "sendPhoneNumberConfirmationCode",
        "hash": hash,
        "phone_number": phone_number,
        "settings": (settings != null) ? settings.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sendPhoneNumberConfirmationCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1resendPhoneNumberConfirmationCode.html).
  factory TdlibFunction.resendPhoneNumberConfirmationCode() {
    try {
      return TdlibFunction({
        "@type": "resendPhoneNumberConfirmationCode",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method resendPhoneNumberConfirmationCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1checkPhoneNumberConfirmationCode.html).
  factory TdlibFunction.checkPhoneNumberConfirmationCode({
    String? code,
  }) {
    try {
      return TdlibFunction({
        "@type": "checkPhoneNumberConfirmationCode",
        "code": code,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method checkPhoneNumberConfirmationCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setBotUpdatesStatus.html).
  factory TdlibFunction.setBotUpdatesStatus({
    int? pending_update_count,
    String? error_message,
  }) {
    try {
      return TdlibFunction({
        "@type": "setBotUpdatesStatus",
        "pending_update_count": pending_update_count,
        "error_message": error_message,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setBotUpdatesStatus",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1uploadStickerFile.html).
  factory TdlibFunction.uploadStickerFile({
    int? user_id,
    InputSticker? sticker,
  }) {
    try {
      return TdlibFunction({
        "@type": "uploadStickerFile",
        "user_id": user_id,
        "sticker": (sticker != null) ? sticker.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method uploadStickerFile",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getSuggestedStickerSetName.html).
  factory TdlibFunction.getSuggestedStickerSetName({
    String? title,
  }) {
    try {
      return TdlibFunction({
        "@type": "getSuggestedStickerSetName",
        "title": title,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getSuggestedStickerSetName",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1checkStickerSetName.html).
  factory TdlibFunction.checkStickerSetName({
    String? name,
  }) {
    try {
      return TdlibFunction({
        "@type": "checkStickerSetName",
        "name": name,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method checkStickerSetName",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1createNewStickerSet.html).
  factory TdlibFunction.createNewStickerSet({
    int? user_id,
    String? title,
    String? name,
    StickerType? sticker_type,
    List<InputSticker>? stickers,
    String? source,
  }) {
    try {
      return TdlibFunction({
        "@type": "createNewStickerSet",
        "user_id": user_id,
        "title": title,
        "name": name,
        "sticker_type": (sticker_type != null) ? sticker_type.toJson() : null,
        "stickers": (stickers != null)
            ? stickers.map((e) {
                return InputSticker((e as Map)).toJson();
              }).toList()
            : null,
        "source": source,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method createNewStickerSet",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1addStickerToSet.html).
  factory TdlibFunction.addStickerToSet({
    int? user_id,
    String? name,
    InputSticker? sticker,
  }) {
    try {
      return TdlibFunction({
        "@type": "addStickerToSet",
        "user_id": user_id,
        "name": name,
        "sticker": (sticker != null) ? sticker.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method addStickerToSet",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setStickerSetThumbnail.html).
  factory TdlibFunction.setStickerSetThumbnail({
    int? user_id,
    String? name,
    InputFile? thumbnail,
  }) {
    try {
      return TdlibFunction({
        "@type": "setStickerSetThumbnail",
        "user_id": user_id,
        "name": name,
        "thumbnail": (thumbnail != null) ? thumbnail.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setStickerSetThumbnail",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setStickerPositionInSet.html).
  factory TdlibFunction.setStickerPositionInSet({
    InputFile? sticker,
    int? position,
  }) {
    try {
      return TdlibFunction({
        "@type": "setStickerPositionInSet",
        "sticker": (sticker != null) ? sticker.toJson() : null,
        "position": position,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setStickerPositionInSet",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1removeStickerFromSet.html).
  factory TdlibFunction.removeStickerFromSet({
    InputFile? sticker,
  }) {
    try {
      return TdlibFunction({
        "@type": "removeStickerFromSet",
        "sticker": (sticker != null) ? sticker.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method removeStickerFromSet",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getMapThumbnailFile.html).
  factory TdlibFunction.getMapThumbnailFile({
    Location? location,
    int? zoom,
    int? width,
    int? height,
    int? scale,
    int? chat_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getMapThumbnailFile",
        "location": (location != null) ? location.toJson() : null,
        "zoom": zoom,
        "width": width,
        "height": height,
        "scale": scale,
        "chat_id": chat_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getMapThumbnailFile",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getPremiumLimit.html).
  factory TdlibFunction.getPremiumLimit({
    PremiumLimitType? limit_type,
  }) {
    try {
      return TdlibFunction({
        "@type": "getPremiumLimit",
        "limit_type": (limit_type != null) ? limit_type.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getPremiumLimit",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getPremiumFeatures.html).
  factory TdlibFunction.getPremiumFeatures({
    PremiumSource? source,
  }) {
    try {
      return TdlibFunction({
        "@type": "getPremiumFeatures",
        "source": (source != null) ? source.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getPremiumFeatures",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getPremiumStickerExamples.html).
  factory TdlibFunction.getPremiumStickerExamples() {
    try {
      return TdlibFunction({
        "@type": "getPremiumStickerExamples",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getPremiumStickerExamples",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1viewPremiumFeature.html).
  factory TdlibFunction.viewPremiumFeature({
    PremiumFeature? feature,
  }) {
    try {
      return TdlibFunction({
        "@type": "viewPremiumFeature",
        "feature": (feature != null) ? feature.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method viewPremiumFeature",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1clickPremiumSubscriptionButton.html).
  factory TdlibFunction.clickPremiumSubscriptionButton() {
    try {
      return TdlibFunction({
        "@type": "clickPremiumSubscriptionButton",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method clickPremiumSubscriptionButton",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getPremiumState.html).
  factory TdlibFunction.getPremiumState() {
    try {
      return TdlibFunction({
        "@type": "getPremiumState",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getPremiumState",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1canPurchasePremium.html).
  factory TdlibFunction.canPurchasePremium({
    StorePaymentPurpose? purpose,
  }) {
    try {
      return TdlibFunction({
        "@type": "canPurchasePremium",
        "purpose": (purpose != null) ? purpose.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method canPurchasePremium",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1assignAppStoreTransaction.html).
  factory TdlibFunction.assignAppStoreTransaction({
    String? receipt,
    StorePaymentPurpose? purpose,
  }) {
    try {
      return TdlibFunction({
        "@type": "assignAppStoreTransaction",
        "receipt": receipt,
        "purpose": (purpose != null) ? purpose.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method assignAppStoreTransaction",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1assignGooglePlayTransaction.html).
  factory TdlibFunction.assignGooglePlayTransaction({
    String? package_name,
    String? store_product_id,
    String? purchase_token,
    StorePaymentPurpose? purpose,
  }) {
    try {
      return TdlibFunction({
        "@type": "assignGooglePlayTransaction",
        "package_name": package_name,
        "store_product_id": store_product_id,
        "purchase_token": purchase_token,
        "purpose": (purpose != null) ? purpose.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method assignGooglePlayTransaction",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1acceptTermsOfService.html).
  factory TdlibFunction.acceptTermsOfService({
    String? terms_of_service_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "acceptTermsOfService",
        "terms_of_service_id": terms_of_service_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method acceptTermsOfService",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1sendCustomRequest.html).
  factory TdlibFunction.sendCustomRequest({
    String? method,
    String? parameters,
  }) {
    try {
      return TdlibFunction({
        "@type": "sendCustomRequest",
        "method": method,
        "parameters": parameters,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method sendCustomRequest",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1answerCustomQuery.html).
  factory TdlibFunction.answerCustomQuery({
    int? custom_query_id,
    String? data,
  }) {
    try {
      return TdlibFunction({
        "@type": "answerCustomQuery",
        "custom_query_id": custom_query_id,
        "data": data,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method answerCustomQuery",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setAlarm.html).
  factory TdlibFunction.setAlarm({
    double? seconds,
  }) {
    try {
      return TdlibFunction({
        "@type": "setAlarm",
        "seconds": seconds,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setAlarm",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getCountries.html).
  factory TdlibFunction.getCountries() {
    try {
      return TdlibFunction({
        "@type": "getCountries",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getCountries",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getCountryCode.html).
  factory TdlibFunction.getCountryCode() {
    try {
      return TdlibFunction({
        "@type": "getCountryCode",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getCountryCode",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getPhoneNumberInfo.html).
  factory TdlibFunction.getPhoneNumberInfo({
    String? phone_number_prefix,
  }) {
    try {
      return TdlibFunction({
        "@type": "getPhoneNumberInfo",
        "phone_number_prefix": phone_number_prefix,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getPhoneNumberInfo",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getPhoneNumberInfoSync.html).
  factory TdlibFunction.getPhoneNumberInfoSync({
    String? language_code,
    String? phone_number_prefix,
  }) {
    try {
      return TdlibFunction({
        "@type": "getPhoneNumberInfoSync",
        "language_code": language_code,
        "phone_number_prefix": phone_number_prefix,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getPhoneNumberInfoSync",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getApplicationDownloadLink.html).
  factory TdlibFunction.getApplicationDownloadLink() {
    try {
      return TdlibFunction({
        "@type": "getApplicationDownloadLink",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getApplicationDownloadLink",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getDeepLinkInfo.html).
  factory TdlibFunction.getDeepLinkInfo({
    String? link,
  }) {
    try {
      return TdlibFunction({
        "@type": "getDeepLinkInfo",
        "link": link,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getDeepLinkInfo",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getApplicationConfig.html).
  factory TdlibFunction.getApplicationConfig() {
    try {
      return TdlibFunction({
        "@type": "getApplicationConfig",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getApplicationConfig",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1saveApplicationLogEvent.html).
  factory TdlibFunction.saveApplicationLogEvent({
    String? type,
    int? chat_id,
    JsonValue? data,
  }) {
    try {
      return TdlibFunction({
        "@type": "saveApplicationLogEvent",
        "type": type,
        "chat_id": chat_id,
        "data": (data != null) ? data.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method saveApplicationLogEvent",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1addProxy.html).
  factory TdlibFunction.addProxy({
    String? server,
    int? port,
    bool? enable,
    ProxyType? type,
  }) {
    try {
      return TdlibFunction({
        "@type": "addProxy",
        "server": server,
        "port": port,
        "enable": enable,
        "type": (type != null) ? type.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method addProxy",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1editProxy.html).
  factory TdlibFunction.editProxy({
    int? proxy_id,
    String? server,
    int? port,
    bool? enable,
    ProxyType? type,
  }) {
    try {
      return TdlibFunction({
        "@type": "editProxy",
        "proxy_id": proxy_id,
        "server": server,
        "port": port,
        "enable": enable,
        "type": (type != null) ? type.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method editProxy",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1enableProxy.html).
  factory TdlibFunction.enableProxy({
    int? proxy_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "enableProxy",
        "proxy_id": proxy_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method enableProxy",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1disableProxy.html).
  factory TdlibFunction.disableProxy() {
    try {
      return TdlibFunction({
        "@type": "disableProxy",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method disableProxy",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1removeProxy.html).
  factory TdlibFunction.removeProxy({
    int? proxy_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "removeProxy",
        "proxy_id": proxy_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method removeProxy",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getProxies.html).
  factory TdlibFunction.getProxies() {
    try {
      return TdlibFunction({
        "@type": "getProxies",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getProxies",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getProxyLink.html).
  factory TdlibFunction.getProxyLink({
    int? proxy_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getProxyLink",
        "proxy_id": proxy_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getProxyLink",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1pingProxy.html).
  factory TdlibFunction.pingProxy({
    int? proxy_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "pingProxy",
        "proxy_id": proxy_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method pingProxy",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setLogStream.html).
  factory TdlibFunction.setLogStream({
    LogStream? log_stream,
  }) {
    try {
      return TdlibFunction({
        "@type": "setLogStream",
        "log_stream": (log_stream != null) ? log_stream.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setLogStream",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getLogStream.html).
  factory TdlibFunction.getLogStream() {
    try {
      return TdlibFunction({
        "@type": "getLogStream",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getLogStream",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setLogVerbosityLevel.html).
  factory TdlibFunction.setLogVerbosityLevel({
    int? new_verbosity_level,
  }) {
    try {
      return TdlibFunction({
        "@type": "setLogVerbosityLevel",
        "new_verbosity_level": new_verbosity_level,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setLogVerbosityLevel",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getLogVerbosityLevel.html).
  factory TdlibFunction.getLogVerbosityLevel() {
    try {
      return TdlibFunction({
        "@type": "getLogVerbosityLevel",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getLogVerbosityLevel",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getLogTags.html).
  factory TdlibFunction.getLogTags() {
    try {
      return TdlibFunction({
        "@type": "getLogTags",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getLogTags",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setLogTagVerbosityLevel.html).
  factory TdlibFunction.setLogTagVerbosityLevel({
    String? tag,
    int? new_verbosity_level,
  }) {
    try {
      return TdlibFunction({
        "@type": "setLogTagVerbosityLevel",
        "tag": tag,
        "new_verbosity_level": new_verbosity_level,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setLogTagVerbosityLevel",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getLogTagVerbosityLevel.html).
  factory TdlibFunction.getLogTagVerbosityLevel({
    String? tag,
  }) {
    try {
      return TdlibFunction({
        "@type": "getLogTagVerbosityLevel",
        "tag": tag,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getLogTagVerbosityLevel",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1addLogMessage.html).
  factory TdlibFunction.addLogMessage({
    int? verbosity_level,
    String? text,
  }) {
    try {
      return TdlibFunction({
        "@type": "addLogMessage",
        "verbosity_level": verbosity_level,
        "text": text,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method addLogMessage",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1getUserSupportInfo.html).
  factory TdlibFunction.getUserSupportInfo({
    int? user_id,
  }) {
    try {
      return TdlibFunction({
        "@type": "getUserSupportInfo",
        "user_id": user_id,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method getUserSupportInfo",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1setUserSupportInfo.html).
  factory TdlibFunction.setUserSupportInfo({
    int? user_id,
    FormattedText? message,
  }) {
    try {
      return TdlibFunction({
        "@type": "setUserSupportInfo",
        "user_id": user_id,
        "message": (message != null) ? message.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method setUserSupportInfo",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1testCallEmpty.html).
  factory TdlibFunction.testCallEmpty() {
    try {
      return TdlibFunction({
        "@type": "testCallEmpty",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method testCallEmpty",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1testCallString.html).
  factory TdlibFunction.testCallString({
    String? x,
  }) {
    try {
      return TdlibFunction({
        "@type": "testCallString",
        "x": x,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method testCallString",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1testCallBytes.html).
  factory TdlibFunction.testCallBytes({
    String? x,
  }) {
    try {
      return TdlibFunction({
        "@type": "testCallBytes",
        "x": x,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method testCallBytes",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1testCallVectorInt.html).
  factory TdlibFunction.testCallVectorInt({
    List<int>? x,
  }) {
    try {
      return TdlibFunction({
        "@type": "testCallVectorInt",
        "x": x,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method testCallVectorInt",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1testCallVectorIntObject.html).
  factory TdlibFunction.testCallVectorIntObject({
    List<TestInt>? x,
  }) {
    try {
      return TdlibFunction({
        "@type": "testCallVectorIntObject",
        "x": (x != null)
            ? x.map((e) {
                return TestInt((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method testCallVectorIntObject",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1testCallVectorString.html).
  factory TdlibFunction.testCallVectorString({
    List<String>? x,
  }) {
    try {
      return TdlibFunction({
        "@type": "testCallVectorString",
        "x": x,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method testCallVectorString",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1testCallVectorStringObject.html).
  factory TdlibFunction.testCallVectorStringObject({
    List<TestString>? x,
  }) {
    try {
      return TdlibFunction({
        "@type": "testCallVectorStringObject",
        "x": (x != null)
            ? x.map((e) {
                return TestString((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method testCallVectorStringObject",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1testSquareInt.html).
  factory TdlibFunction.testSquareInt({
    int? x,
  }) {
    try {
      return TdlibFunction({
        "@type": "testSquareInt",
        "x": x,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method testSquareInt",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1testNetwork.html).
  factory TdlibFunction.testNetwork() {
    try {
      return TdlibFunction({
        "@type": "testNetwork",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method testNetwork",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1testProxy.html).
  factory TdlibFunction.testProxy({
    String? server,
    int? port,
    ProxyType? type,
    int? dc_id,
    double? timeout,
  }) {
    try {
      return TdlibFunction({
        "@type": "testProxy",
        "server": server,
        "port": port,
        "type": (type != null) ? type.toJson() : null,
        "dc_id": dc_id,
        "timeout": timeout,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method testProxy",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1testGetDifference.html).
  factory TdlibFunction.testGetDifference() {
    try {
      return TdlibFunction({
        "@type": "testGetDifference",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method testGetDifference",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1testUseUpdate.html).
  factory TdlibFunction.testUseUpdate() {
    try {
      return TdlibFunction({
        "@type": "testUseUpdate",
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method testUseUpdate",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1testReturnError.html).
  factory TdlibFunction.testReturnError({
    Error? error,
  }) {
    try {
      return TdlibFunction({
        "@type": "testReturnError",
        "error": (error != null) ? error.toJson() : null,
      });
    } catch (e) {
      return TdlibFunction({
        "@type": "error",
        "error": "${e}",
        "message": "error method testReturnError",
      });
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Error.html).
class Error {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Error.html).
  Error(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Error.html).
  factory Error.create({
    String special_type = "error",
    int? code,
    String? message,
  }) {
    try {
      return Error({
        "@type": special_type,
        "code": code,
        "message": message,
      });
    } catch (e) {
      return Error({
        "@type": "error",
        "error": "${e}",
        "message": "error method Error.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Error.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Error.html).
  int? get code {
    try {
      return (rawData["code"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Error.html).
  String? get message {
    try {
      return (rawData["message"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Ok.html).
class Ok {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Ok.html).
  Ok(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Ok.html).
  factory Ok.create({
    String special_type = "ok",
  }) {
    try {
      return Ok({
        "@type": special_type,
      });
    } catch (e) {
      return Ok({
        "@type": "error",
        "error": "${e}",
        "message": "error method Ok.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Ok.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthenticationCodeType.html).
class AuthenticationCodeType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthenticationCodeType.html).
  AuthenticationCodeType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthenticationCodeType.html).
  factory AuthenticationCodeType.create({
    String special_type = "authenticationCodeTypeTelegramMessage",
    int? length,
    String? pattern,
    String? phone_number_prefix,
  }) {
    try {
      return AuthenticationCodeType({
        "@type": special_type,
        "length": length,
        "pattern": pattern,
        "phone_number_prefix": phone_number_prefix,
      });
    } catch (e) {
      return AuthenticationCodeType({
        "@type": "error",
        "error": "${e}",
        "message": "error method AuthenticationCodeType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthenticationCodeType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthenticationCodeType.html).
  int? get length {
    try {
      return (rawData["length"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthenticationCodeType.html).
  String? get pattern {
    try {
      return (rawData["pattern"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthenticationCodeType.html).
  String? get phone_number_prefix {
    try {
      return (rawData["phone_number_prefix"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthenticationCodeInfo.html).
class AuthenticationCodeInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthenticationCodeInfo.html).
  AuthenticationCodeInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthenticationCodeInfo.html).
  factory AuthenticationCodeInfo.create({
    String special_type = "authenticationCodeInfo",
    String? phone_number,
    AuthenticationCodeType? type,
    AuthenticationCodeType? next_type,
    int? timeout,
  }) {
    try {
      return AuthenticationCodeInfo({
        "@type": special_type,
        "phone_number": phone_number,
        "type": (type != null) ? type.toJson() : null,
        "next_type": (next_type != null) ? next_type.toJson() : null,
        "timeout": timeout,
      });
    } catch (e) {
      return AuthenticationCodeInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method AuthenticationCodeInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthenticationCodeInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthenticationCodeInfo.html).
  String? get phone_number {
    try {
      return (rawData["phone_number"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthenticationCodeInfo.html).
  AuthenticationCodeType get type {
    try {
      return AuthenticationCodeType((rawData["type"] as Map));
    } catch (e) {
      return AuthenticationCodeType({"@type": "error", "error": "${e}", "message": "error at AuthenticationCodeInfo type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthenticationCodeInfo.html).
  AuthenticationCodeType get next_type {
    try {
      return AuthenticationCodeType((rawData["next_type"] as Map));
    } catch (e) {
      return AuthenticationCodeType({"@type": "error", "error": "${e}", "message": "error at AuthenticationCodeInfo next_type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthenticationCodeInfo.html).
  int? get timeout {
    try {
      return (rawData["timeout"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmailAddressAuthenticationCodeInfo.html).
class EmailAddressAuthenticationCodeInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmailAddressAuthenticationCodeInfo.html).
  EmailAddressAuthenticationCodeInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmailAddressAuthenticationCodeInfo.html).
  factory EmailAddressAuthenticationCodeInfo.create({
    String special_type = "emailAddressAuthenticationCodeInfo",
    String? email_address_pattern,
    int? length,
  }) {
    try {
      return EmailAddressAuthenticationCodeInfo({
        "@type": special_type,
        "email_address_pattern": email_address_pattern,
        "length": length,
      });
    } catch (e) {
      return EmailAddressAuthenticationCodeInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method EmailAddressAuthenticationCodeInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmailAddressAuthenticationCodeInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmailAddressAuthenticationCodeInfo.html).
  String? get email_address_pattern {
    try {
      return (rawData["email_address_pattern"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmailAddressAuthenticationCodeInfo.html).
  int? get length {
    try {
      return (rawData["length"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmailAddressAuthentication.html).
class EmailAddressAuthentication {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmailAddressAuthentication.html).
  EmailAddressAuthentication(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmailAddressAuthentication.html).
  factory EmailAddressAuthentication.create({
    String special_type = "emailAddressAuthenticationCode",
    String? code,
    String? token,
  }) {
    try {
      return EmailAddressAuthentication({
        "@type": special_type,
        "code": code,
        "token": token,
      });
    } catch (e) {
      return EmailAddressAuthentication({
        "@type": "error",
        "error": "${e}",
        "message": "error method EmailAddressAuthentication.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmailAddressAuthentication.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmailAddressAuthentication.html).
  String? get code {
    try {
      return (rawData["code"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmailAddressAuthentication.html).
  String? get token {
    try {
      return (rawData["token"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntity.html).
class TextEntity {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntity.html).
  TextEntity(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntity.html).
  factory TextEntity.create({
    String special_type = "textEntity",
    int? offset,
    int? length,
    TextEntityType? type,
  }) {
    try {
      return TextEntity({
        "@type": special_type,
        "offset": offset,
        "length": length,
        "type": (type != null) ? type.toJson() : null,
      });
    } catch (e) {
      return TextEntity({
        "@type": "error",
        "error": "${e}",
        "message": "error method TextEntity.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntity.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntity.html).
  int? get offset {
    try {
      return (rawData["offset"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntity.html).
  int? get length {
    try {
      return (rawData["length"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntity.html).
  TextEntityType get type {
    try {
      return TextEntityType((rawData["type"] as Map));
    } catch (e) {
      return TextEntityType({"@type": "error", "error": "${e}", "message": "error at TextEntity type"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntities.html).
class TextEntities {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntities.html).
  TextEntities(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntities.html).
  factory TextEntities.create({
    String special_type = "textEntities",
    List<TextEntity>? entities,
  }) {
    try {
      return TextEntities({
        "@type": special_type,
        "entities": (entities != null)
            ? entities.map((e) {
                return TextEntity((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return TextEntities({
        "@type": "error",
        "error": "${e}",
        "message": "error method TextEntities.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntities.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntities.html).
  List<TextEntity> get entities {
    try {
      return (rawData["entities"] as List)
          .map((e) {
            return TextEntity((e as Map));
          })
          .toList()
          .cast<TextEntity>();
    } catch (e) {
      return [
        TextEntity({"@type": "error", "error": "${e}", "message": "error at TextEntities entities"})
      ].cast<TextEntity>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FormattedText.html).
class FormattedText {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FormattedText.html).
  FormattedText(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FormattedText.html).
  factory FormattedText.create({
    String special_type = "formattedText",
    String? text,
    List<TextEntity>? entities,
  }) {
    try {
      return FormattedText({
        "@type": special_type,
        "text": text,
        "entities": (entities != null)
            ? entities.map((e) {
                return TextEntity((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return FormattedText({
        "@type": "error",
        "error": "${e}",
        "message": "error method FormattedText.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FormattedText.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FormattedText.html).
  String? get text {
    try {
      return (rawData["text"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FormattedText.html).
  List<TextEntity> get entities {
    try {
      return (rawData["entities"] as List)
          .map((e) {
            return TextEntity((e as Map));
          })
          .toList()
          .cast<TextEntity>();
    } catch (e) {
      return [
        TextEntity({"@type": "error", "error": "${e}", "message": "error at FormattedText entities"})
      ].cast<TextEntity>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TermsOfService.html).
class TermsOfService {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TermsOfService.html).
  TermsOfService(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TermsOfService.html).
  factory TermsOfService.create({
    String special_type = "termsOfService",
    FormattedText? text,
    int? min_user_age,
    bool? show_popup,
  }) {
    try {
      return TermsOfService({
        "@type": special_type,
        "text": (text != null) ? text.toJson() : null,
        "min_user_age": min_user_age,
        "show_popup": show_popup,
      });
    } catch (e) {
      return TermsOfService({
        "@type": "error",
        "error": "${e}",
        "message": "error method TermsOfService.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TermsOfService.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TermsOfService.html).
  FormattedText get text {
    try {
      return FormattedText((rawData["text"] as Map));
    } catch (e) {
      return FormattedText({"@type": "error", "error": "${e}", "message": "error at TermsOfService text"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TermsOfService.html).
  int? get min_user_age {
    try {
      return (rawData["min_user_age"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TermsOfService.html).
  bool? get show_popup {
    try {
      return (rawData["show_popup"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthorizationState.html).
class AuthorizationState {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthorizationState.html).
  AuthorizationState(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthorizationState.html).
  factory AuthorizationState.create({
    String special_type = "authorizationStateWaitTdlibParameters",
    bool? allow_apple_id,
    bool? allow_google_id,
    AuthenticationCodeInfo? code_info,
    int? next_phone_number_authorization_date,
    String? link,
    TermsOfService? terms_of_service,
    String? password_hint,
    bool? has_recovery_email_address,
    String? recovery_email_address_pattern,
  }) {
    try {
      return AuthorizationState({
        "@type": special_type,
        "allow_apple_id": allow_apple_id,
        "allow_google_id": allow_google_id,
        "code_info": (code_info != null) ? code_info.toJson() : null,
        "next_phone_number_authorization_date": next_phone_number_authorization_date,
        "link": link,
        "terms_of_service": (terms_of_service != null) ? terms_of_service.toJson() : null,
        "password_hint": password_hint,
        "has_recovery_email_address": has_recovery_email_address,
        "recovery_email_address_pattern": recovery_email_address_pattern,
      });
    } catch (e) {
      return AuthorizationState({
        "@type": "error",
        "error": "${e}",
        "message": "error method AuthorizationState.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthorizationState.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthorizationState.html).
  bool? get allow_apple_id {
    try {
      return (rawData["allow_apple_id"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthorizationState.html).
  bool? get allow_google_id {
    try {
      return (rawData["allow_google_id"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthorizationState.html).
  AuthenticationCodeInfo get code_info {
    try {
      return AuthenticationCodeInfo((rawData["code_info"] as Map));
    } catch (e) {
      return AuthenticationCodeInfo({"@type": "error", "error": "${e}", "message": "error at AuthorizationState code_info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthorizationState.html).
  int? get next_phone_number_authorization_date {
    try {
      return (rawData["next_phone_number_authorization_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthorizationState.html).
  String? get link {
    try {
      return (rawData["link"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthorizationState.html).
  TermsOfService get terms_of_service {
    try {
      return TermsOfService((rawData["terms_of_service"] as Map));
    } catch (e) {
      return TermsOfService({"@type": "error", "error": "${e}", "message": "error at AuthorizationState terms_of_service"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthorizationState.html).
  String? get password_hint {
    try {
      return (rawData["password_hint"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthorizationState.html).
  bool? get has_recovery_email_address {
    try {
      return (rawData["has_recovery_email_address"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AuthorizationState.html).
  String? get recovery_email_address_pattern {
    try {
      return (rawData["recovery_email_address_pattern"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PasswordState.html).
class PasswordState {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PasswordState.html).
  PasswordState(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PasswordState.html).
  factory PasswordState.create({
    String special_type = "passwordState",
    bool? has_password,
    String? password_hint,
    bool? has_recovery_email_address,
    bool? has_passport_data,
    EmailAddressAuthenticationCodeInfo? recovery_email_address_code_info,
    String? login_email_address_pattern,
    int? pending_reset_date,
  }) {
    try {
      return PasswordState({
        "@type": special_type,
        "has_password": has_password,
        "password_hint": password_hint,
        "has_recovery_email_address": has_recovery_email_address,
        "has_passport_data": has_passport_data,
        "recovery_email_address_code_info": (recovery_email_address_code_info != null) ? recovery_email_address_code_info.toJson() : null,
        "login_email_address_pattern": login_email_address_pattern,
        "pending_reset_date": pending_reset_date,
      });
    } catch (e) {
      return PasswordState({
        "@type": "error",
        "error": "${e}",
        "message": "error method PasswordState.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PasswordState.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PasswordState.html).
  bool? get has_password {
    try {
      return (rawData["has_password"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PasswordState.html).
  String? get password_hint {
    try {
      return (rawData["password_hint"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PasswordState.html).
  bool? get has_recovery_email_address {
    try {
      return (rawData["has_recovery_email_address"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PasswordState.html).
  bool? get has_passport_data {
    try {
      return (rawData["has_passport_data"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PasswordState.html).
  EmailAddressAuthenticationCodeInfo get recovery_email_address_code_info {
    try {
      return EmailAddressAuthenticationCodeInfo((rawData["recovery_email_address_code_info"] as Map));
    } catch (e) {
      return EmailAddressAuthenticationCodeInfo({"@type": "error", "error": "${e}", "message": "error at PasswordState recovery_email_address_code_info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PasswordState.html).
  String? get login_email_address_pattern {
    try {
      return (rawData["login_email_address_pattern"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PasswordState.html).
  int? get pending_reset_date {
    try {
      return (rawData["pending_reset_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RecoveryEmailAddress.html).
class RecoveryEmailAddress {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RecoveryEmailAddress.html).
  RecoveryEmailAddress(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RecoveryEmailAddress.html).
  factory RecoveryEmailAddress.create({
    String special_type = "recoveryEmailAddress",
    String? recovery_email_address,
  }) {
    try {
      return RecoveryEmailAddress({
        "@type": special_type,
        "recovery_email_address": recovery_email_address,
      });
    } catch (e) {
      return RecoveryEmailAddress({
        "@type": "error",
        "error": "${e}",
        "message": "error method RecoveryEmailAddress.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RecoveryEmailAddress.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RecoveryEmailAddress.html).
  String? get recovery_email_address {
    try {
      return (rawData["recovery_email_address"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TemporaryPasswordState.html).
class TemporaryPasswordState {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TemporaryPasswordState.html).
  TemporaryPasswordState(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TemporaryPasswordState.html).
  factory TemporaryPasswordState.create({
    String special_type = "temporaryPasswordState",
    bool? has_password,
    int? valid_for,
  }) {
    try {
      return TemporaryPasswordState({
        "@type": special_type,
        "has_password": has_password,
        "valid_for": valid_for,
      });
    } catch (e) {
      return TemporaryPasswordState({
        "@type": "error",
        "error": "${e}",
        "message": "error method TemporaryPasswordState.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TemporaryPasswordState.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TemporaryPasswordState.html).
  bool? get has_password {
    try {
      return (rawData["has_password"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TemporaryPasswordState.html).
  int? get valid_for {
    try {
      return (rawData["valid_for"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LocalFile.html).
class LocalFile {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LocalFile.html).
  LocalFile(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LocalFile.html).
  factory LocalFile.create({
    String special_type = "localFile",
    String? path,
    bool? can_be_downloaded,
    bool? can_be_deleted,
    bool? is_downloading_active,
    bool? is_downloading_completed,
    int? download_offset,
    int? downloaded_prefix_size,
    int? downloaded_size,
  }) {
    try {
      return LocalFile({
        "@type": special_type,
        "path": path,
        "can_be_downloaded": can_be_downloaded,
        "can_be_deleted": can_be_deleted,
        "is_downloading_active": is_downloading_active,
        "is_downloading_completed": is_downloading_completed,
        "download_offset": download_offset,
        "downloaded_prefix_size": downloaded_prefix_size,
        "downloaded_size": downloaded_size,
      });
    } catch (e) {
      return LocalFile({
        "@type": "error",
        "error": "${e}",
        "message": "error method LocalFile.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LocalFile.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LocalFile.html).
  String? get path {
    try {
      return (rawData["path"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LocalFile.html).
  bool? get can_be_downloaded {
    try {
      return (rawData["can_be_downloaded"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LocalFile.html).
  bool? get can_be_deleted {
    try {
      return (rawData["can_be_deleted"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LocalFile.html).
  bool? get is_downloading_active {
    try {
      return (rawData["is_downloading_active"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LocalFile.html).
  bool? get is_downloading_completed {
    try {
      return (rawData["is_downloading_completed"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LocalFile.html).
  int? get download_offset {
    try {
      return (rawData["download_offset"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LocalFile.html).
  int? get downloaded_prefix_size {
    try {
      return (rawData["downloaded_prefix_size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LocalFile.html).
  int? get downloaded_size {
    try {
      return (rawData["downloaded_size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RemoteFile.html).
class RemoteFile {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RemoteFile.html).
  RemoteFile(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RemoteFile.html).
  factory RemoteFile.create({
    String special_type = "remoteFile",
    String? id,
    String? unique_id,
    bool? is_uploading_active,
    bool? is_uploading_completed,
    int? uploaded_size,
  }) {
    try {
      return RemoteFile({
        "@type": special_type,
        "id": id,
        "unique_id": unique_id,
        "is_uploading_active": is_uploading_active,
        "is_uploading_completed": is_uploading_completed,
        "uploaded_size": uploaded_size,
      });
    } catch (e) {
      return RemoteFile({
        "@type": "error",
        "error": "${e}",
        "message": "error method RemoteFile.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RemoteFile.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RemoteFile.html).
  String? get id {
    try {
      return (rawData["id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RemoteFile.html).
  String? get unique_id {
    try {
      return (rawData["unique_id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RemoteFile.html).
  bool? get is_uploading_active {
    try {
      return (rawData["is_uploading_active"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RemoteFile.html).
  bool? get is_uploading_completed {
    try {
      return (rawData["is_uploading_completed"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RemoteFile.html).
  int? get uploaded_size {
    try {
      return (rawData["uploaded_size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1File.html).
class File {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1File.html).
  File(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1File.html).
  factory File.create({
    String special_type = "file",
    int? id,
    int? size,
    int? expected_size,
    LocalFile? local,
    RemoteFile? remote,
  }) {
    try {
      return File({
        "@type": special_type,
        "id": id,
        "size": size,
        "expected_size": expected_size,
        "local": (local != null) ? local.toJson() : null,
        "remote": (remote != null) ? remote.toJson() : null,
      });
    } catch (e) {
      return File({
        "@type": "error",
        "error": "${e}",
        "message": "error method File.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1File.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1File.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1File.html).
  int? get size {
    try {
      return (rawData["size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1File.html).
  int? get expected_size {
    try {
      return (rawData["expected_size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1File.html).
  LocalFile get local {
    try {
      return LocalFile((rawData["local"] as Map));
    } catch (e) {
      return LocalFile({"@type": "error", "error": "${e}", "message": "error at File local"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1File.html).
  RemoteFile get remote {
    try {
      return RemoteFile((rawData["remote"] as Map));
    } catch (e) {
      return RemoteFile({"@type": "error", "error": "${e}", "message": "error at File remote"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputFile.html).
class InputFile {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputFile.html).
  InputFile(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputFile.html).
  factory InputFile.create({
    String special_type = "inputFileId",
    String? id,
    String? path,
    String? original_path,
    String? conversion,
    int? expected_size,
  }) {
    try {
      return InputFile({
        "@type": special_type,
        "id": id,
        "path": path,
        "original_path": original_path,
        "conversion": conversion,
        "expected_size": expected_size,
      });
    } catch (e) {
      return InputFile({
        "@type": "error",
        "error": "${e}",
        "message": "error method InputFile.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputFile.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputFile.html).
  String? get id {
    try {
      return (rawData["id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputFile.html).
  String? get path {
    try {
      return (rawData["path"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputFile.html).
  String? get original_path {
    try {
      return (rawData["original_path"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputFile.html).
  String? get conversion {
    try {
      return (rawData["conversion"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputFile.html).
  int? get expected_size {
    try {
      return (rawData["expected_size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhotoSize.html).
class PhotoSize {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhotoSize.html).
  PhotoSize(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhotoSize.html).
  factory PhotoSize.create({
    String special_type = "photoSize",
    String? type,
    File? photo,
    int? width,
    int? height,
    List<int>? progressive_sizes,
  }) {
    try {
      return PhotoSize({
        "@type": special_type,
        "type": type,
        "photo": (photo != null) ? photo.toJson() : null,
        "width": width,
        "height": height,
        "progressive_sizes": progressive_sizes,
      });
    } catch (e) {
      return PhotoSize({
        "@type": "error",
        "error": "${e}",
        "message": "error method PhotoSize.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhotoSize.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhotoSize.html).
  String? get type {
    try {
      return (rawData["type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhotoSize.html).
  File get photo {
    try {
      return File((rawData["photo"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at PhotoSize photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhotoSize.html).
  int? get width {
    try {
      return (rawData["width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhotoSize.html).
  int? get height {
    try {
      return (rawData["height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhotoSize.html).
  List<int> get progressive_sizes {
    try {
      return (rawData["progressive_sizes"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Minithumbnail.html).
class Minithumbnail {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Minithumbnail.html).
  Minithumbnail(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Minithumbnail.html).
  factory Minithumbnail.create({
    String special_type = "minithumbnail",
    int? width,
    int? height,
    String? data,
  }) {
    try {
      return Minithumbnail({
        "@type": special_type,
        "width": width,
        "height": height,
        "data": data,
      });
    } catch (e) {
      return Minithumbnail({
        "@type": "error",
        "error": "${e}",
        "message": "error method Minithumbnail.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Minithumbnail.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Minithumbnail.html).
  int? get width {
    try {
      return (rawData["width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Minithumbnail.html).
  int? get height {
    try {
      return (rawData["height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Minithumbnail.html).
  String? get data {
    try {
      return (rawData["data"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThumbnailFormat.html).
class ThumbnailFormat {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThumbnailFormat.html).
  ThumbnailFormat(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThumbnailFormat.html).
  factory ThumbnailFormat.create({
    String special_type = "thumbnailFormatJpeg",
  }) {
    try {
      return ThumbnailFormat({
        "@type": special_type,
      });
    } catch (e) {
      return ThumbnailFormat({
        "@type": "error",
        "error": "${e}",
        "message": "error method ThumbnailFormat.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThumbnailFormat.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Thumbnail.html).
class Thumbnail {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Thumbnail.html).
  Thumbnail(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Thumbnail.html).
  factory Thumbnail.create({
    String special_type = "thumbnail",
    ThumbnailFormat? format,
    int? width,
    int? height,
    File? file,
  }) {
    try {
      return Thumbnail({
        "@type": special_type,
        "format": (format != null) ? format.toJson() : null,
        "width": width,
        "height": height,
        "file": (file != null) ? file.toJson() : null,
      });
    } catch (e) {
      return Thumbnail({
        "@type": "error",
        "error": "${e}",
        "message": "error method Thumbnail.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Thumbnail.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Thumbnail.html).
  ThumbnailFormat get format {
    try {
      return ThumbnailFormat((rawData["format"] as Map));
    } catch (e) {
      return ThumbnailFormat({"@type": "error", "error": "${e}", "message": "error at Thumbnail format"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Thumbnail.html).
  int? get width {
    try {
      return (rawData["width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Thumbnail.html).
  int? get height {
    try {
      return (rawData["height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Thumbnail.html).
  File get file {
    try {
      return File((rawData["file"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at Thumbnail file"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MaskPoint.html).
class MaskPoint {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MaskPoint.html).
  MaskPoint(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MaskPoint.html).
  factory MaskPoint.create({
    String special_type = "maskPointForehead",
  }) {
    try {
      return MaskPoint({
        "@type": special_type,
      });
    } catch (e) {
      return MaskPoint({
        "@type": "error",
        "error": "${e}",
        "message": "error method MaskPoint.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MaskPoint.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MaskPosition.html).
class MaskPosition {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MaskPosition.html).
  MaskPosition(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MaskPosition.html).
  factory MaskPosition.create({
    String special_type = "maskPosition",
    MaskPoint? point,
    double? x_shift,
    double? y_shift,
    double? scale,
  }) {
    try {
      return MaskPosition({
        "@type": special_type,
        "point": (point != null) ? point.toJson() : null,
        "x_shift": x_shift,
        "y_shift": y_shift,
        "scale": scale,
      });
    } catch (e) {
      return MaskPosition({
        "@type": "error",
        "error": "${e}",
        "message": "error method MaskPosition.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MaskPosition.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MaskPosition.html).
  MaskPoint get point {
    try {
      return MaskPoint((rawData["point"] as Map));
    } catch (e) {
      return MaskPoint({"@type": "error", "error": "${e}", "message": "error at MaskPosition point"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MaskPosition.html).
  double? get x_shift {
    try {
      return (rawData["x_shift"] as double);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MaskPosition.html).
  double? get y_shift {
    try {
      return (rawData["y_shift"] as double);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MaskPosition.html).
  double? get scale {
    try {
      return (rawData["scale"] as double);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerFormat.html).
class StickerFormat {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerFormat.html).
  StickerFormat(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerFormat.html).
  factory StickerFormat.create({
    String special_type = "stickerFormatWebp",
  }) {
    try {
      return StickerFormat({
        "@type": special_type,
      });
    } catch (e) {
      return StickerFormat({
        "@type": "error",
        "error": "${e}",
        "message": "error method StickerFormat.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerFormat.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerType.html).
class StickerType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerType.html).
  StickerType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerType.html).
  factory StickerType.create({
    String special_type = "stickerTypeRegular",
  }) {
    try {
      return StickerType({
        "@type": special_type,
      });
    } catch (e) {
      return StickerType({
        "@type": "error",
        "error": "${e}",
        "message": "error method StickerType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ClosedVectorPath.html).
class ClosedVectorPath {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ClosedVectorPath.html).
  ClosedVectorPath(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ClosedVectorPath.html).
  factory ClosedVectorPath.create({
    String special_type = "closedVectorPath",
    List<VectorPathCommand>? commands,
  }) {
    try {
      return ClosedVectorPath({
        "@type": special_type,
        "commands": (commands != null)
            ? commands.map((e) {
                return VectorPathCommand((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return ClosedVectorPath({
        "@type": "error",
        "error": "${e}",
        "message": "error method ClosedVectorPath.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ClosedVectorPath.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ClosedVectorPath.html).
  List<VectorPathCommand> get commands {
    try {
      return (rawData["commands"] as List)
          .map((e) {
            return VectorPathCommand((e as Map));
          })
          .toList()
          .cast<VectorPathCommand>();
    } catch (e) {
      return [
        VectorPathCommand({"@type": "error", "error": "${e}", "message": "error at ClosedVectorPath commands"})
      ].cast<VectorPathCommand>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PollOption.html).
class PollOption {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PollOption.html).
  PollOption(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PollOption.html).
  factory PollOption.create({
    String special_type = "pollOption",
    String? text,
    int? voter_count,
    int? vote_percentage,
    bool? is_chosen,
    bool? is_being_chosen,
  }) {
    try {
      return PollOption({
        "@type": special_type,
        "text": text,
        "voter_count": voter_count,
        "vote_percentage": vote_percentage,
        "is_chosen": is_chosen,
        "is_being_chosen": is_being_chosen,
      });
    } catch (e) {
      return PollOption({
        "@type": "error",
        "error": "${e}",
        "message": "error method PollOption.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PollOption.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PollOption.html).
  String? get text {
    try {
      return (rawData["text"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PollOption.html).
  int? get voter_count {
    try {
      return (rawData["voter_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PollOption.html).
  int? get vote_percentage {
    try {
      return (rawData["vote_percentage"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PollOption.html).
  bool? get is_chosen {
    try {
      return (rawData["is_chosen"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PollOption.html).
  bool? get is_being_chosen {
    try {
      return (rawData["is_being_chosen"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PollType.html).
class PollType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PollType.html).
  PollType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PollType.html).
  factory PollType.create({
    String special_type = "pollTypeRegular",
    bool? allow_multiple_answers,
    int? correct_option_id,
    FormattedText? explanation,
  }) {
    try {
      return PollType({
        "@type": special_type,
        "allow_multiple_answers": allow_multiple_answers,
        "correct_option_id": correct_option_id,
        "explanation": (explanation != null) ? explanation.toJson() : null,
      });
    } catch (e) {
      return PollType({
        "@type": "error",
        "error": "${e}",
        "message": "error method PollType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PollType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PollType.html).
  bool? get allow_multiple_answers {
    try {
      return (rawData["allow_multiple_answers"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PollType.html).
  int? get correct_option_id {
    try {
      return (rawData["correct_option_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PollType.html).
  FormattedText get explanation {
    try {
      return FormattedText((rawData["explanation"] as Map));
    } catch (e) {
      return FormattedText({"@type": "error", "error": "${e}", "message": "error at PollType explanation"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animation.html).
class Animation {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animation.html).
  Animation(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animation.html).
  factory Animation.create({
    String special_type = "animation",
    int? duration,
    int? width,
    int? height,
    String? file_name,
    String? mime_type,
    bool? has_stickers,
    Minithumbnail? minithumbnail,
    Thumbnail? thumbnail,
    File? animation,
  }) {
    try {
      return Animation({
        "@type": special_type,
        "duration": duration,
        "width": width,
        "height": height,
        "file_name": file_name,
        "mime_type": mime_type,
        "has_stickers": has_stickers,
        "minithumbnail": (minithumbnail != null) ? minithumbnail.toJson() : null,
        "thumbnail": (thumbnail != null) ? thumbnail.toJson() : null,
        "animation": (animation != null) ? animation.toJson() : null,
      });
    } catch (e) {
      return Animation({
        "@type": "error",
        "error": "${e}",
        "message": "error method Animation.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animation.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animation.html).
  int? get duration {
    try {
      return (rawData["duration"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animation.html).
  int? get width {
    try {
      return (rawData["width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animation.html).
  int? get height {
    try {
      return (rawData["height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animation.html).
  String? get file_name {
    try {
      return (rawData["file_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animation.html).
  String? get mime_type {
    try {
      return (rawData["mime_type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animation.html).
  bool? get has_stickers {
    try {
      return (rawData["has_stickers"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animation.html).
  Minithumbnail get minithumbnail {
    try {
      return Minithumbnail((rawData["minithumbnail"] as Map));
    } catch (e) {
      return Minithumbnail({"@type": "error", "error": "${e}", "message": "error at Animation minithumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animation.html).
  Thumbnail get thumbnail {
    try {
      return Thumbnail((rawData["thumbnail"] as Map));
    } catch (e) {
      return Thumbnail({"@type": "error", "error": "${e}", "message": "error at Animation thumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animation.html).
  File get animation {
    try {
      return File((rawData["animation"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at Animation animation"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Audio.html).
class Audio {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Audio.html).
  Audio(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Audio.html).
  factory Audio.create({
    String special_type = "audio",
    int? duration,
    String? title,
    String? performer,
    String? file_name,
    String? mime_type,
    Minithumbnail? album_cover_minithumbnail,
    Thumbnail? album_cover_thumbnail,
    List<Thumbnail>? external_album_covers,
    File? audio,
  }) {
    try {
      return Audio({
        "@type": special_type,
        "duration": duration,
        "title": title,
        "performer": performer,
        "file_name": file_name,
        "mime_type": mime_type,
        "album_cover_minithumbnail": (album_cover_minithumbnail != null) ? album_cover_minithumbnail.toJson() : null,
        "album_cover_thumbnail": (album_cover_thumbnail != null) ? album_cover_thumbnail.toJson() : null,
        "external_album_covers": (external_album_covers != null)
            ? external_album_covers.map((e) {
                return Thumbnail((e as Map)).toJson();
              }).toList()
            : null,
        "audio": (audio != null) ? audio.toJson() : null,
      });
    } catch (e) {
      return Audio({
        "@type": "error",
        "error": "${e}",
        "message": "error method Audio.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Audio.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Audio.html).
  int? get duration {
    try {
      return (rawData["duration"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Audio.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Audio.html).
  String? get performer {
    try {
      return (rawData["performer"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Audio.html).
  String? get file_name {
    try {
      return (rawData["file_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Audio.html).
  String? get mime_type {
    try {
      return (rawData["mime_type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Audio.html).
  Minithumbnail get album_cover_minithumbnail {
    try {
      return Minithumbnail((rawData["album_cover_minithumbnail"] as Map));
    } catch (e) {
      return Minithumbnail({"@type": "error", "error": "${e}", "message": "error at Audio album_cover_minithumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Audio.html).
  Thumbnail get album_cover_thumbnail {
    try {
      return Thumbnail((rawData["album_cover_thumbnail"] as Map));
    } catch (e) {
      return Thumbnail({"@type": "error", "error": "${e}", "message": "error at Audio album_cover_thumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Audio.html).
  List<Thumbnail> get external_album_covers {
    try {
      return (rawData["external_album_covers"] as List)
          .map((e) {
            return Thumbnail((e as Map));
          })
          .toList()
          .cast<Thumbnail>();
    } catch (e) {
      return [
        Thumbnail({"@type": "error", "error": "${e}", "message": "error at Audio external_album_covers"})
      ].cast<Thumbnail>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Audio.html).
  File get audio {
    try {
      return File((rawData["audio"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at Audio audio"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Document.html).
class Document {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Document.html).
  Document(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Document.html).
  factory Document.create({
    String special_type = "document",
    String? file_name,
    String? mime_type,
    Minithumbnail? minithumbnail,
    Thumbnail? thumbnail,
    File? document,
  }) {
    try {
      return Document({
        "@type": special_type,
        "file_name": file_name,
        "mime_type": mime_type,
        "minithumbnail": (minithumbnail != null) ? minithumbnail.toJson() : null,
        "thumbnail": (thumbnail != null) ? thumbnail.toJson() : null,
        "document": (document != null) ? document.toJson() : null,
      });
    } catch (e) {
      return Document({
        "@type": "error",
        "error": "${e}",
        "message": "error method Document.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Document.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Document.html).
  String? get file_name {
    try {
      return (rawData["file_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Document.html).
  String? get mime_type {
    try {
      return (rawData["mime_type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Document.html).
  Minithumbnail get minithumbnail {
    try {
      return Minithumbnail((rawData["minithumbnail"] as Map));
    } catch (e) {
      return Minithumbnail({"@type": "error", "error": "${e}", "message": "error at Document minithumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Document.html).
  Thumbnail get thumbnail {
    try {
      return Thumbnail((rawData["thumbnail"] as Map));
    } catch (e) {
      return Thumbnail({"@type": "error", "error": "${e}", "message": "error at Document thumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Document.html).
  File get document {
    try {
      return File((rawData["document"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at Document document"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Photo.html).
class Photo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Photo.html).
  Photo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Photo.html).
  factory Photo.create({
    String special_type = "photo",
    bool? has_stickers,
    Minithumbnail? minithumbnail,
    List<PhotoSize>? sizes,
  }) {
    try {
      return Photo({
        "@type": special_type,
        "has_stickers": has_stickers,
        "minithumbnail": (minithumbnail != null) ? minithumbnail.toJson() : null,
        "sizes": (sizes != null)
            ? sizes.map((e) {
                return PhotoSize((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return Photo({
        "@type": "error",
        "error": "${e}",
        "message": "error method Photo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Photo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Photo.html).
  bool? get has_stickers {
    try {
      return (rawData["has_stickers"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Photo.html).
  Minithumbnail get minithumbnail {
    try {
      return Minithumbnail((rawData["minithumbnail"] as Map));
    } catch (e) {
      return Minithumbnail({"@type": "error", "error": "${e}", "message": "error at Photo minithumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Photo.html).
  List<PhotoSize> get sizes {
    try {
      return (rawData["sizes"] as List)
          .map((e) {
            return PhotoSize((e as Map));
          })
          .toList()
          .cast<PhotoSize>();
    } catch (e) {
      return [
        PhotoSize({"@type": "error", "error": "${e}", "message": "error at Photo sizes"})
      ].cast<PhotoSize>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sticker.html).
class Sticker {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sticker.html).
  Sticker(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sticker.html).
  factory Sticker.create({
    String special_type = "sticker",
    int? set_id,
    int? width,
    int? height,
    String? emoji,
    StickerFormat? format,
    StickerType? type,
    MaskPosition? mask_position,
    int? custom_emoji_id,
    List<ClosedVectorPath>? outline,
    Thumbnail? thumbnail,
    bool? is_premium,
    File? premium_animation,
    File? sticker,
  }) {
    try {
      return Sticker({
        "@type": special_type,
        "set_id": set_id,
        "width": width,
        "height": height,
        "emoji": emoji,
        "format": (format != null) ? format.toJson() : null,
        "type": (type != null) ? type.toJson() : null,
        "mask_position": (mask_position != null) ? mask_position.toJson() : null,
        "custom_emoji_id": custom_emoji_id,
        "outline": (outline != null)
            ? outline.map((e) {
                return ClosedVectorPath((e as Map)).toJson();
              }).toList()
            : null,
        "thumbnail": (thumbnail != null) ? thumbnail.toJson() : null,
        "is_premium": is_premium,
        "premium_animation": (premium_animation != null) ? premium_animation.toJson() : null,
        "sticker": (sticker != null) ? sticker.toJson() : null,
      });
    } catch (e) {
      return Sticker({
        "@type": "error",
        "error": "${e}",
        "message": "error method Sticker.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sticker.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sticker.html).
  int? get set_id {
    try {
      return (rawData["set_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sticker.html).
  int? get width {
    try {
      return (rawData["width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sticker.html).
  int? get height {
    try {
      return (rawData["height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sticker.html).
  String? get emoji {
    try {
      return (rawData["emoji"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sticker.html).
  StickerFormat get format {
    try {
      return StickerFormat((rawData["format"] as Map));
    } catch (e) {
      return StickerFormat({"@type": "error", "error": "${e}", "message": "error at Sticker format"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sticker.html).
  StickerType get type {
    try {
      return StickerType((rawData["type"] as Map));
    } catch (e) {
      return StickerType({"@type": "error", "error": "${e}", "message": "error at Sticker type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sticker.html).
  MaskPosition get mask_position {
    try {
      return MaskPosition((rawData["mask_position"] as Map));
    } catch (e) {
      return MaskPosition({"@type": "error", "error": "${e}", "message": "error at Sticker mask_position"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sticker.html).
  int? get custom_emoji_id {
    try {
      return (rawData["custom_emoji_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sticker.html).
  List<ClosedVectorPath> get outline {
    try {
      return (rawData["outline"] as List)
          .map((e) {
            return ClosedVectorPath((e as Map));
          })
          .toList()
          .cast<ClosedVectorPath>();
    } catch (e) {
      return [
        ClosedVectorPath({"@type": "error", "error": "${e}", "message": "error at Sticker outline"})
      ].cast<ClosedVectorPath>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sticker.html).
  Thumbnail get thumbnail {
    try {
      return Thumbnail((rawData["thumbnail"] as Map));
    } catch (e) {
      return Thumbnail({"@type": "error", "error": "${e}", "message": "error at Sticker thumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sticker.html).
  bool? get is_premium {
    try {
      return (rawData["is_premium"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sticker.html).
  File get premium_animation {
    try {
      return File((rawData["premium_animation"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at Sticker premium_animation"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sticker.html).
  File get sticker {
    try {
      return File((rawData["sticker"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at Sticker sticker"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Video.html).
class Video {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Video.html).
  Video(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Video.html).
  factory Video.create({
    String special_type = "video",
    int? duration,
    int? width,
    int? height,
    String? file_name,
    String? mime_type,
    bool? has_stickers,
    bool? supports_streaming,
    Minithumbnail? minithumbnail,
    Thumbnail? thumbnail,
    File? video,
  }) {
    try {
      return Video({
        "@type": special_type,
        "duration": duration,
        "width": width,
        "height": height,
        "file_name": file_name,
        "mime_type": mime_type,
        "has_stickers": has_stickers,
        "supports_streaming": supports_streaming,
        "minithumbnail": (minithumbnail != null) ? minithumbnail.toJson() : null,
        "thumbnail": (thumbnail != null) ? thumbnail.toJson() : null,
        "video": (video != null) ? video.toJson() : null,
      });
    } catch (e) {
      return Video({
        "@type": "error",
        "error": "${e}",
        "message": "error method Video.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Video.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Video.html).
  int? get duration {
    try {
      return (rawData["duration"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Video.html).
  int? get width {
    try {
      return (rawData["width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Video.html).
  int? get height {
    try {
      return (rawData["height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Video.html).
  String? get file_name {
    try {
      return (rawData["file_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Video.html).
  String? get mime_type {
    try {
      return (rawData["mime_type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Video.html).
  bool? get has_stickers {
    try {
      return (rawData["has_stickers"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Video.html).
  bool? get supports_streaming {
    try {
      return (rawData["supports_streaming"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Video.html).
  Minithumbnail get minithumbnail {
    try {
      return Minithumbnail((rawData["minithumbnail"] as Map));
    } catch (e) {
      return Minithumbnail({"@type": "error", "error": "${e}", "message": "error at Video minithumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Video.html).
  Thumbnail get thumbnail {
    try {
      return Thumbnail((rawData["thumbnail"] as Map));
    } catch (e) {
      return Thumbnail({"@type": "error", "error": "${e}", "message": "error at Video thumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Video.html).
  File get video {
    try {
      return File((rawData["video"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at Video video"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VideoNote.html).
class VideoNote {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VideoNote.html).
  VideoNote(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VideoNote.html).
  factory VideoNote.create({
    String special_type = "videoNote",
    int? duration,
    int? length,
    Minithumbnail? minithumbnail,
    Thumbnail? thumbnail,
    File? video,
  }) {
    try {
      return VideoNote({
        "@type": special_type,
        "duration": duration,
        "length": length,
        "minithumbnail": (minithumbnail != null) ? minithumbnail.toJson() : null,
        "thumbnail": (thumbnail != null) ? thumbnail.toJson() : null,
        "video": (video != null) ? video.toJson() : null,
      });
    } catch (e) {
      return VideoNote({
        "@type": "error",
        "error": "${e}",
        "message": "error method VideoNote.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VideoNote.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VideoNote.html).
  int? get duration {
    try {
      return (rawData["duration"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VideoNote.html).
  int? get length {
    try {
      return (rawData["length"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VideoNote.html).
  Minithumbnail get minithumbnail {
    try {
      return Minithumbnail((rawData["minithumbnail"] as Map));
    } catch (e) {
      return Minithumbnail({"@type": "error", "error": "${e}", "message": "error at VideoNote minithumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VideoNote.html).
  Thumbnail get thumbnail {
    try {
      return Thumbnail((rawData["thumbnail"] as Map));
    } catch (e) {
      return Thumbnail({"@type": "error", "error": "${e}", "message": "error at VideoNote thumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VideoNote.html).
  File get video {
    try {
      return File((rawData["video"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at VideoNote video"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VoiceNote.html).
class VoiceNote {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VoiceNote.html).
  VoiceNote(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VoiceNote.html).
  factory VoiceNote.create({
    String special_type = "voiceNote",
    int? duration,
    String? waveform,
    String? mime_type,
    SpeechRecognitionResult? speech_recognition_result,
    File? voice,
  }) {
    try {
      return VoiceNote({
        "@type": special_type,
        "duration": duration,
        "waveform": waveform,
        "mime_type": mime_type,
        "speech_recognition_result": (speech_recognition_result != null) ? speech_recognition_result.toJson() : null,
        "voice": (voice != null) ? voice.toJson() : null,
      });
    } catch (e) {
      return VoiceNote({
        "@type": "error",
        "error": "${e}",
        "message": "error method VoiceNote.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VoiceNote.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VoiceNote.html).
  int? get duration {
    try {
      return (rawData["duration"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VoiceNote.html).
  String? get waveform {
    try {
      return (rawData["waveform"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VoiceNote.html).
  String? get mime_type {
    try {
      return (rawData["mime_type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VoiceNote.html).
  SpeechRecognitionResult get speech_recognition_result {
    try {
      return SpeechRecognitionResult((rawData["speech_recognition_result"] as Map));
    } catch (e) {
      return SpeechRecognitionResult({"@type": "error", "error": "${e}", "message": "error at VoiceNote speech_recognition_result"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VoiceNote.html).
  File get voice {
    try {
      return File((rawData["voice"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at VoiceNote voice"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AnimatedEmoji.html).
class AnimatedEmoji {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AnimatedEmoji.html).
  AnimatedEmoji(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AnimatedEmoji.html).
  factory AnimatedEmoji.create({
    String special_type = "animatedEmoji",
    Sticker? sticker,
    int? sticker_width,
    int? sticker_height,
    int? fitzpatrick_type,
    File? sound,
  }) {
    try {
      return AnimatedEmoji({
        "@type": special_type,
        "sticker": (sticker != null) ? sticker.toJson() : null,
        "sticker_width": sticker_width,
        "sticker_height": sticker_height,
        "fitzpatrick_type": fitzpatrick_type,
        "sound": (sound != null) ? sound.toJson() : null,
      });
    } catch (e) {
      return AnimatedEmoji({
        "@type": "error",
        "error": "${e}",
        "message": "error method AnimatedEmoji.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AnimatedEmoji.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AnimatedEmoji.html).
  Sticker get sticker {
    try {
      return Sticker((rawData["sticker"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at AnimatedEmoji sticker"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AnimatedEmoji.html).
  int? get sticker_width {
    try {
      return (rawData["sticker_width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AnimatedEmoji.html).
  int? get sticker_height {
    try {
      return (rawData["sticker_height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AnimatedEmoji.html).
  int? get fitzpatrick_type {
    try {
      return (rawData["fitzpatrick_type"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AnimatedEmoji.html).
  File get sound {
    try {
      return File((rawData["sound"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at AnimatedEmoji sound"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Contact.html).
class Contact {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Contact.html).
  Contact(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Contact.html).
  factory Contact.create({
    String special_type = "contact",
    String? phone_number,
    String? first_name,
    String? last_name,
    String? vcard,
    int? user_id,
  }) {
    try {
      return Contact({
        "@type": special_type,
        "phone_number": phone_number,
        "first_name": first_name,
        "last_name": last_name,
        "vcard": vcard,
        "user_id": user_id,
      });
    } catch (e) {
      return Contact({
        "@type": "error",
        "error": "${e}",
        "message": "error method Contact.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Contact.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Contact.html).
  String? get phone_number {
    try {
      return (rawData["phone_number"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Contact.html).
  String? get first_name {
    try {
      return (rawData["first_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Contact.html).
  String? get last_name {
    try {
      return (rawData["last_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Contact.html).
  String? get vcard {
    try {
      return (rawData["vcard"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Contact.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Location.html).
class Location {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Location.html).
  Location(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Location.html).
  factory Location.create({
    String special_type = "location",
    double? latitude,
    double? longitude,
    double? horizontal_accuracy,
  }) {
    try {
      return Location({
        "@type": special_type,
        "latitude": latitude,
        "longitude": longitude,
        "horizontal_accuracy": horizontal_accuracy,
      });
    } catch (e) {
      return Location({
        "@type": "error",
        "error": "${e}",
        "message": "error method Location.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Location.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Location.html).
  double? get latitude {
    try {
      return (rawData["latitude"] as double);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Location.html).
  double? get longitude {
    try {
      return (rawData["longitude"] as double);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Location.html).
  double? get horizontal_accuracy {
    try {
      return (rawData["horizontal_accuracy"] as double);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Venue.html).
class Venue {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Venue.html).
  Venue(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Venue.html).
  factory Venue.create({
    String special_type = "venue",
    Location? location,
    String? title,
    String? address,
    String? provider,
    String? id,
    String? type,
  }) {
    try {
      return Venue({
        "@type": special_type,
        "location": (location != null) ? location.toJson() : null,
        "title": title,
        "address": address,
        "provider": provider,
        "id": id,
        "type": type,
      });
    } catch (e) {
      return Venue({
        "@type": "error",
        "error": "${e}",
        "message": "error method Venue.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Venue.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Venue.html).
  Location get location {
    try {
      return Location((rawData["location"] as Map));
    } catch (e) {
      return Location({"@type": "error", "error": "${e}", "message": "error at Venue location"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Venue.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Venue.html).
  String? get address {
    try {
      return (rawData["address"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Venue.html).
  String? get provider {
    try {
      return (rawData["provider"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Venue.html).
  String? get id {
    try {
      return (rawData["id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Venue.html).
  String? get type {
    try {
      return (rawData["type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Game.html).
class Game {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Game.html).
  Game(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Game.html).
  factory Game.create({
    String special_type = "game",
    int? id,
    String? short_name,
    String? title,
    FormattedText? text,
    String? description,
    Photo? photo,
    Animation? animation,
  }) {
    try {
      return Game({
        "@type": special_type,
        "id": id,
        "short_name": short_name,
        "title": title,
        "text": (text != null) ? text.toJson() : null,
        "description": description,
        "photo": (photo != null) ? photo.toJson() : null,
        "animation": (animation != null) ? animation.toJson() : null,
      });
    } catch (e) {
      return Game({
        "@type": "error",
        "error": "${e}",
        "message": "error method Game.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Game.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Game.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Game.html).
  String? get short_name {
    try {
      return (rawData["short_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Game.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Game.html).
  FormattedText get text {
    try {
      return FormattedText((rawData["text"] as Map));
    } catch (e) {
      return FormattedText({"@type": "error", "error": "${e}", "message": "error at Game text"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Game.html).
  String? get description {
    try {
      return (rawData["description"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Game.html).
  Photo get photo {
    try {
      return Photo((rawData["photo"] as Map));
    } catch (e) {
      return Photo({"@type": "error", "error": "${e}", "message": "error at Game photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Game.html).
  Animation get animation {
    try {
      return Animation((rawData["animation"] as Map));
    } catch (e) {
      return Animation({"@type": "error", "error": "${e}", "message": "error at Game animation"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Poll.html).
class Poll {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Poll.html).
  Poll(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Poll.html).
  factory Poll.create({
    String special_type = "poll",
    int? id,
    String? question,
    List<PollOption>? options,
    int? total_voter_count,
    List<int>? recent_voter_user_ids,
    bool? is_anonymous,
    PollType? type,
    int? open_period,
    int? close_date,
    bool? is_closed,
  }) {
    try {
      return Poll({
        "@type": special_type,
        "id": id,
        "question": question,
        "options": (options != null)
            ? options.map((e) {
                return PollOption((e as Map)).toJson();
              }).toList()
            : null,
        "total_voter_count": total_voter_count,
        "recent_voter_user_ids": recent_voter_user_ids,
        "is_anonymous": is_anonymous,
        "type": (type != null) ? type.toJson() : null,
        "open_period": open_period,
        "close_date": close_date,
        "is_closed": is_closed,
      });
    } catch (e) {
      return Poll({
        "@type": "error",
        "error": "${e}",
        "message": "error method Poll.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Poll.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Poll.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Poll.html).
  String? get question {
    try {
      return (rawData["question"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Poll.html).
  List<PollOption> get options {
    try {
      return (rawData["options"] as List)
          .map((e) {
            return PollOption((e as Map));
          })
          .toList()
          .cast<PollOption>();
    } catch (e) {
      return [
        PollOption({"@type": "error", "error": "${e}", "message": "error at Poll options"})
      ].cast<PollOption>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Poll.html).
  int? get total_voter_count {
    try {
      return (rawData["total_voter_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Poll.html).
  List<int> get recent_voter_user_ids {
    try {
      return (rawData["recent_voter_user_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Poll.html).
  bool? get is_anonymous {
    try {
      return (rawData["is_anonymous"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Poll.html).
  PollType get type {
    try {
      return PollType((rawData["type"] as Map));
    } catch (e) {
      return PollType({"@type": "error", "error": "${e}", "message": "error at Poll type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Poll.html).
  int? get open_period {
    try {
      return (rawData["open_period"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Poll.html).
  int? get close_date {
    try {
      return (rawData["close_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Poll.html).
  bool? get is_closed {
    try {
      return (rawData["is_closed"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ProfilePhoto.html).
class ProfilePhoto {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ProfilePhoto.html).
  ProfilePhoto(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ProfilePhoto.html).
  factory ProfilePhoto.create({
    String special_type = "profilePhoto",
    int? id,
    File? small,
    File? big,
    Minithumbnail? minithumbnail,
    bool? has_animation,
  }) {
    try {
      return ProfilePhoto({
        "@type": special_type,
        "id": id,
        "small": (small != null) ? small.toJson() : null,
        "big": (big != null) ? big.toJson() : null,
        "minithumbnail": (minithumbnail != null) ? minithumbnail.toJson() : null,
        "has_animation": has_animation,
      });
    } catch (e) {
      return ProfilePhoto({
        "@type": "error",
        "error": "${e}",
        "message": "error method ProfilePhoto.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ProfilePhoto.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ProfilePhoto.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ProfilePhoto.html).
  File get small {
    try {
      return File((rawData["small"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at ProfilePhoto small"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ProfilePhoto.html).
  File get big {
    try {
      return File((rawData["big"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at ProfilePhoto big"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ProfilePhoto.html).
  Minithumbnail get minithumbnail {
    try {
      return Minithumbnail((rawData["minithumbnail"] as Map));
    } catch (e) {
      return Minithumbnail({"@type": "error", "error": "${e}", "message": "error at ProfilePhoto minithumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ProfilePhoto.html).
  bool? get has_animation {
    try {
      return (rawData["has_animation"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhotoInfo.html).
class ChatPhotoInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhotoInfo.html).
  ChatPhotoInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhotoInfo.html).
  factory ChatPhotoInfo.create({
    String special_type = "chatPhotoInfo",
    File? small,
    File? big,
    Minithumbnail? minithumbnail,
    bool? has_animation,
  }) {
    try {
      return ChatPhotoInfo({
        "@type": special_type,
        "small": (small != null) ? small.toJson() : null,
        "big": (big != null) ? big.toJson() : null,
        "minithumbnail": (minithumbnail != null) ? minithumbnail.toJson() : null,
        "has_animation": has_animation,
      });
    } catch (e) {
      return ChatPhotoInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatPhotoInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhotoInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhotoInfo.html).
  File get small {
    try {
      return File((rawData["small"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at ChatPhotoInfo small"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhotoInfo.html).
  File get big {
    try {
      return File((rawData["big"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at ChatPhotoInfo big"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhotoInfo.html).
  Minithumbnail get minithumbnail {
    try {
      return Minithumbnail((rawData["minithumbnail"] as Map));
    } catch (e) {
      return Minithumbnail({"@type": "error", "error": "${e}", "message": "error at ChatPhotoInfo minithumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhotoInfo.html).
  bool? get has_animation {
    try {
      return (rawData["has_animation"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserType.html).
class UserType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserType.html).
  UserType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserType.html).
  factory UserType.create({
    String special_type = "userTypeRegular",
    bool? can_join_groups,
    bool? can_read_all_group_messages,
    bool? is_inline,
    String? inline_query_placeholder,
    bool? need_location,
    bool? can_be_added_to_attachment_menu,
  }) {
    try {
      return UserType({
        "@type": special_type,
        "can_join_groups": can_join_groups,
        "can_read_all_group_messages": can_read_all_group_messages,
        "is_inline": is_inline,
        "inline_query_placeholder": inline_query_placeholder,
        "need_location": need_location,
        "can_be_added_to_attachment_menu": can_be_added_to_attachment_menu,
      });
    } catch (e) {
      return UserType({
        "@type": "error",
        "error": "${e}",
        "message": "error method UserType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserType.html).
  bool? get can_join_groups {
    try {
      return (rawData["can_join_groups"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserType.html).
  bool? get can_read_all_group_messages {
    try {
      return (rawData["can_read_all_group_messages"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserType.html).
  bool? get is_inline {
    try {
      return (rawData["is_inline"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserType.html).
  String? get inline_query_placeholder {
    try {
      return (rawData["inline_query_placeholder"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserType.html).
  bool? get need_location {
    try {
      return (rawData["need_location"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserType.html).
  bool? get can_be_added_to_attachment_menu {
    try {
      return (rawData["can_be_added_to_attachment_menu"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommand.html).
class BotCommand {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommand.html).
  BotCommand(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommand.html).
  factory BotCommand.create({
    String special_type = "botCommand",
    String? command,
    String? description,
  }) {
    try {
      return BotCommand({
        "@type": special_type,
        "command": command,
        "description": description,
      });
    } catch (e) {
      return BotCommand({
        "@type": "error",
        "error": "${e}",
        "message": "error method BotCommand.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommand.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommand.html).
  String? get command {
    try {
      return (rawData["command"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommand.html).
  String? get description {
    try {
      return (rawData["description"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommands.html).
class BotCommands {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommands.html).
  BotCommands(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommands.html).
  factory BotCommands.create({
    String special_type = "botCommands",
    int? bot_user_id,
    List<BotCommand>? commands,
  }) {
    try {
      return BotCommands({
        "@type": special_type,
        "bot_user_id": bot_user_id,
        "commands": (commands != null)
            ? commands.map((e) {
                return BotCommand((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return BotCommands({
        "@type": "error",
        "error": "${e}",
        "message": "error method BotCommands.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommands.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommands.html).
  int? get bot_user_id {
    try {
      return (rawData["bot_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommands.html).
  List<BotCommand> get commands {
    try {
      return (rawData["commands"] as List)
          .map((e) {
            return BotCommand((e as Map));
          })
          .toList()
          .cast<BotCommand>();
    } catch (e) {
      return [
        BotCommand({"@type": "error", "error": "${e}", "message": "error at BotCommands commands"})
      ].cast<BotCommand>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotMenuButton.html).
class BotMenuButton {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotMenuButton.html).
  BotMenuButton(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotMenuButton.html).
  factory BotMenuButton.create({
    String special_type = "botMenuButton",
    String? text,
    String? url,
  }) {
    try {
      return BotMenuButton({
        "@type": special_type,
        "text": text,
        "url": url,
      });
    } catch (e) {
      return BotMenuButton({
        "@type": "error",
        "error": "${e}",
        "message": "error method BotMenuButton.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotMenuButton.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotMenuButton.html).
  String? get text {
    try {
      return (rawData["text"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotMenuButton.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatLocation.html).
class ChatLocation {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatLocation.html).
  ChatLocation(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatLocation.html).
  factory ChatLocation.create({
    String special_type = "chatLocation",
    Location? location,
    String? address,
  }) {
    try {
      return ChatLocation({
        "@type": special_type,
        "location": (location != null) ? location.toJson() : null,
        "address": address,
      });
    } catch (e) {
      return ChatLocation({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatLocation.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatLocation.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatLocation.html).
  Location get location {
    try {
      return Location((rawData["location"] as Map));
    } catch (e) {
      return Location({"@type": "error", "error": "${e}", "message": "error at ChatLocation location"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatLocation.html).
  String? get address {
    try {
      return (rawData["address"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AnimatedChatPhoto.html).
class AnimatedChatPhoto {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AnimatedChatPhoto.html).
  AnimatedChatPhoto(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AnimatedChatPhoto.html).
  factory AnimatedChatPhoto.create({
    String special_type = "animatedChatPhoto",
    int? length,
    File? file,
    double? main_frame_timestamp,
  }) {
    try {
      return AnimatedChatPhoto({
        "@type": special_type,
        "length": length,
        "file": (file != null) ? file.toJson() : null,
        "main_frame_timestamp": main_frame_timestamp,
      });
    } catch (e) {
      return AnimatedChatPhoto({
        "@type": "error",
        "error": "${e}",
        "message": "error method AnimatedChatPhoto.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AnimatedChatPhoto.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AnimatedChatPhoto.html).
  int? get length {
    try {
      return (rawData["length"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AnimatedChatPhoto.html).
  File get file {
    try {
      return File((rawData["file"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at AnimatedChatPhoto file"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AnimatedChatPhoto.html).
  double? get main_frame_timestamp {
    try {
      return (rawData["main_frame_timestamp"] as double);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhoto.html).
class ChatPhoto {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhoto.html).
  ChatPhoto(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhoto.html).
  factory ChatPhoto.create({
    String special_type = "chatPhoto",
    int? id,
    int? added_date,
    Minithumbnail? minithumbnail,
    List<PhotoSize>? sizes,
    AnimatedChatPhoto? animation,
    AnimatedChatPhoto? small_animation,
  }) {
    try {
      return ChatPhoto({
        "@type": special_type,
        "id": id,
        "added_date": added_date,
        "minithumbnail": (minithumbnail != null) ? minithumbnail.toJson() : null,
        "sizes": (sizes != null)
            ? sizes.map((e) {
                return PhotoSize((e as Map)).toJson();
              }).toList()
            : null,
        "animation": (animation != null) ? animation.toJson() : null,
        "small_animation": (small_animation != null) ? small_animation.toJson() : null,
      });
    } catch (e) {
      return ChatPhoto({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatPhoto.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhoto.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhoto.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhoto.html).
  int? get added_date {
    try {
      return (rawData["added_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhoto.html).
  Minithumbnail get minithumbnail {
    try {
      return Minithumbnail((rawData["minithumbnail"] as Map));
    } catch (e) {
      return Minithumbnail({"@type": "error", "error": "${e}", "message": "error at ChatPhoto minithumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhoto.html).
  List<PhotoSize> get sizes {
    try {
      return (rawData["sizes"] as List)
          .map((e) {
            return PhotoSize((e as Map));
          })
          .toList()
          .cast<PhotoSize>();
    } catch (e) {
      return [
        PhotoSize({"@type": "error", "error": "${e}", "message": "error at ChatPhoto sizes"})
      ].cast<PhotoSize>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhoto.html).
  AnimatedChatPhoto get animation {
    try {
      return AnimatedChatPhoto((rawData["animation"] as Map));
    } catch (e) {
      return AnimatedChatPhoto({"@type": "error", "error": "${e}", "message": "error at ChatPhoto animation"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhoto.html).
  AnimatedChatPhoto get small_animation {
    try {
      return AnimatedChatPhoto((rawData["small_animation"] as Map));
    } catch (e) {
      return AnimatedChatPhoto({"@type": "error", "error": "${e}", "message": "error at ChatPhoto small_animation"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhotos.html).
class ChatPhotos {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhotos.html).
  ChatPhotos(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhotos.html).
  factory ChatPhotos.create({
    String special_type = "chatPhotos",
    int? total_count,
    List<ChatPhoto>? photos,
  }) {
    try {
      return ChatPhotos({
        "@type": special_type,
        "total_count": total_count,
        "photos": (photos != null)
            ? photos.map((e) {
                return ChatPhoto((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return ChatPhotos({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatPhotos.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhotos.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhotos.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPhotos.html).
  List<ChatPhoto> get photos {
    try {
      return (rawData["photos"] as List)
          .map((e) {
            return ChatPhoto((e as Map));
          })
          .toList()
          .cast<ChatPhoto>();
    } catch (e) {
      return [
        ChatPhoto({"@type": "error", "error": "${e}", "message": "error at ChatPhotos photos"})
      ].cast<ChatPhoto>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputChatPhoto.html).
class InputChatPhoto {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputChatPhoto.html).
  InputChatPhoto(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputChatPhoto.html).
  factory InputChatPhoto.create({
    String special_type = "inputChatPhotoPrevious",
    int? chat_photo_id,
    InputFile? photo,
    InputFile? animation,
    double? main_frame_timestamp,
  }) {
    try {
      return InputChatPhoto({
        "@type": special_type,
        "chat_photo_id": chat_photo_id,
        "photo": (photo != null) ? photo.toJson() : null,
        "animation": (animation != null) ? animation.toJson() : null,
        "main_frame_timestamp": main_frame_timestamp,
      });
    } catch (e) {
      return InputChatPhoto({
        "@type": "error",
        "error": "${e}",
        "message": "error method InputChatPhoto.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputChatPhoto.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputChatPhoto.html).
  int? get chat_photo_id {
    try {
      return (rawData["chat_photo_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputChatPhoto.html).
  InputFile get photo {
    try {
      return InputFile((rawData["photo"] as Map));
    } catch (e) {
      return InputFile({"@type": "error", "error": "${e}", "message": "error at InputChatPhoto photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputChatPhoto.html).
  InputFile get animation {
    try {
      return InputFile((rawData["animation"] as Map));
    } catch (e) {
      return InputFile({"@type": "error", "error": "${e}", "message": "error at InputChatPhoto animation"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputChatPhoto.html).
  double? get main_frame_timestamp {
    try {
      return (rawData["main_frame_timestamp"] as double);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPermissions.html).
class ChatPermissions {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPermissions.html).
  ChatPermissions(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPermissions.html).
  factory ChatPermissions.create({
    String special_type = "chatPermissions",
    bool? can_send_messages,
    bool? can_send_media_messages,
    bool? can_send_polls,
    bool? can_send_other_messages,
    bool? can_add_web_page_previews,
    bool? can_change_info,
    bool? can_invite_users,
    bool? can_pin_messages,
  }) {
    try {
      return ChatPermissions({
        "@type": special_type,
        "can_send_messages": can_send_messages,
        "can_send_media_messages": can_send_media_messages,
        "can_send_polls": can_send_polls,
        "can_send_other_messages": can_send_other_messages,
        "can_add_web_page_previews": can_add_web_page_previews,
        "can_change_info": can_change_info,
        "can_invite_users": can_invite_users,
        "can_pin_messages": can_pin_messages,
      });
    } catch (e) {
      return ChatPermissions({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatPermissions.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPermissions.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPermissions.html).
  bool? get can_send_messages {
    try {
      return (rawData["can_send_messages"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPermissions.html).
  bool? get can_send_media_messages {
    try {
      return (rawData["can_send_media_messages"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPermissions.html).
  bool? get can_send_polls {
    try {
      return (rawData["can_send_polls"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPermissions.html).
  bool? get can_send_other_messages {
    try {
      return (rawData["can_send_other_messages"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPermissions.html).
  bool? get can_add_web_page_previews {
    try {
      return (rawData["can_add_web_page_previews"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPermissions.html).
  bool? get can_change_info {
    try {
      return (rawData["can_change_info"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPermissions.html).
  bool? get can_invite_users {
    try {
      return (rawData["can_invite_users"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPermissions.html).
  bool? get can_pin_messages {
    try {
      return (rawData["can_pin_messages"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministratorRights.html).
class ChatAdministratorRights {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministratorRights.html).
  ChatAdministratorRights(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministratorRights.html).
  factory ChatAdministratorRights.create({
    String special_type = "chatAdministratorRights",
    bool? can_manage_chat,
    bool? can_change_info,
    bool? can_post_messages,
    bool? can_edit_messages,
    bool? can_delete_messages,
    bool? can_invite_users,
    bool? can_restrict_members,
    bool? can_pin_messages,
    bool? can_promote_members,
    bool? can_manage_video_chats,
    bool? is_anonymous,
  }) {
    try {
      return ChatAdministratorRights({
        "@type": special_type,
        "can_manage_chat": can_manage_chat,
        "can_change_info": can_change_info,
        "can_post_messages": can_post_messages,
        "can_edit_messages": can_edit_messages,
        "can_delete_messages": can_delete_messages,
        "can_invite_users": can_invite_users,
        "can_restrict_members": can_restrict_members,
        "can_pin_messages": can_pin_messages,
        "can_promote_members": can_promote_members,
        "can_manage_video_chats": can_manage_video_chats,
        "is_anonymous": is_anonymous,
      });
    } catch (e) {
      return ChatAdministratorRights({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatAdministratorRights.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministratorRights.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministratorRights.html).
  bool? get can_manage_chat {
    try {
      return (rawData["can_manage_chat"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministratorRights.html).
  bool? get can_change_info {
    try {
      return (rawData["can_change_info"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministratorRights.html).
  bool? get can_post_messages {
    try {
      return (rawData["can_post_messages"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministratorRights.html).
  bool? get can_edit_messages {
    try {
      return (rawData["can_edit_messages"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministratorRights.html).
  bool? get can_delete_messages {
    try {
      return (rawData["can_delete_messages"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministratorRights.html).
  bool? get can_invite_users {
    try {
      return (rawData["can_invite_users"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministratorRights.html).
  bool? get can_restrict_members {
    try {
      return (rawData["can_restrict_members"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministratorRights.html).
  bool? get can_pin_messages {
    try {
      return (rawData["can_pin_messages"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministratorRights.html).
  bool? get can_promote_members {
    try {
      return (rawData["can_promote_members"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministratorRights.html).
  bool? get can_manage_video_chats {
    try {
      return (rawData["can_manage_video_chats"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministratorRights.html).
  bool? get is_anonymous {
    try {
      return (rawData["is_anonymous"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumPaymentOption.html).
class PremiumPaymentOption {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumPaymentOption.html).
  PremiumPaymentOption(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumPaymentOption.html).
  factory PremiumPaymentOption.create({
    String special_type = "premiumPaymentOption",
    String? currency,
    int? amount,
    int? discount_percentage,
    int? month_count,
    String? store_product_id,
    InternalLinkType? payment_link,
  }) {
    try {
      return PremiumPaymentOption({
        "@type": special_type,
        "currency": currency,
        "amount": amount,
        "discount_percentage": discount_percentage,
        "month_count": month_count,
        "store_product_id": store_product_id,
        "payment_link": (payment_link != null) ? payment_link.toJson() : null,
      });
    } catch (e) {
      return PremiumPaymentOption({
        "@type": "error",
        "error": "${e}",
        "message": "error method PremiumPaymentOption.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumPaymentOption.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumPaymentOption.html).
  String? get currency {
    try {
      return (rawData["currency"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumPaymentOption.html).
  int? get amount {
    try {
      return (rawData["amount"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumPaymentOption.html).
  int? get discount_percentage {
    try {
      return (rawData["discount_percentage"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumPaymentOption.html).
  int? get month_count {
    try {
      return (rawData["month_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumPaymentOption.html).
  String? get store_product_id {
    try {
      return (rawData["store_product_id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumPaymentOption.html).
  InternalLinkType get payment_link {
    try {
      return InternalLinkType((rawData["payment_link"] as Map));
    } catch (e) {
      return InternalLinkType({"@type": "error", "error": "${e}", "message": "error at PremiumPaymentOption payment_link"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiStatus.html).
class EmojiStatus {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiStatus.html).
  EmojiStatus(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiStatus.html).
  factory EmojiStatus.create({
    String special_type = "emojiStatus",
    int? custom_emoji_id,
  }) {
    try {
      return EmojiStatus({
        "@type": special_type,
        "custom_emoji_id": custom_emoji_id,
      });
    } catch (e) {
      return EmojiStatus({
        "@type": "error",
        "error": "${e}",
        "message": "error method EmojiStatus.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiStatus.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiStatus.html).
  int? get custom_emoji_id {
    try {
      return (rawData["custom_emoji_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiStatuses.html).
class EmojiStatuses {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiStatuses.html).
  EmojiStatuses(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiStatuses.html).
  factory EmojiStatuses.create({
    String special_type = "emojiStatuses",
    List<EmojiStatus>? emoji_statuses,
  }) {
    try {
      return EmojiStatuses({
        "@type": special_type,
        "emoji_statuses": (emoji_statuses != null)
            ? emoji_statuses.map((e) {
                return EmojiStatus((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return EmojiStatuses({
        "@type": "error",
        "error": "${e}",
        "message": "error method EmojiStatuses.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiStatuses.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiStatuses.html).
  List<EmojiStatus> get emoji_statuses {
    try {
      return (rawData["emoji_statuses"] as List)
          .map((e) {
            return EmojiStatus((e as Map));
          })
          .toList()
          .cast<EmojiStatus>();
    } catch (e) {
      return [
        EmojiStatus({"@type": "error", "error": "${e}", "message": "error at EmojiStatuses emoji_statuses"})
      ].cast<EmojiStatus>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
class User {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  User(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  factory User.create({
    String special_type = "user",
    int? id,
    String? first_name,
    String? last_name,
    String? username,
    String? phone_number,
    UserStatus? status,
    ProfilePhoto? profile_photo,
    EmojiStatus? emoji_status,
    bool? is_contact,
    bool? is_mutual_contact,
    bool? is_verified,
    bool? is_premium,
    bool? is_support,
    String? restriction_reason,
    bool? is_scam,
    bool? is_fake,
    bool? have_access,
    UserType? type,
    String? language_code,
    bool? added_to_attachment_menu,
  }) {
    try {
      return User({
        "@type": special_type,
        "id": id,
        "first_name": first_name,
        "last_name": last_name,
        "username": username,
        "phone_number": phone_number,
        "status": (status != null) ? status.toJson() : null,
        "profile_photo": (profile_photo != null) ? profile_photo.toJson() : null,
        "emoji_status": (emoji_status != null) ? emoji_status.toJson() : null,
        "is_contact": is_contact,
        "is_mutual_contact": is_mutual_contact,
        "is_verified": is_verified,
        "is_premium": is_premium,
        "is_support": is_support,
        "restriction_reason": restriction_reason,
        "is_scam": is_scam,
        "is_fake": is_fake,
        "have_access": have_access,
        "type": (type != null) ? type.toJson() : null,
        "language_code": language_code,
        "added_to_attachment_menu": added_to_attachment_menu,
      });
    } catch (e) {
      return User({
        "@type": "error",
        "error": "${e}",
        "message": "error method User.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  String? get first_name {
    try {
      return (rawData["first_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  String? get last_name {
    try {
      return (rawData["last_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  String? get username {
    try {
      return (rawData["username"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  String? get phone_number {
    try {
      return (rawData["phone_number"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  UserStatus get status {
    try {
      return UserStatus((rawData["status"] as Map));
    } catch (e) {
      return UserStatus({"@type": "error", "error": "${e}", "message": "error at User status"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  ProfilePhoto get profile_photo {
    try {
      return ProfilePhoto((rawData["profile_photo"] as Map));
    } catch (e) {
      return ProfilePhoto({"@type": "error", "error": "${e}", "message": "error at User profile_photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  EmojiStatus get emoji_status {
    try {
      return EmojiStatus((rawData["emoji_status"] as Map));
    } catch (e) {
      return EmojiStatus({"@type": "error", "error": "${e}", "message": "error at User emoji_status"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  bool? get is_contact {
    try {
      return (rawData["is_contact"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  bool? get is_mutual_contact {
    try {
      return (rawData["is_mutual_contact"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  bool? get is_verified {
    try {
      return (rawData["is_verified"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  bool? get is_premium {
    try {
      return (rawData["is_premium"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  bool? get is_support {
    try {
      return (rawData["is_support"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  String? get restriction_reason {
    try {
      return (rawData["restriction_reason"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  bool? get is_scam {
    try {
      return (rawData["is_scam"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  bool? get is_fake {
    try {
      return (rawData["is_fake"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  bool? get have_access {
    try {
      return (rawData["have_access"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  UserType get type {
    try {
      return UserType((rawData["type"] as Map));
    } catch (e) {
      return UserType({"@type": "error", "error": "${e}", "message": "error at User type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  String? get language_code {
    try {
      return (rawData["language_code"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1User.html).
  bool? get added_to_attachment_menu {
    try {
      return (rawData["added_to_attachment_menu"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotInfo.html).
class BotInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotInfo.html).
  BotInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotInfo.html).
  factory BotInfo.create({
    String special_type = "botInfo",
    String? share_text,
    String? description,
    Photo? photo,
    Animation? animation,
    BotMenuButton? menu_button,
    List<BotCommand>? commands,
    ChatAdministratorRights? default_group_administrator_rights,
    ChatAdministratorRights? default_channel_administrator_rights,
  }) {
    try {
      return BotInfo({
        "@type": special_type,
        "share_text": share_text,
        "description": description,
        "photo": (photo != null) ? photo.toJson() : null,
        "animation": (animation != null) ? animation.toJson() : null,
        "menu_button": (menu_button != null) ? menu_button.toJson() : null,
        "commands": (commands != null)
            ? commands.map((e) {
                return BotCommand((e as Map)).toJson();
              }).toList()
            : null,
        "default_group_administrator_rights": (default_group_administrator_rights != null) ? default_group_administrator_rights.toJson() : null,
        "default_channel_administrator_rights": (default_channel_administrator_rights != null) ? default_channel_administrator_rights.toJson() : null,
      });
    } catch (e) {
      return BotInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method BotInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotInfo.html).
  String? get share_text {
    try {
      return (rawData["share_text"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotInfo.html).
  String? get description {
    try {
      return (rawData["description"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotInfo.html).
  Photo get photo {
    try {
      return Photo((rawData["photo"] as Map));
    } catch (e) {
      return Photo({"@type": "error", "error": "${e}", "message": "error at BotInfo photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotInfo.html).
  Animation get animation {
    try {
      return Animation((rawData["animation"] as Map));
    } catch (e) {
      return Animation({"@type": "error", "error": "${e}", "message": "error at BotInfo animation"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotInfo.html).
  BotMenuButton get menu_button {
    try {
      return BotMenuButton((rawData["menu_button"] as Map));
    } catch (e) {
      return BotMenuButton({"@type": "error", "error": "${e}", "message": "error at BotInfo menu_button"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotInfo.html).
  List<BotCommand> get commands {
    try {
      return (rawData["commands"] as List)
          .map((e) {
            return BotCommand((e as Map));
          })
          .toList()
          .cast<BotCommand>();
    } catch (e) {
      return [
        BotCommand({"@type": "error", "error": "${e}", "message": "error at BotInfo commands"})
      ].cast<BotCommand>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotInfo.html).
  ChatAdministratorRights get default_group_administrator_rights {
    try {
      return ChatAdministratorRights((rawData["default_group_administrator_rights"] as Map));
    } catch (e) {
      return ChatAdministratorRights({"@type": "error", "error": "${e}", "message": "error at BotInfo default_group_administrator_rights"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotInfo.html).
  ChatAdministratorRights get default_channel_administrator_rights {
    try {
      return ChatAdministratorRights((rawData["default_channel_administrator_rights"] as Map));
    } catch (e) {
      return ChatAdministratorRights({"@type": "error", "error": "${e}", "message": "error at BotInfo default_channel_administrator_rights"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserFullInfo.html).
class UserFullInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserFullInfo.html).
  UserFullInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserFullInfo.html).
  factory UserFullInfo.create({
    String special_type = "userFullInfo",
    ChatPhoto? photo,
    bool? is_blocked,
    bool? can_be_called,
    bool? supports_video_calls,
    bool? has_private_calls,
    bool? has_private_forwards,
    bool? has_restricted_voice_and_video_note_messages,
    bool? need_phone_number_privacy_exception,
    FormattedText? bio,
    List<PremiumPaymentOption>? premium_gift_options,
    int? group_in_common_count,
    BotInfo? bot_info,
  }) {
    try {
      return UserFullInfo({
        "@type": special_type,
        "photo": (photo != null) ? photo.toJson() : null,
        "is_blocked": is_blocked,
        "can_be_called": can_be_called,
        "supports_video_calls": supports_video_calls,
        "has_private_calls": has_private_calls,
        "has_private_forwards": has_private_forwards,
        "has_restricted_voice_and_video_note_messages": has_restricted_voice_and_video_note_messages,
        "need_phone_number_privacy_exception": need_phone_number_privacy_exception,
        "bio": (bio != null) ? bio.toJson() : null,
        "premium_gift_options": (premium_gift_options != null)
            ? premium_gift_options.map((e) {
                return PremiumPaymentOption((e as Map)).toJson();
              }).toList()
            : null,
        "group_in_common_count": group_in_common_count,
        "bot_info": (bot_info != null) ? bot_info.toJson() : null,
      });
    } catch (e) {
      return UserFullInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method UserFullInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserFullInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserFullInfo.html).
  ChatPhoto get photo {
    try {
      return ChatPhoto((rawData["photo"] as Map));
    } catch (e) {
      return ChatPhoto({"@type": "error", "error": "${e}", "message": "error at UserFullInfo photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserFullInfo.html).
  bool? get is_blocked {
    try {
      return (rawData["is_blocked"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserFullInfo.html).
  bool? get can_be_called {
    try {
      return (rawData["can_be_called"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserFullInfo.html).
  bool? get supports_video_calls {
    try {
      return (rawData["supports_video_calls"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserFullInfo.html).
  bool? get has_private_calls {
    try {
      return (rawData["has_private_calls"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserFullInfo.html).
  bool? get has_private_forwards {
    try {
      return (rawData["has_private_forwards"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserFullInfo.html).
  bool? get has_restricted_voice_and_video_note_messages {
    try {
      return (rawData["has_restricted_voice_and_video_note_messages"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserFullInfo.html).
  bool? get need_phone_number_privacy_exception {
    try {
      return (rawData["need_phone_number_privacy_exception"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserFullInfo.html).
  FormattedText get bio {
    try {
      return FormattedText((rawData["bio"] as Map));
    } catch (e) {
      return FormattedText({"@type": "error", "error": "${e}", "message": "error at UserFullInfo bio"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserFullInfo.html).
  List<PremiumPaymentOption> get premium_gift_options {
    try {
      return (rawData["premium_gift_options"] as List)
          .map((e) {
            return PremiumPaymentOption((e as Map));
          })
          .toList()
          .cast<PremiumPaymentOption>();
    } catch (e) {
      return [
        PremiumPaymentOption({"@type": "error", "error": "${e}", "message": "error at UserFullInfo premium_gift_options"})
      ].cast<PremiumPaymentOption>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserFullInfo.html).
  int? get group_in_common_count {
    try {
      return (rawData["group_in_common_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserFullInfo.html).
  BotInfo get bot_info {
    try {
      return BotInfo((rawData["bot_info"] as Map));
    } catch (e) {
      return BotInfo({"@type": "error", "error": "${e}", "message": "error at UserFullInfo bot_info"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Users.html).
class Users {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Users.html).
  Users(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Users.html).
  factory Users.create({
    String special_type = "users",
    int? total_count,
    List<int>? user_ids,
  }) {
    try {
      return Users({
        "@type": special_type,
        "total_count": total_count,
        "user_ids": user_ids,
      });
    } catch (e) {
      return Users({
        "@type": "error",
        "error": "${e}",
        "message": "error method Users.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Users.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Users.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Users.html).
  List<int> get user_ids {
    try {
      return (rawData["user_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministrator.html).
class ChatAdministrator {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministrator.html).
  ChatAdministrator(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministrator.html).
  factory ChatAdministrator.create({
    String special_type = "chatAdministrator",
    int? user_id,
    String? custom_title,
    bool? is_owner,
  }) {
    try {
      return ChatAdministrator({
        "@type": special_type,
        "user_id": user_id,
        "custom_title": custom_title,
        "is_owner": is_owner,
      });
    } catch (e) {
      return ChatAdministrator({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatAdministrator.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministrator.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministrator.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministrator.html).
  String? get custom_title {
    try {
      return (rawData["custom_title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministrator.html).
  bool? get is_owner {
    try {
      return (rawData["is_owner"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministrators.html).
class ChatAdministrators {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministrators.html).
  ChatAdministrators(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministrators.html).
  factory ChatAdministrators.create({
    String special_type = "chatAdministrators",
    List<ChatAdministrator>? administrators,
  }) {
    try {
      return ChatAdministrators({
        "@type": special_type,
        "administrators": (administrators != null)
            ? administrators.map((e) {
                return ChatAdministrator((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return ChatAdministrators({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatAdministrators.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministrators.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAdministrators.html).
  List<ChatAdministrator> get administrators {
    try {
      return (rawData["administrators"] as List)
          .map((e) {
            return ChatAdministrator((e as Map));
          })
          .toList()
          .cast<ChatAdministrator>();
    } catch (e) {
      return [
        ChatAdministrator({"@type": "error", "error": "${e}", "message": "error at ChatAdministrators administrators"})
      ].cast<ChatAdministrator>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMemberStatus.html).
class ChatMemberStatus {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMemberStatus.html).
  ChatMemberStatus(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMemberStatus.html).
  factory ChatMemberStatus.create({
    String special_type = "chatMemberStatusCreator",
    String? custom_title,
    bool? is_anonymous,
    bool? is_member,
    bool? can_be_edited,
    ChatAdministratorRights? rights,
    int? restricted_until_date,
    ChatPermissions? permissions,
    int? banned_until_date,
  }) {
    try {
      return ChatMemberStatus({
        "@type": special_type,
        "custom_title": custom_title,
        "is_anonymous": is_anonymous,
        "is_member": is_member,
        "can_be_edited": can_be_edited,
        "rights": (rights != null) ? rights.toJson() : null,
        "restricted_until_date": restricted_until_date,
        "permissions": (permissions != null) ? permissions.toJson() : null,
        "banned_until_date": banned_until_date,
      });
    } catch (e) {
      return ChatMemberStatus({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatMemberStatus.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMemberStatus.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMemberStatus.html).
  String? get custom_title {
    try {
      return (rawData["custom_title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMemberStatus.html).
  bool? get is_anonymous {
    try {
      return (rawData["is_anonymous"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMemberStatus.html).
  bool? get is_member {
    try {
      return (rawData["is_member"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMemberStatus.html).
  bool? get can_be_edited {
    try {
      return (rawData["can_be_edited"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMemberStatus.html).
  ChatAdministratorRights get rights {
    try {
      return ChatAdministratorRights((rawData["rights"] as Map));
    } catch (e) {
      return ChatAdministratorRights({"@type": "error", "error": "${e}", "message": "error at ChatMemberStatus rights"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMemberStatus.html).
  int? get restricted_until_date {
    try {
      return (rawData["restricted_until_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMemberStatus.html).
  ChatPermissions get permissions {
    try {
      return ChatPermissions((rawData["permissions"] as Map));
    } catch (e) {
      return ChatPermissions({"@type": "error", "error": "${e}", "message": "error at ChatMemberStatus permissions"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMemberStatus.html).
  int? get banned_until_date {
    try {
      return (rawData["banned_until_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMember.html).
class ChatMember {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMember.html).
  ChatMember(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMember.html).
  factory ChatMember.create({
    String special_type = "chatMember",
    MessageSender? member_id,
    int? inviter_user_id,
    int? joined_chat_date,
    ChatMemberStatus? status,
  }) {
    try {
      return ChatMember({
        "@type": special_type,
        "member_id": (member_id != null) ? member_id.toJson() : null,
        "inviter_user_id": inviter_user_id,
        "joined_chat_date": joined_chat_date,
        "status": (status != null) ? status.toJson() : null,
      });
    } catch (e) {
      return ChatMember({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatMember.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMember.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMember.html).
  MessageSender get member_id {
    try {
      return MessageSender((rawData["member_id"] as Map));
    } catch (e) {
      return MessageSender({"@type": "error", "error": "${e}", "message": "error at ChatMember member_id"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMember.html).
  int? get inviter_user_id {
    try {
      return (rawData["inviter_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMember.html).
  int? get joined_chat_date {
    try {
      return (rawData["joined_chat_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMember.html).
  ChatMemberStatus get status {
    try {
      return ChatMemberStatus((rawData["status"] as Map));
    } catch (e) {
      return ChatMemberStatus({"@type": "error", "error": "${e}", "message": "error at ChatMember status"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMembers.html).
class ChatMembers {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMembers.html).
  ChatMembers(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMembers.html).
  factory ChatMembers.create({
    String special_type = "chatMembers",
    int? total_count,
    List<ChatMember>? members,
  }) {
    try {
      return ChatMembers({
        "@type": special_type,
        "total_count": total_count,
        "members": (members != null)
            ? members.map((e) {
                return ChatMember((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return ChatMembers({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatMembers.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMembers.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMembers.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMembers.html).
  List<ChatMember> get members {
    try {
      return (rawData["members"] as List)
          .map((e) {
            return ChatMember((e as Map));
          })
          .toList()
          .cast<ChatMember>();
    } catch (e) {
      return [
        ChatMember({"@type": "error", "error": "${e}", "message": "error at ChatMembers members"})
      ].cast<ChatMember>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMembersFilter.html).
class ChatMembersFilter {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMembersFilter.html).
  ChatMembersFilter(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMembersFilter.html).
  factory ChatMembersFilter.create({
    String special_type = "chatMembersFilterContacts",
    int? message_thread_id,
  }) {
    try {
      return ChatMembersFilter({
        "@type": special_type,
        "message_thread_id": message_thread_id,
      });
    } catch (e) {
      return ChatMembersFilter({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatMembersFilter.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMembersFilter.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMembersFilter.html).
  int? get message_thread_id {
    try {
      return (rawData["message_thread_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupMembersFilter.html).
class SupergroupMembersFilter {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupMembersFilter.html).
  SupergroupMembersFilter(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupMembersFilter.html).
  factory SupergroupMembersFilter.create({
    String special_type = "supergroupMembersFilterRecent",
    String? query,
    int? message_thread_id,
  }) {
    try {
      return SupergroupMembersFilter({
        "@type": special_type,
        "query": query,
        "message_thread_id": message_thread_id,
      });
    } catch (e) {
      return SupergroupMembersFilter({
        "@type": "error",
        "error": "${e}",
        "message": "error method SupergroupMembersFilter.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupMembersFilter.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupMembersFilter.html).
  String? get query {
    try {
      return (rawData["query"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupMembersFilter.html).
  int? get message_thread_id {
    try {
      return (rawData["message_thread_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLink.html).
class ChatInviteLink {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLink.html).
  ChatInviteLink(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLink.html).
  factory ChatInviteLink.create({
    String special_type = "chatInviteLink",
    String? invite_link,
    String? name,
    int? creator_user_id,
    int? date,
    int? edit_date,
    int? expiration_date,
    int? member_limit,
    int? member_count,
    int? pending_join_request_count,
    bool? creates_join_request,
    bool? is_primary,
    bool? is_revoked,
  }) {
    try {
      return ChatInviteLink({
        "@type": special_type,
        "invite_link": invite_link,
        "name": name,
        "creator_user_id": creator_user_id,
        "date": date,
        "edit_date": edit_date,
        "expiration_date": expiration_date,
        "member_limit": member_limit,
        "member_count": member_count,
        "pending_join_request_count": pending_join_request_count,
        "creates_join_request": creates_join_request,
        "is_primary": is_primary,
        "is_revoked": is_revoked,
      });
    } catch (e) {
      return ChatInviteLink({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatInviteLink.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLink.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLink.html).
  String? get invite_link {
    try {
      return (rawData["invite_link"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLink.html).
  String? get name {
    try {
      return (rawData["name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLink.html).
  int? get creator_user_id {
    try {
      return (rawData["creator_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLink.html).
  int? get date {
    try {
      return (rawData["date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLink.html).
  int? get edit_date {
    try {
      return (rawData["edit_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLink.html).
  int? get expiration_date {
    try {
      return (rawData["expiration_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLink.html).
  int? get member_limit {
    try {
      return (rawData["member_limit"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLink.html).
  int? get member_count {
    try {
      return (rawData["member_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLink.html).
  int? get pending_join_request_count {
    try {
      return (rawData["pending_join_request_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLink.html).
  bool? get creates_join_request {
    try {
      return (rawData["creates_join_request"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLink.html).
  bool? get is_primary {
    try {
      return (rawData["is_primary"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLink.html).
  bool? get is_revoked {
    try {
      return (rawData["is_revoked"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinks.html).
class ChatInviteLinks {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinks.html).
  ChatInviteLinks(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinks.html).
  factory ChatInviteLinks.create({
    String special_type = "chatInviteLinks",
    int? total_count,
    List<ChatInviteLink>? invite_links,
  }) {
    try {
      return ChatInviteLinks({
        "@type": special_type,
        "total_count": total_count,
        "invite_links": (invite_links != null)
            ? invite_links.map((e) {
                return ChatInviteLink((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return ChatInviteLinks({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatInviteLinks.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinks.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinks.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinks.html).
  List<ChatInviteLink> get invite_links {
    try {
      return (rawData["invite_links"] as List)
          .map((e) {
            return ChatInviteLink((e as Map));
          })
          .toList()
          .cast<ChatInviteLink>();
    } catch (e) {
      return [
        ChatInviteLink({"@type": "error", "error": "${e}", "message": "error at ChatInviteLinks invite_links"})
      ].cast<ChatInviteLink>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkCount.html).
class ChatInviteLinkCount {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkCount.html).
  ChatInviteLinkCount(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkCount.html).
  factory ChatInviteLinkCount.create({
    String special_type = "chatInviteLinkCount",
    int? user_id,
    int? invite_link_count,
    int? revoked_invite_link_count,
  }) {
    try {
      return ChatInviteLinkCount({
        "@type": special_type,
        "user_id": user_id,
        "invite_link_count": invite_link_count,
        "revoked_invite_link_count": revoked_invite_link_count,
      });
    } catch (e) {
      return ChatInviteLinkCount({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatInviteLinkCount.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkCount.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkCount.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkCount.html).
  int? get invite_link_count {
    try {
      return (rawData["invite_link_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkCount.html).
  int? get revoked_invite_link_count {
    try {
      return (rawData["revoked_invite_link_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkCounts.html).
class ChatInviteLinkCounts {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkCounts.html).
  ChatInviteLinkCounts(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkCounts.html).
  factory ChatInviteLinkCounts.create({
    String special_type = "chatInviteLinkCounts",
    List<ChatInviteLinkCount>? invite_link_counts,
  }) {
    try {
      return ChatInviteLinkCounts({
        "@type": special_type,
        "invite_link_counts": (invite_link_counts != null)
            ? invite_link_counts.map((e) {
                return ChatInviteLinkCount((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return ChatInviteLinkCounts({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatInviteLinkCounts.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkCounts.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkCounts.html).
  List<ChatInviteLinkCount> get invite_link_counts {
    try {
      return (rawData["invite_link_counts"] as List)
          .map((e) {
            return ChatInviteLinkCount((e as Map));
          })
          .toList()
          .cast<ChatInviteLinkCount>();
    } catch (e) {
      return [
        ChatInviteLinkCount({"@type": "error", "error": "${e}", "message": "error at ChatInviteLinkCounts invite_link_counts"})
      ].cast<ChatInviteLinkCount>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkMember.html).
class ChatInviteLinkMember {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkMember.html).
  ChatInviteLinkMember(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkMember.html).
  factory ChatInviteLinkMember.create({
    String special_type = "chatInviteLinkMember",
    int? user_id,
    int? joined_chat_date,
    int? approver_user_id,
  }) {
    try {
      return ChatInviteLinkMember({
        "@type": special_type,
        "user_id": user_id,
        "joined_chat_date": joined_chat_date,
        "approver_user_id": approver_user_id,
      });
    } catch (e) {
      return ChatInviteLinkMember({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatInviteLinkMember.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkMember.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkMember.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkMember.html).
  int? get joined_chat_date {
    try {
      return (rawData["joined_chat_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkMember.html).
  int? get approver_user_id {
    try {
      return (rawData["approver_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkMembers.html).
class ChatInviteLinkMembers {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkMembers.html).
  ChatInviteLinkMembers(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkMembers.html).
  factory ChatInviteLinkMembers.create({
    String special_type = "chatInviteLinkMembers",
    int? total_count,
    List<ChatInviteLinkMember>? members,
  }) {
    try {
      return ChatInviteLinkMembers({
        "@type": special_type,
        "total_count": total_count,
        "members": (members != null)
            ? members.map((e) {
                return ChatInviteLinkMember((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return ChatInviteLinkMembers({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatInviteLinkMembers.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkMembers.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkMembers.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkMembers.html).
  List<ChatInviteLinkMember> get members {
    try {
      return (rawData["members"] as List)
          .map((e) {
            return ChatInviteLinkMember((e as Map));
          })
          .toList()
          .cast<ChatInviteLinkMember>();
    } catch (e) {
      return [
        ChatInviteLinkMember({"@type": "error", "error": "${e}", "message": "error at ChatInviteLinkMembers members"})
      ].cast<ChatInviteLinkMember>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkInfo.html).
class ChatInviteLinkInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkInfo.html).
  ChatInviteLinkInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkInfo.html).
  factory ChatInviteLinkInfo.create({
    String special_type = "chatInviteLinkInfo",
    int? chat_id,
    int? accessible_for,
    ChatType? type,
    String? title,
    ChatPhotoInfo? photo,
    String? description,
    int? member_count,
    List<int>? member_user_ids,
    bool? creates_join_request,
    bool? is_public,
  }) {
    try {
      return ChatInviteLinkInfo({
        "@type": special_type,
        "chat_id": chat_id,
        "accessible_for": accessible_for,
        "type": (type != null) ? type.toJson() : null,
        "title": title,
        "photo": (photo != null) ? photo.toJson() : null,
        "description": description,
        "member_count": member_count,
        "member_user_ids": member_user_ids,
        "creates_join_request": creates_join_request,
        "is_public": is_public,
      });
    } catch (e) {
      return ChatInviteLinkInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatInviteLinkInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkInfo.html).
  int? get chat_id {
    try {
      return (rawData["chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkInfo.html).
  int? get accessible_for {
    try {
      return (rawData["accessible_for"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkInfo.html).
  ChatType get type {
    try {
      return ChatType((rawData["type"] as Map));
    } catch (e) {
      return ChatType({"@type": "error", "error": "${e}", "message": "error at ChatInviteLinkInfo type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkInfo.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkInfo.html).
  ChatPhotoInfo get photo {
    try {
      return ChatPhotoInfo((rawData["photo"] as Map));
    } catch (e) {
      return ChatPhotoInfo({"@type": "error", "error": "${e}", "message": "error at ChatInviteLinkInfo photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkInfo.html).
  String? get description {
    try {
      return (rawData["description"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkInfo.html).
  int? get member_count {
    try {
      return (rawData["member_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkInfo.html).
  List<int> get member_user_ids {
    try {
      return (rawData["member_user_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkInfo.html).
  bool? get creates_join_request {
    try {
      return (rawData["creates_join_request"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatInviteLinkInfo.html).
  bool? get is_public {
    try {
      return (rawData["is_public"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequest.html).
class ChatJoinRequest {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequest.html).
  ChatJoinRequest(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequest.html).
  factory ChatJoinRequest.create({
    String special_type = "chatJoinRequest",
    int? user_id,
    int? date,
    String? bio,
  }) {
    try {
      return ChatJoinRequest({
        "@type": special_type,
        "user_id": user_id,
        "date": date,
        "bio": bio,
      });
    } catch (e) {
      return ChatJoinRequest({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatJoinRequest.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequest.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequest.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequest.html).
  int? get date {
    try {
      return (rawData["date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequest.html).
  String? get bio {
    try {
      return (rawData["bio"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequests.html).
class ChatJoinRequests {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequests.html).
  ChatJoinRequests(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequests.html).
  factory ChatJoinRequests.create({
    String special_type = "chatJoinRequests",
    int? total_count,
    List<ChatJoinRequest>? requests,
  }) {
    try {
      return ChatJoinRequests({
        "@type": special_type,
        "total_count": total_count,
        "requests": (requests != null)
            ? requests.map((e) {
                return ChatJoinRequest((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return ChatJoinRequests({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatJoinRequests.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequests.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequests.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequests.html).
  List<ChatJoinRequest> get requests {
    try {
      return (rawData["requests"] as List)
          .map((e) {
            return ChatJoinRequest((e as Map));
          })
          .toList()
          .cast<ChatJoinRequest>();
    } catch (e) {
      return [
        ChatJoinRequest({"@type": "error", "error": "${e}", "message": "error at ChatJoinRequests requests"})
      ].cast<ChatJoinRequest>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequestsInfo.html).
class ChatJoinRequestsInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequestsInfo.html).
  ChatJoinRequestsInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequestsInfo.html).
  factory ChatJoinRequestsInfo.create({
    String special_type = "chatJoinRequestsInfo",
    int? total_count,
    List<int>? user_ids,
  }) {
    try {
      return ChatJoinRequestsInfo({
        "@type": special_type,
        "total_count": total_count,
        "user_ids": user_ids,
      });
    } catch (e) {
      return ChatJoinRequestsInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatJoinRequestsInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequestsInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequestsInfo.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatJoinRequestsInfo.html).
  List<int> get user_ids {
    try {
      return (rawData["user_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroup.html).
class BasicGroup {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroup.html).
  BasicGroup(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroup.html).
  factory BasicGroup.create({
    String special_type = "basicGroup",
    int? id,
    int? member_count,
    ChatMemberStatus? status,
    bool? is_active,
    int? upgraded_to_supergroup_id,
  }) {
    try {
      return BasicGroup({
        "@type": special_type,
        "id": id,
        "member_count": member_count,
        "status": (status != null) ? status.toJson() : null,
        "is_active": is_active,
        "upgraded_to_supergroup_id": upgraded_to_supergroup_id,
      });
    } catch (e) {
      return BasicGroup({
        "@type": "error",
        "error": "${e}",
        "message": "error method BasicGroup.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroup.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroup.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroup.html).
  int? get member_count {
    try {
      return (rawData["member_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroup.html).
  ChatMemberStatus get status {
    try {
      return ChatMemberStatus((rawData["status"] as Map));
    } catch (e) {
      return ChatMemberStatus({"@type": "error", "error": "${e}", "message": "error at BasicGroup status"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroup.html).
  bool? get is_active {
    try {
      return (rawData["is_active"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroup.html).
  int? get upgraded_to_supergroup_id {
    try {
      return (rawData["upgraded_to_supergroup_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroupFullInfo.html).
class BasicGroupFullInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroupFullInfo.html).
  BasicGroupFullInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroupFullInfo.html).
  factory BasicGroupFullInfo.create({
    String special_type = "basicGroupFullInfo",
    ChatPhoto? photo,
    String? description,
    int? creator_user_id,
    List<ChatMember>? members,
    ChatInviteLink? invite_link,
    List<BotCommands>? bot_commands,
  }) {
    try {
      return BasicGroupFullInfo({
        "@type": special_type,
        "photo": (photo != null) ? photo.toJson() : null,
        "description": description,
        "creator_user_id": creator_user_id,
        "members": (members != null)
            ? members.map((e) {
                return ChatMember((e as Map)).toJson();
              }).toList()
            : null,
        "invite_link": (invite_link != null) ? invite_link.toJson() : null,
        "bot_commands": (bot_commands != null)
            ? bot_commands.map((e) {
                return BotCommands((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return BasicGroupFullInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method BasicGroupFullInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroupFullInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroupFullInfo.html).
  ChatPhoto get photo {
    try {
      return ChatPhoto((rawData["photo"] as Map));
    } catch (e) {
      return ChatPhoto({"@type": "error", "error": "${e}", "message": "error at BasicGroupFullInfo photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroupFullInfo.html).
  String? get description {
    try {
      return (rawData["description"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroupFullInfo.html).
  int? get creator_user_id {
    try {
      return (rawData["creator_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroupFullInfo.html).
  List<ChatMember> get members {
    try {
      return (rawData["members"] as List)
          .map((e) {
            return ChatMember((e as Map));
          })
          .toList()
          .cast<ChatMember>();
    } catch (e) {
      return [
        ChatMember({"@type": "error", "error": "${e}", "message": "error at BasicGroupFullInfo members"})
      ].cast<ChatMember>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroupFullInfo.html).
  ChatInviteLink get invite_link {
    try {
      return ChatInviteLink((rawData["invite_link"] as Map));
    } catch (e) {
      return ChatInviteLink({"@type": "error", "error": "${e}", "message": "error at BasicGroupFullInfo invite_link"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BasicGroupFullInfo.html).
  List<BotCommands> get bot_commands {
    try {
      return (rawData["bot_commands"] as List)
          .map((e) {
            return BotCommands((e as Map));
          })
          .toList()
          .cast<BotCommands>();
    } catch (e) {
      return [
        BotCommands({"@type": "error", "error": "${e}", "message": "error at BasicGroupFullInfo bot_commands"})
      ].cast<BotCommands>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
class Supergroup {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  Supergroup(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  factory Supergroup.create({
    String special_type = "supergroup",
    int? id,
    String? username,
    int? date,
    ChatMemberStatus? status,
    int? member_count,
    bool? has_linked_chat,
    bool? has_location,
    bool? sign_messages,
    bool? join_to_send_messages,
    bool? join_by_request,
    bool? is_slow_mode_enabled,
    bool? is_channel,
    bool? is_broadcast_group,
    bool? is_verified,
    String? restriction_reason,
    bool? is_scam,
    bool? is_fake,
  }) {
    try {
      return Supergroup({
        "@type": special_type,
        "id": id,
        "username": username,
        "date": date,
        "status": (status != null) ? status.toJson() : null,
        "member_count": member_count,
        "has_linked_chat": has_linked_chat,
        "has_location": has_location,
        "sign_messages": sign_messages,
        "join_to_send_messages": join_to_send_messages,
        "join_by_request": join_by_request,
        "is_slow_mode_enabled": is_slow_mode_enabled,
        "is_channel": is_channel,
        "is_broadcast_group": is_broadcast_group,
        "is_verified": is_verified,
        "restriction_reason": restriction_reason,
        "is_scam": is_scam,
        "is_fake": is_fake,
      });
    } catch (e) {
      return Supergroup({
        "@type": "error",
        "error": "${e}",
        "message": "error method Supergroup.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  String? get username {
    try {
      return (rawData["username"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  int? get date {
    try {
      return (rawData["date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  ChatMemberStatus get status {
    try {
      return ChatMemberStatus((rawData["status"] as Map));
    } catch (e) {
      return ChatMemberStatus({"@type": "error", "error": "${e}", "message": "error at Supergroup status"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  int? get member_count {
    try {
      return (rawData["member_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  bool? get has_linked_chat {
    try {
      return (rawData["has_linked_chat"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  bool? get has_location {
    try {
      return (rawData["has_location"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  bool? get sign_messages {
    try {
      return (rawData["sign_messages"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  bool? get join_to_send_messages {
    try {
      return (rawData["join_to_send_messages"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  bool? get join_by_request {
    try {
      return (rawData["join_by_request"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  bool? get is_slow_mode_enabled {
    try {
      return (rawData["is_slow_mode_enabled"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  bool? get is_channel {
    try {
      return (rawData["is_channel"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  bool? get is_broadcast_group {
    try {
      return (rawData["is_broadcast_group"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  bool? get is_verified {
    try {
      return (rawData["is_verified"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  String? get restriction_reason {
    try {
      return (rawData["restriction_reason"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  bool? get is_scam {
    try {
      return (rawData["is_scam"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Supergroup.html).
  bool? get is_fake {
    try {
      return (rawData["is_fake"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
class SupergroupFullInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  SupergroupFullInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  factory SupergroupFullInfo.create({
    String special_type = "supergroupFullInfo",
    ChatPhoto? photo,
    String? description,
    int? member_count,
    int? administrator_count,
    int? restricted_count,
    int? banned_count,
    int? linked_chat_id,
    int? slow_mode_delay,
    double? slow_mode_delay_expires_in,
    bool? can_get_members,
    bool? can_set_username,
    bool? can_set_sticker_set,
    bool? can_set_location,
    bool? can_get_statistics,
    bool? is_all_history_available,
    int? sticker_set_id,
    ChatLocation? location,
    ChatInviteLink? invite_link,
    List<BotCommands>? bot_commands,
    int? upgraded_from_basic_group_id,
    int? upgraded_from_max_message_id,
  }) {
    try {
      return SupergroupFullInfo({
        "@type": special_type,
        "photo": (photo != null) ? photo.toJson() : null,
        "description": description,
        "member_count": member_count,
        "administrator_count": administrator_count,
        "restricted_count": restricted_count,
        "banned_count": banned_count,
        "linked_chat_id": linked_chat_id,
        "slow_mode_delay": slow_mode_delay,
        "slow_mode_delay_expires_in": slow_mode_delay_expires_in,
        "can_get_members": can_get_members,
        "can_set_username": can_set_username,
        "can_set_sticker_set": can_set_sticker_set,
        "can_set_location": can_set_location,
        "can_get_statistics": can_get_statistics,
        "is_all_history_available": is_all_history_available,
        "sticker_set_id": sticker_set_id,
        "location": (location != null) ? location.toJson() : null,
        "invite_link": (invite_link != null) ? invite_link.toJson() : null,
        "bot_commands": (bot_commands != null)
            ? bot_commands.map((e) {
                return BotCommands((e as Map)).toJson();
              }).toList()
            : null,
        "upgraded_from_basic_group_id": upgraded_from_basic_group_id,
        "upgraded_from_max_message_id": upgraded_from_max_message_id,
      });
    } catch (e) {
      return SupergroupFullInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method SupergroupFullInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  ChatPhoto get photo {
    try {
      return ChatPhoto((rawData["photo"] as Map));
    } catch (e) {
      return ChatPhoto({"@type": "error", "error": "${e}", "message": "error at SupergroupFullInfo photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  String? get description {
    try {
      return (rawData["description"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  int? get member_count {
    try {
      return (rawData["member_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  int? get administrator_count {
    try {
      return (rawData["administrator_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  int? get restricted_count {
    try {
      return (rawData["restricted_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  int? get banned_count {
    try {
      return (rawData["banned_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  int? get linked_chat_id {
    try {
      return (rawData["linked_chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  int? get slow_mode_delay {
    try {
      return (rawData["slow_mode_delay"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  double? get slow_mode_delay_expires_in {
    try {
      return (rawData["slow_mode_delay_expires_in"] as double);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  bool? get can_get_members {
    try {
      return (rawData["can_get_members"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  bool? get can_set_username {
    try {
      return (rawData["can_set_username"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  bool? get can_set_sticker_set {
    try {
      return (rawData["can_set_sticker_set"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  bool? get can_set_location {
    try {
      return (rawData["can_set_location"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  bool? get can_get_statistics {
    try {
      return (rawData["can_get_statistics"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  bool? get is_all_history_available {
    try {
      return (rawData["is_all_history_available"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  int? get sticker_set_id {
    try {
      return (rawData["sticker_set_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  ChatLocation get location {
    try {
      return ChatLocation((rawData["location"] as Map));
    } catch (e) {
      return ChatLocation({"@type": "error", "error": "${e}", "message": "error at SupergroupFullInfo location"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  ChatInviteLink get invite_link {
    try {
      return ChatInviteLink((rawData["invite_link"] as Map));
    } catch (e) {
      return ChatInviteLink({"@type": "error", "error": "${e}", "message": "error at SupergroupFullInfo invite_link"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  List<BotCommands> get bot_commands {
    try {
      return (rawData["bot_commands"] as List)
          .map((e) {
            return BotCommands((e as Map));
          })
          .toList()
          .cast<BotCommands>();
    } catch (e) {
      return [
        BotCommands({"@type": "error", "error": "${e}", "message": "error at SupergroupFullInfo bot_commands"})
      ].cast<BotCommands>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  int? get upgraded_from_basic_group_id {
    try {
      return (rawData["upgraded_from_basic_group_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SupergroupFullInfo.html).
  int? get upgraded_from_max_message_id {
    try {
      return (rawData["upgraded_from_max_message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SecretChatState.html).
class SecretChatState {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SecretChatState.html).
  SecretChatState(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SecretChatState.html).
  factory SecretChatState.create({
    String special_type = "secretChatStatePending",
  }) {
    try {
      return SecretChatState({
        "@type": special_type,
      });
    } catch (e) {
      return SecretChatState({
        "@type": "error",
        "error": "${e}",
        "message": "error method SecretChatState.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SecretChatState.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SecretChat.html).
class SecretChat {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SecretChat.html).
  SecretChat(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SecretChat.html).
  factory SecretChat.create({
    String special_type = "secretChat",
    int? id,
    int? user_id,
    SecretChatState? state,
    bool? is_outbound,
    String? key_hash,
    int? layer,
  }) {
    try {
      return SecretChat({
        "@type": special_type,
        "id": id,
        "user_id": user_id,
        "state": (state != null) ? state.toJson() : null,
        "is_outbound": is_outbound,
        "key_hash": key_hash,
        "layer": layer,
      });
    } catch (e) {
      return SecretChat({
        "@type": "error",
        "error": "${e}",
        "message": "error method SecretChat.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SecretChat.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SecretChat.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SecretChat.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SecretChat.html).
  SecretChatState get state {
    try {
      return SecretChatState((rawData["state"] as Map));
    } catch (e) {
      return SecretChatState({"@type": "error", "error": "${e}", "message": "error at SecretChat state"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SecretChat.html).
  bool? get is_outbound {
    try {
      return (rawData["is_outbound"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SecretChat.html).
  String? get key_hash {
    try {
      return (rawData["key_hash"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SecretChat.html).
  int? get layer {
    try {
      return (rawData["layer"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSender.html).
class MessageSender {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSender.html).
  MessageSender(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSender.html).
  factory MessageSender.create({
    String special_type = "messageSenderUser",
    int? user_id,
    int? chat_id,
  }) {
    try {
      return MessageSender({
        "@type": special_type,
        "user_id": user_id,
        "chat_id": chat_id,
      });
    } catch (e) {
      return MessageSender({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageSender.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSender.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSender.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSender.html).
  int? get chat_id {
    try {
      return (rawData["chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSenders.html).
class MessageSenders {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSenders.html).
  MessageSenders(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSenders.html).
  factory MessageSenders.create({
    String special_type = "messageSenders",
    int? total_count,
    List<MessageSender>? senders,
  }) {
    try {
      return MessageSenders({
        "@type": special_type,
        "total_count": total_count,
        "senders": (senders != null)
            ? senders.map((e) {
                return MessageSender((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return MessageSenders({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageSenders.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSenders.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSenders.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSenders.html).
  List<MessageSender> get senders {
    try {
      return (rawData["senders"] as List)
          .map((e) {
            return MessageSender((e as Map));
          })
          .toList()
          .cast<MessageSender>();
    } catch (e) {
      return [
        MessageSender({"@type": "error", "error": "${e}", "message": "error at MessageSenders senders"})
      ].cast<MessageSender>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMessageSender.html).
class ChatMessageSender {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMessageSender.html).
  ChatMessageSender(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMessageSender.html).
  factory ChatMessageSender.create({
    String special_type = "chatMessageSender",
    MessageSender? sender,
    bool? needs_premium,
  }) {
    try {
      return ChatMessageSender({
        "@type": special_type,
        "sender": (sender != null) ? sender.toJson() : null,
        "needs_premium": needs_premium,
      });
    } catch (e) {
      return ChatMessageSender({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatMessageSender.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMessageSender.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMessageSender.html).
  MessageSender get sender {
    try {
      return MessageSender((rawData["sender"] as Map));
    } catch (e) {
      return MessageSender({"@type": "error", "error": "${e}", "message": "error at ChatMessageSender sender"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMessageSender.html).
  bool? get needs_premium {
    try {
      return (rawData["needs_premium"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMessageSenders.html).
class ChatMessageSenders {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMessageSenders.html).
  ChatMessageSenders(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMessageSenders.html).
  factory ChatMessageSenders.create({
    String special_type = "chatMessageSenders",
    List<ChatMessageSender>? senders,
  }) {
    try {
      return ChatMessageSenders({
        "@type": special_type,
        "senders": (senders != null)
            ? senders.map((e) {
                return ChatMessageSender((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return ChatMessageSenders({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatMessageSenders.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMessageSenders.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatMessageSenders.html).
  List<ChatMessageSender> get senders {
    try {
      return (rawData["senders"] as List)
          .map((e) {
            return ChatMessageSender((e as Map));
          })
          .toList()
          .cast<ChatMessageSender>();
    } catch (e) {
      return [
        ChatMessageSender({"@type": "error", "error": "${e}", "message": "error at ChatMessageSenders senders"})
      ].cast<ChatMessageSender>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardOrigin.html).
class MessageForwardOrigin {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardOrigin.html).
  MessageForwardOrigin(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardOrigin.html).
  factory MessageForwardOrigin.create({
    String special_type = "messageForwardOriginUser",
    int? sender_user_id,
    int? sender_chat_id,
    String? author_signature,
    String? sender_name,
    int? chat_id,
    int? message_id,
  }) {
    try {
      return MessageForwardOrigin({
        "@type": special_type,
        "sender_user_id": sender_user_id,
        "sender_chat_id": sender_chat_id,
        "author_signature": author_signature,
        "sender_name": sender_name,
        "chat_id": chat_id,
        "message_id": message_id,
      });
    } catch (e) {
      return MessageForwardOrigin({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageForwardOrigin.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardOrigin.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardOrigin.html).
  int? get sender_user_id {
    try {
      return (rawData["sender_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardOrigin.html).
  int? get sender_chat_id {
    try {
      return (rawData["sender_chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardOrigin.html).
  String? get author_signature {
    try {
      return (rawData["author_signature"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardOrigin.html).
  String? get sender_name {
    try {
      return (rawData["sender_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardOrigin.html).
  int? get chat_id {
    try {
      return (rawData["chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardOrigin.html).
  int? get message_id {
    try {
      return (rawData["message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ReactionType.html).
class ReactionType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ReactionType.html).
  ReactionType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ReactionType.html).
  factory ReactionType.create({
    String special_type = "reactionTypeEmoji",
    String? emoji,
    int? custom_emoji_id,
  }) {
    try {
      return ReactionType({
        "@type": special_type,
        "emoji": emoji,
        "custom_emoji_id": custom_emoji_id,
      });
    } catch (e) {
      return ReactionType({
        "@type": "error",
        "error": "${e}",
        "message": "error method ReactionType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ReactionType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ReactionType.html).
  String? get emoji {
    try {
      return (rawData["emoji"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ReactionType.html).
  int? get custom_emoji_id {
    try {
      return (rawData["custom_emoji_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardInfo.html).
class MessageForwardInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardInfo.html).
  MessageForwardInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardInfo.html).
  factory MessageForwardInfo.create({
    String special_type = "messageForwardInfo",
    MessageForwardOrigin? origin,
    int? date,
    String? public_service_announcement_type,
    int? from_chat_id,
    int? from_message_id,
  }) {
    try {
      return MessageForwardInfo({
        "@type": special_type,
        "origin": (origin != null) ? origin.toJson() : null,
        "date": date,
        "public_service_announcement_type": public_service_announcement_type,
        "from_chat_id": from_chat_id,
        "from_message_id": from_message_id,
      });
    } catch (e) {
      return MessageForwardInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageForwardInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardInfo.html).
  MessageForwardOrigin get origin {
    try {
      return MessageForwardOrigin((rawData["origin"] as Map));
    } catch (e) {
      return MessageForwardOrigin({"@type": "error", "error": "${e}", "message": "error at MessageForwardInfo origin"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardInfo.html).
  int? get date {
    try {
      return (rawData["date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardInfo.html).
  String? get public_service_announcement_type {
    try {
      return (rawData["public_service_announcement_type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardInfo.html).
  int? get from_chat_id {
    try {
      return (rawData["from_chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageForwardInfo.html).
  int? get from_message_id {
    try {
      return (rawData["from_message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageReplyInfo.html).
class MessageReplyInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageReplyInfo.html).
  MessageReplyInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageReplyInfo.html).
  factory MessageReplyInfo.create({
    String special_type = "messageReplyInfo",
    int? reply_count,
    List<MessageSender>? recent_replier_ids,
    int? last_read_inbox_message_id,
    int? last_read_outbox_message_id,
    int? last_message_id,
  }) {
    try {
      return MessageReplyInfo({
        "@type": special_type,
        "reply_count": reply_count,
        "recent_replier_ids": (recent_replier_ids != null)
            ? recent_replier_ids.map((e) {
                return MessageSender((e as Map)).toJson();
              }).toList()
            : null,
        "last_read_inbox_message_id": last_read_inbox_message_id,
        "last_read_outbox_message_id": last_read_outbox_message_id,
        "last_message_id": last_message_id,
      });
    } catch (e) {
      return MessageReplyInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageReplyInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageReplyInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageReplyInfo.html).
  int? get reply_count {
    try {
      return (rawData["reply_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageReplyInfo.html).
  List<MessageSender> get recent_replier_ids {
    try {
      return (rawData["recent_replier_ids"] as List)
          .map((e) {
            return MessageSender((e as Map));
          })
          .toList()
          .cast<MessageSender>();
    } catch (e) {
      return [
        MessageSender({"@type": "error", "error": "${e}", "message": "error at MessageReplyInfo recent_replier_ids"})
      ].cast<MessageSender>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageReplyInfo.html).
  int? get last_read_inbox_message_id {
    try {
      return (rawData["last_read_inbox_message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageReplyInfo.html).
  int? get last_read_outbox_message_id {
    try {
      return (rawData["last_read_outbox_message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageReplyInfo.html).
  int? get last_message_id {
    try {
      return (rawData["last_message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageReaction.html).
class MessageReaction {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageReaction.html).
  MessageReaction(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageReaction.html).
  factory MessageReaction.create({
    String special_type = "messageReaction",
    ReactionType? type,
    int? total_count,
    bool? is_chosen,
    List<MessageSender>? recent_sender_ids,
  }) {
    try {
      return MessageReaction({
        "@type": special_type,
        "type": (type != null) ? type.toJson() : null,
        "total_count": total_count,
        "is_chosen": is_chosen,
        "recent_sender_ids": (recent_sender_ids != null)
            ? recent_sender_ids.map((e) {
                return MessageSender((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return MessageReaction({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageReaction.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageReaction.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageReaction.html).
  ReactionType get type {
    try {
      return ReactionType((rawData["type"] as Map));
    } catch (e) {
      return ReactionType({"@type": "error", "error": "${e}", "message": "error at MessageReaction type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageReaction.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageReaction.html).
  bool? get is_chosen {
    try {
      return (rawData["is_chosen"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageReaction.html).
  List<MessageSender> get recent_sender_ids {
    try {
      return (rawData["recent_sender_ids"] as List)
          .map((e) {
            return MessageSender((e as Map));
          })
          .toList()
          .cast<MessageSender>();
    } catch (e) {
      return [
        MessageSender({"@type": "error", "error": "${e}", "message": "error at MessageReaction recent_sender_ids"})
      ].cast<MessageSender>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageInteractionInfo.html).
class MessageInteractionInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageInteractionInfo.html).
  MessageInteractionInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageInteractionInfo.html).
  factory MessageInteractionInfo.create({
    String special_type = "messageInteractionInfo",
    int? view_count,
    int? forward_count,
    MessageReplyInfo? reply_info,
    List<MessageReaction>? reactions,
  }) {
    try {
      return MessageInteractionInfo({
        "@type": special_type,
        "view_count": view_count,
        "forward_count": forward_count,
        "reply_info": (reply_info != null) ? reply_info.toJson() : null,
        "reactions": (reactions != null)
            ? reactions.map((e) {
                return MessageReaction((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return MessageInteractionInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageInteractionInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageInteractionInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageInteractionInfo.html).
  int? get view_count {
    try {
      return (rawData["view_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageInteractionInfo.html).
  int? get forward_count {
    try {
      return (rawData["forward_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageInteractionInfo.html).
  MessageReplyInfo get reply_info {
    try {
      return MessageReplyInfo((rawData["reply_info"] as Map));
    } catch (e) {
      return MessageReplyInfo({"@type": "error", "error": "${e}", "message": "error at MessageInteractionInfo reply_info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageInteractionInfo.html).
  List<MessageReaction> get reactions {
    try {
      return (rawData["reactions"] as List)
          .map((e) {
            return MessageReaction((e as Map));
          })
          .toList()
          .cast<MessageReaction>();
    } catch (e) {
      return [
        MessageReaction({"@type": "error", "error": "${e}", "message": "error at MessageInteractionInfo reactions"})
      ].cast<MessageReaction>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UnreadReaction.html).
class UnreadReaction {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UnreadReaction.html).
  UnreadReaction(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UnreadReaction.html).
  factory UnreadReaction.create({
    String special_type = "unreadReaction",
    ReactionType? type,
    MessageSender? sender_id,
    bool? is_big,
  }) {
    try {
      return UnreadReaction({
        "@type": special_type,
        "type": (type != null) ? type.toJson() : null,
        "sender_id": (sender_id != null) ? sender_id.toJson() : null,
        "is_big": is_big,
      });
    } catch (e) {
      return UnreadReaction({
        "@type": "error",
        "error": "${e}",
        "message": "error method UnreadReaction.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UnreadReaction.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UnreadReaction.html).
  ReactionType get type {
    try {
      return ReactionType((rawData["type"] as Map));
    } catch (e) {
      return ReactionType({"@type": "error", "error": "${e}", "message": "error at UnreadReaction type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UnreadReaction.html).
  MessageSender get sender_id {
    try {
      return MessageSender((rawData["sender_id"] as Map));
    } catch (e) {
      return MessageSender({"@type": "error", "error": "${e}", "message": "error at UnreadReaction sender_id"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UnreadReaction.html).
  bool? get is_big {
    try {
      return (rawData["is_big"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendingState.html).
class MessageSendingState {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendingState.html).
  MessageSendingState(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendingState.html).
  factory MessageSendingState.create({
    String special_type = "messageSendingStatePending",
    int? error_code,
    String? error_message,
    bool? can_retry,
    bool? need_another_sender,
    double? retry_after,
  }) {
    try {
      return MessageSendingState({
        "@type": special_type,
        "error_code": error_code,
        "error_message": error_message,
        "can_retry": can_retry,
        "need_another_sender": need_another_sender,
        "retry_after": retry_after,
      });
    } catch (e) {
      return MessageSendingState({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageSendingState.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendingState.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendingState.html).
  int? get error_code {
    try {
      return (rawData["error_code"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendingState.html).
  String? get error_message {
    try {
      return (rawData["error_message"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendingState.html).
  bool? get can_retry {
    try {
      return (rawData["can_retry"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendingState.html).
  bool? get need_another_sender {
    try {
      return (rawData["need_another_sender"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendingState.html).
  double? get retry_after {
    try {
      return (rawData["retry_after"] as double);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
class Message {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  Message(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  factory Message.create({
    String special_type = "message",
    int? id,
    MessageSender? sender_id,
    int? chat_id,
    MessageSendingState? sending_state,
    MessageSchedulingState? scheduling_state,
    bool? is_outgoing,
    bool? is_pinned,
    bool? can_be_edited,
    bool? can_be_forwarded,
    bool? can_be_saved,
    bool? can_be_deleted_only_for_self,
    bool? can_be_deleted_for_all_users,
    bool? can_get_added_reactions,
    bool? can_get_statistics,
    bool? can_get_message_thread,
    bool? can_get_viewers,
    bool? can_get_media_timestamp_links,
    bool? can_report_reactions,
    bool? has_timestamped_media,
    bool? is_channel_post,
    bool? contains_unread_mention,
    int? date,
    int? edit_date,
    MessageForwardInfo? forward_info,
    MessageInteractionInfo? interaction_info,
    List<UnreadReaction>? unread_reactions,
    int? reply_in_chat_id,
    int? reply_to_message_id,
    int? message_thread_id,
    int? ttl,
    double? ttl_expires_in,
    int? via_bot_user_id,
    String? author_signature,
    int? media_album_id,
    String? restriction_reason,
    MessageContent? content,
    ReplyMarkup? reply_markup,
  }) {
    try {
      return Message({
        "@type": special_type,
        "id": id,
        "sender_id": (sender_id != null) ? sender_id.toJson() : null,
        "chat_id": chat_id,
        "sending_state": (sending_state != null) ? sending_state.toJson() : null,
        "scheduling_state": (scheduling_state != null) ? scheduling_state.toJson() : null,
        "is_outgoing": is_outgoing,
        "is_pinned": is_pinned,
        "can_be_edited": can_be_edited,
        "can_be_forwarded": can_be_forwarded,
        "can_be_saved": can_be_saved,
        "can_be_deleted_only_for_self": can_be_deleted_only_for_self,
        "can_be_deleted_for_all_users": can_be_deleted_for_all_users,
        "can_get_added_reactions": can_get_added_reactions,
        "can_get_statistics": can_get_statistics,
        "can_get_message_thread": can_get_message_thread,
        "can_get_viewers": can_get_viewers,
        "can_get_media_timestamp_links": can_get_media_timestamp_links,
        "can_report_reactions": can_report_reactions,
        "has_timestamped_media": has_timestamped_media,
        "is_channel_post": is_channel_post,
        "contains_unread_mention": contains_unread_mention,
        "date": date,
        "edit_date": edit_date,
        "forward_info": (forward_info != null) ? forward_info.toJson() : null,
        "interaction_info": (interaction_info != null) ? interaction_info.toJson() : null,
        "unread_reactions": (unread_reactions != null)
            ? unread_reactions.map((e) {
                return UnreadReaction((e as Map)).toJson();
              }).toList()
            : null,
        "reply_in_chat_id": reply_in_chat_id,
        "reply_to_message_id": reply_to_message_id,
        "message_thread_id": message_thread_id,
        "ttl": ttl,
        "ttl_expires_in": ttl_expires_in,
        "via_bot_user_id": via_bot_user_id,
        "author_signature": author_signature,
        "media_album_id": media_album_id,
        "restriction_reason": restriction_reason,
        "content": (content != null) ? content.toJson() : null,
        "reply_markup": (reply_markup != null) ? reply_markup.toJson() : null,
      });
    } catch (e) {
      return Message({
        "@type": "error",
        "error": "${e}",
        "message": "error method Message.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  MessageSender get sender_id {
    try {
      return MessageSender((rawData["sender_id"] as Map));
    } catch (e) {
      return MessageSender({"@type": "error", "error": "${e}", "message": "error at Message sender_id"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  int? get chat_id {
    try {
      return (rawData["chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  MessageSendingState get sending_state {
    try {
      return MessageSendingState((rawData["sending_state"] as Map));
    } catch (e) {
      return MessageSendingState({"@type": "error", "error": "${e}", "message": "error at Message sending_state"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  MessageSchedulingState get scheduling_state {
    try {
      return MessageSchedulingState((rawData["scheduling_state"] as Map));
    } catch (e) {
      return MessageSchedulingState({"@type": "error", "error": "${e}", "message": "error at Message scheduling_state"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  bool? get is_outgoing {
    try {
      return (rawData["is_outgoing"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  bool? get is_pinned {
    try {
      return (rawData["is_pinned"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  bool? get can_be_edited {
    try {
      return (rawData["can_be_edited"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  bool? get can_be_forwarded {
    try {
      return (rawData["can_be_forwarded"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  bool? get can_be_saved {
    try {
      return (rawData["can_be_saved"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  bool? get can_be_deleted_only_for_self {
    try {
      return (rawData["can_be_deleted_only_for_self"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  bool? get can_be_deleted_for_all_users {
    try {
      return (rawData["can_be_deleted_for_all_users"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  bool? get can_get_added_reactions {
    try {
      return (rawData["can_get_added_reactions"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  bool? get can_get_statistics {
    try {
      return (rawData["can_get_statistics"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  bool? get can_get_message_thread {
    try {
      return (rawData["can_get_message_thread"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  bool? get can_get_viewers {
    try {
      return (rawData["can_get_viewers"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  bool? get can_get_media_timestamp_links {
    try {
      return (rawData["can_get_media_timestamp_links"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  bool? get can_report_reactions {
    try {
      return (rawData["can_report_reactions"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  bool? get has_timestamped_media {
    try {
      return (rawData["has_timestamped_media"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  bool? get is_channel_post {
    try {
      return (rawData["is_channel_post"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  bool? get contains_unread_mention {
    try {
      return (rawData["contains_unread_mention"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  int? get date {
    try {
      return (rawData["date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  int? get edit_date {
    try {
      return (rawData["edit_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  MessageForwardInfo get forward_info {
    try {
      return MessageForwardInfo((rawData["forward_info"] as Map));
    } catch (e) {
      return MessageForwardInfo({"@type": "error", "error": "${e}", "message": "error at Message forward_info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  MessageInteractionInfo get interaction_info {
    try {
      return MessageInteractionInfo((rawData["interaction_info"] as Map));
    } catch (e) {
      return MessageInteractionInfo({"@type": "error", "error": "${e}", "message": "error at Message interaction_info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  List<UnreadReaction> get unread_reactions {
    try {
      return (rawData["unread_reactions"] as List)
          .map((e) {
            return UnreadReaction((e as Map));
          })
          .toList()
          .cast<UnreadReaction>();
    } catch (e) {
      return [
        UnreadReaction({"@type": "error", "error": "${e}", "message": "error at Message unread_reactions"})
      ].cast<UnreadReaction>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  int? get reply_in_chat_id {
    try {
      return (rawData["reply_in_chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  int? get reply_to_message_id {
    try {
      return (rawData["reply_to_message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  int? get message_thread_id {
    try {
      return (rawData["message_thread_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  int? get ttl {
    try {
      return (rawData["ttl"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  double? get ttl_expires_in {
    try {
      return (rawData["ttl_expires_in"] as double);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  int? get via_bot_user_id {
    try {
      return (rawData["via_bot_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  String? get author_signature {
    try {
      return (rawData["author_signature"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  int? get media_album_id {
    try {
      return (rawData["media_album_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  String? get restriction_reason {
    try {
      return (rawData["restriction_reason"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  MessageContent get content {
    try {
      return MessageContent((rawData["content"] as Map));
    } catch (e) {
      return MessageContent({"@type": "error", "error": "${e}", "message": "error at Message content"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Message.html).
  ReplyMarkup get reply_markup {
    try {
      return ReplyMarkup((rawData["reply_markup"] as Map));
    } catch (e) {
      return ReplyMarkup({"@type": "error", "error": "${e}", "message": "error at Message reply_markup"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Messages.html).
class Messages {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Messages.html).
  Messages(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Messages.html).
  factory Messages.create({
    String special_type = "messages",
    int? total_count,
    List<Message>? messages,
  }) {
    try {
      return Messages({
        "@type": special_type,
        "total_count": total_count,
        "messages": (messages != null)
            ? messages.map((e) {
                return Message((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return Messages({
        "@type": "error",
        "error": "${e}",
        "message": "error method Messages.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Messages.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Messages.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Messages.html).
  List<Message> get messages {
    try {
      return (rawData["messages"] as List)
          .map((e) {
            return Message((e as Map));
          })
          .toList()
          .cast<Message>();
    } catch (e) {
      return [
        Message({"@type": "error", "error": "${e}", "message": "error at Messages messages"})
      ].cast<Message>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FoundMessages.html).
class FoundMessages {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FoundMessages.html).
  FoundMessages(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FoundMessages.html).
  factory FoundMessages.create({
    String special_type = "foundMessages",
    int? total_count,
    List<Message>? messages,
    String? next_offset,
  }) {
    try {
      return FoundMessages({
        "@type": special_type,
        "total_count": total_count,
        "messages": (messages != null)
            ? messages.map((e) {
                return Message((e as Map)).toJson();
              }).toList()
            : null,
        "next_offset": next_offset,
      });
    } catch (e) {
      return FoundMessages({
        "@type": "error",
        "error": "${e}",
        "message": "error method FoundMessages.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FoundMessages.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FoundMessages.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FoundMessages.html).
  List<Message> get messages {
    try {
      return (rawData["messages"] as List)
          .map((e) {
            return Message((e as Map));
          })
          .toList()
          .cast<Message>();
    } catch (e) {
      return [
        Message({"@type": "error", "error": "${e}", "message": "error at FoundMessages messages"})
      ].cast<Message>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FoundMessages.html).
  String? get next_offset {
    try {
      return (rawData["next_offset"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessagePosition.html).
class MessagePosition {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessagePosition.html).
  MessagePosition(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessagePosition.html).
  factory MessagePosition.create({
    String special_type = "messagePosition",
    int? position,
    int? message_id,
    int? date,
  }) {
    try {
      return MessagePosition({
        "@type": special_type,
        "position": position,
        "message_id": message_id,
        "date": date,
      });
    } catch (e) {
      return MessagePosition({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessagePosition.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessagePosition.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessagePosition.html).
  int? get position {
    try {
      return (rawData["position"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessagePosition.html).
  int? get message_id {
    try {
      return (rawData["message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessagePosition.html).
  int? get date {
    try {
      return (rawData["date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessagePositions.html).
class MessagePositions {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessagePositions.html).
  MessagePositions(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessagePositions.html).
  factory MessagePositions.create({
    String special_type = "messagePositions",
    int? total_count,
    List<MessagePosition>? positions,
  }) {
    try {
      return MessagePositions({
        "@type": special_type,
        "total_count": total_count,
        "positions": (positions != null)
            ? positions.map((e) {
                return MessagePosition((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return MessagePositions({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessagePositions.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessagePositions.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessagePositions.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessagePositions.html).
  List<MessagePosition> get positions {
    try {
      return (rawData["positions"] as List)
          .map((e) {
            return MessagePosition((e as Map));
          })
          .toList()
          .cast<MessagePosition>();
    } catch (e) {
      return [
        MessagePosition({"@type": "error", "error": "${e}", "message": "error at MessagePositions positions"})
      ].cast<MessagePosition>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCalendarDay.html).
class MessageCalendarDay {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCalendarDay.html).
  MessageCalendarDay(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCalendarDay.html).
  factory MessageCalendarDay.create({
    String special_type = "messageCalendarDay",
    int? total_count,
    Message? message,
  }) {
    try {
      return MessageCalendarDay({
        "@type": special_type,
        "total_count": total_count,
        "message": (message != null) ? message.toJson() : null,
      });
    } catch (e) {
      return MessageCalendarDay({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageCalendarDay.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCalendarDay.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCalendarDay.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCalendarDay.html).
  Message get message {
    try {
      return Message((rawData["message"] as Map));
    } catch (e) {
      return Message({"@type": "error", "error": "${e}", "message": "error at MessageCalendarDay message"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCalendar.html).
class MessageCalendar {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCalendar.html).
  MessageCalendar(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCalendar.html).
  factory MessageCalendar.create({
    String special_type = "messageCalendar",
    int? total_count,
    List<MessageCalendarDay>? days,
  }) {
    try {
      return MessageCalendar({
        "@type": special_type,
        "total_count": total_count,
        "days": (days != null)
            ? days.map((e) {
                return MessageCalendarDay((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return MessageCalendar({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageCalendar.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCalendar.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCalendar.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCalendar.html).
  List<MessageCalendarDay> get days {
    try {
      return (rawData["days"] as List)
          .map((e) {
            return MessageCalendarDay((e as Map));
          })
          .toList()
          .cast<MessageCalendarDay>();
    } catch (e) {
      return [
        MessageCalendarDay({"@type": "error", "error": "${e}", "message": "error at MessageCalendar days"})
      ].cast<MessageCalendarDay>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SponsoredMessage.html).
class SponsoredMessage {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SponsoredMessage.html).
  SponsoredMessage(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SponsoredMessage.html).
  factory SponsoredMessage.create({
    String special_type = "sponsoredMessage",
    int? message_id,
    bool? is_recommended,
    int? sponsor_chat_id,
    ChatInviteLinkInfo? sponsor_chat_info,
    InternalLinkType? link,
    MessageContent? content,
  }) {
    try {
      return SponsoredMessage({
        "@type": special_type,
        "message_id": message_id,
        "is_recommended": is_recommended,
        "sponsor_chat_id": sponsor_chat_id,
        "sponsor_chat_info": (sponsor_chat_info != null) ? sponsor_chat_info.toJson() : null,
        "link": (link != null) ? link.toJson() : null,
        "content": (content != null) ? content.toJson() : null,
      });
    } catch (e) {
      return SponsoredMessage({
        "@type": "error",
        "error": "${e}",
        "message": "error method SponsoredMessage.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SponsoredMessage.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SponsoredMessage.html).
  int? get message_id {
    try {
      return (rawData["message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SponsoredMessage.html).
  bool? get is_recommended {
    try {
      return (rawData["is_recommended"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SponsoredMessage.html).
  int? get sponsor_chat_id {
    try {
      return (rawData["sponsor_chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SponsoredMessage.html).
  ChatInviteLinkInfo get sponsor_chat_info {
    try {
      return ChatInviteLinkInfo((rawData["sponsor_chat_info"] as Map));
    } catch (e) {
      return ChatInviteLinkInfo({"@type": "error", "error": "${e}", "message": "error at SponsoredMessage sponsor_chat_info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SponsoredMessage.html).
  InternalLinkType get link {
    try {
      return InternalLinkType((rawData["link"] as Map));
    } catch (e) {
      return InternalLinkType({"@type": "error", "error": "${e}", "message": "error at SponsoredMessage link"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SponsoredMessage.html).
  MessageContent get content {
    try {
      return MessageContent((rawData["content"] as Map));
    } catch (e) {
      return MessageContent({"@type": "error", "error": "${e}", "message": "error at SponsoredMessage content"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileDownload.html).
class FileDownload {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileDownload.html).
  FileDownload(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileDownload.html).
  factory FileDownload.create({
    String special_type = "fileDownload",
    int? file_id,
    Message? message,
    int? add_date,
    int? complete_date,
    bool? is_paused,
  }) {
    try {
      return FileDownload({
        "@type": special_type,
        "file_id": file_id,
        "message": (message != null) ? message.toJson() : null,
        "add_date": add_date,
        "complete_date": complete_date,
        "is_paused": is_paused,
      });
    } catch (e) {
      return FileDownload({
        "@type": "error",
        "error": "${e}",
        "message": "error method FileDownload.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileDownload.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileDownload.html).
  int? get file_id {
    try {
      return (rawData["file_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileDownload.html).
  Message get message {
    try {
      return Message((rawData["message"] as Map));
    } catch (e) {
      return Message({"@type": "error", "error": "${e}", "message": "error at FileDownload message"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileDownload.html).
  int? get add_date {
    try {
      return (rawData["add_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileDownload.html).
  int? get complete_date {
    try {
      return (rawData["complete_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileDownload.html).
  bool? get is_paused {
    try {
      return (rawData["is_paused"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DownloadedFileCounts.html).
class DownloadedFileCounts {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DownloadedFileCounts.html).
  DownloadedFileCounts(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DownloadedFileCounts.html).
  factory DownloadedFileCounts.create({
    String special_type = "downloadedFileCounts",
    int? active_count,
    int? paused_count,
    int? completed_count,
  }) {
    try {
      return DownloadedFileCounts({
        "@type": special_type,
        "active_count": active_count,
        "paused_count": paused_count,
        "completed_count": completed_count,
      });
    } catch (e) {
      return DownloadedFileCounts({
        "@type": "error",
        "error": "${e}",
        "message": "error method DownloadedFileCounts.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DownloadedFileCounts.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DownloadedFileCounts.html).
  int? get active_count {
    try {
      return (rawData["active_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DownloadedFileCounts.html).
  int? get paused_count {
    try {
      return (rawData["paused_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DownloadedFileCounts.html).
  int? get completed_count {
    try {
      return (rawData["completed_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FoundFileDownloads.html).
class FoundFileDownloads {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FoundFileDownloads.html).
  FoundFileDownloads(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FoundFileDownloads.html).
  factory FoundFileDownloads.create({
    String special_type = "foundFileDownloads",
    DownloadedFileCounts? total_counts,
    List<FileDownload>? files,
    String? next_offset,
  }) {
    try {
      return FoundFileDownloads({
        "@type": special_type,
        "total_counts": (total_counts != null) ? total_counts.toJson() : null,
        "files": (files != null)
            ? files.map((e) {
                return FileDownload((e as Map)).toJson();
              }).toList()
            : null,
        "next_offset": next_offset,
      });
    } catch (e) {
      return FoundFileDownloads({
        "@type": "error",
        "error": "${e}",
        "message": "error method FoundFileDownloads.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FoundFileDownloads.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FoundFileDownloads.html).
  DownloadedFileCounts get total_counts {
    try {
      return DownloadedFileCounts((rawData["total_counts"] as Map));
    } catch (e) {
      return DownloadedFileCounts({"@type": "error", "error": "${e}", "message": "error at FoundFileDownloads total_counts"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FoundFileDownloads.html).
  List<FileDownload> get files {
    try {
      return (rawData["files"] as List)
          .map((e) {
            return FileDownload((e as Map));
          })
          .toList()
          .cast<FileDownload>();
    } catch (e) {
      return [
        FileDownload({"@type": "error", "error": "${e}", "message": "error at FoundFileDownloads files"})
      ].cast<FileDownload>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FoundFileDownloads.html).
  String? get next_offset {
    try {
      return (rawData["next_offset"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSettingsScope.html).
class NotificationSettingsScope {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSettingsScope.html).
  NotificationSettingsScope(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSettingsScope.html).
  factory NotificationSettingsScope.create({
    String special_type = "notificationSettingsScopePrivateChats",
  }) {
    try {
      return NotificationSettingsScope({
        "@type": special_type,
      });
    } catch (e) {
      return NotificationSettingsScope({
        "@type": "error",
        "error": "${e}",
        "message": "error method NotificationSettingsScope.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSettingsScope.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNotificationSettings.html).
class ChatNotificationSettings {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNotificationSettings.html).
  ChatNotificationSettings(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNotificationSettings.html).
  factory ChatNotificationSettings.create({
    String special_type = "chatNotificationSettings",
    bool? use_default_mute_for,
    int? mute_for,
    bool? use_default_sound,
    int? sound_id,
    bool? use_default_show_preview,
    bool? show_preview,
    bool? use_default_disable_pinned_message_notifications,
    bool? disable_pinned_message_notifications,
    bool? use_default_disable_mention_notifications,
    bool? disable_mention_notifications,
  }) {
    try {
      return ChatNotificationSettings({
        "@type": special_type,
        "use_default_mute_for": use_default_mute_for,
        "mute_for": mute_for,
        "use_default_sound": use_default_sound,
        "sound_id": sound_id,
        "use_default_show_preview": use_default_show_preview,
        "show_preview": show_preview,
        "use_default_disable_pinned_message_notifications": use_default_disable_pinned_message_notifications,
        "disable_pinned_message_notifications": disable_pinned_message_notifications,
        "use_default_disable_mention_notifications": use_default_disable_mention_notifications,
        "disable_mention_notifications": disable_mention_notifications,
      });
    } catch (e) {
      return ChatNotificationSettings({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatNotificationSettings.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNotificationSettings.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNotificationSettings.html).
  bool? get use_default_mute_for {
    try {
      return (rawData["use_default_mute_for"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNotificationSettings.html).
  int? get mute_for {
    try {
      return (rawData["mute_for"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNotificationSettings.html).
  bool? get use_default_sound {
    try {
      return (rawData["use_default_sound"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNotificationSettings.html).
  int? get sound_id {
    try {
      return (rawData["sound_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNotificationSettings.html).
  bool? get use_default_show_preview {
    try {
      return (rawData["use_default_show_preview"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNotificationSettings.html).
  bool? get show_preview {
    try {
      return (rawData["show_preview"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNotificationSettings.html).
  bool? get use_default_disable_pinned_message_notifications {
    try {
      return (rawData["use_default_disable_pinned_message_notifications"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNotificationSettings.html).
  bool? get disable_pinned_message_notifications {
    try {
      return (rawData["disable_pinned_message_notifications"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNotificationSettings.html).
  bool? get use_default_disable_mention_notifications {
    try {
      return (rawData["use_default_disable_mention_notifications"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNotificationSettings.html).
  bool? get disable_mention_notifications {
    try {
      return (rawData["disable_mention_notifications"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ScopeNotificationSettings.html).
class ScopeNotificationSettings {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ScopeNotificationSettings.html).
  ScopeNotificationSettings(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ScopeNotificationSettings.html).
  factory ScopeNotificationSettings.create({
    String special_type = "scopeNotificationSettings",
    int? mute_for,
    int? sound_id,
    bool? show_preview,
    bool? disable_pinned_message_notifications,
    bool? disable_mention_notifications,
  }) {
    try {
      return ScopeNotificationSettings({
        "@type": special_type,
        "mute_for": mute_for,
        "sound_id": sound_id,
        "show_preview": show_preview,
        "disable_pinned_message_notifications": disable_pinned_message_notifications,
        "disable_mention_notifications": disable_mention_notifications,
      });
    } catch (e) {
      return ScopeNotificationSettings({
        "@type": "error",
        "error": "${e}",
        "message": "error method ScopeNotificationSettings.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ScopeNotificationSettings.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ScopeNotificationSettings.html).
  int? get mute_for {
    try {
      return (rawData["mute_for"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ScopeNotificationSettings.html).
  int? get sound_id {
    try {
      return (rawData["sound_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ScopeNotificationSettings.html).
  bool? get show_preview {
    try {
      return (rawData["show_preview"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ScopeNotificationSettings.html).
  bool? get disable_pinned_message_notifications {
    try {
      return (rawData["disable_pinned_message_notifications"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ScopeNotificationSettings.html).
  bool? get disable_mention_notifications {
    try {
      return (rawData["disable_mention_notifications"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DraftMessage.html).
class DraftMessage {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DraftMessage.html).
  DraftMessage(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DraftMessage.html).
  factory DraftMessage.create({
    String special_type = "draftMessage",
    int? reply_to_message_id,
    int? date,
    InputMessageContent? input_message_text,
  }) {
    try {
      return DraftMessage({
        "@type": special_type,
        "reply_to_message_id": reply_to_message_id,
        "date": date,
        "input_message_text": (input_message_text != null) ? input_message_text.toJson() : null,
      });
    } catch (e) {
      return DraftMessage({
        "@type": "error",
        "error": "${e}",
        "message": "error method DraftMessage.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DraftMessage.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DraftMessage.html).
  int? get reply_to_message_id {
    try {
      return (rawData["reply_to_message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DraftMessage.html).
  int? get date {
    try {
      return (rawData["date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DraftMessage.html).
  InputMessageContent get input_message_text {
    try {
      return InputMessageContent((rawData["input_message_text"] as Map));
    } catch (e) {
      return InputMessageContent({"@type": "error", "error": "${e}", "message": "error at DraftMessage input_message_text"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatType.html).
class ChatType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatType.html).
  ChatType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatType.html).
  factory ChatType.create({
    String special_type = "chatTypePrivate",
    int? user_id,
    int? basic_group_id,
    int? supergroup_id,
    bool? is_channel,
    int? secret_chat_id,
  }) {
    try {
      return ChatType({
        "@type": special_type,
        "user_id": user_id,
        "basic_group_id": basic_group_id,
        "supergroup_id": supergroup_id,
        "is_channel": is_channel,
        "secret_chat_id": secret_chat_id,
      });
    } catch (e) {
      return ChatType({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatType.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatType.html).
  int? get basic_group_id {
    try {
      return (rawData["basic_group_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatType.html).
  int? get supergroup_id {
    try {
      return (rawData["supergroup_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatType.html).
  bool? get is_channel {
    try {
      return (rawData["is_channel"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatType.html).
  int? get secret_chat_id {
    try {
      return (rawData["secret_chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilter.html).
class ChatFilter {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilter.html).
  ChatFilter(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilter.html).
  factory ChatFilter.create({
    String special_type = "chatFilter",
    String? title,
    String? icon_name,
    List<int>? pinned_chat_ids,
    List<int>? included_chat_ids,
    List<int>? excluded_chat_ids,
    bool? exclude_muted,
    bool? exclude_read,
    bool? exclude_archived,
    bool? include_contacts,
    bool? include_non_contacts,
    bool? include_bots,
    bool? include_groups,
    bool? include_channels,
  }) {
    try {
      return ChatFilter({
        "@type": special_type,
        "title": title,
        "icon_name": icon_name,
        "pinned_chat_ids": pinned_chat_ids,
        "included_chat_ids": included_chat_ids,
        "excluded_chat_ids": excluded_chat_ids,
        "exclude_muted": exclude_muted,
        "exclude_read": exclude_read,
        "exclude_archived": exclude_archived,
        "include_contacts": include_contacts,
        "include_non_contacts": include_non_contacts,
        "include_bots": include_bots,
        "include_groups": include_groups,
        "include_channels": include_channels,
      });
    } catch (e) {
      return ChatFilter({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatFilter.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilter.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilter.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilter.html).
  String? get icon_name {
    try {
      return (rawData["icon_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilter.html).
  List<int> get pinned_chat_ids {
    try {
      return (rawData["pinned_chat_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilter.html).
  List<int> get included_chat_ids {
    try {
      return (rawData["included_chat_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilter.html).
  List<int> get excluded_chat_ids {
    try {
      return (rawData["excluded_chat_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilter.html).
  bool? get exclude_muted {
    try {
      return (rawData["exclude_muted"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilter.html).
  bool? get exclude_read {
    try {
      return (rawData["exclude_read"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilter.html).
  bool? get exclude_archived {
    try {
      return (rawData["exclude_archived"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilter.html).
  bool? get include_contacts {
    try {
      return (rawData["include_contacts"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilter.html).
  bool? get include_non_contacts {
    try {
      return (rawData["include_non_contacts"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilter.html).
  bool? get include_bots {
    try {
      return (rawData["include_bots"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilter.html).
  bool? get include_groups {
    try {
      return (rawData["include_groups"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilter.html).
  bool? get include_channels {
    try {
      return (rawData["include_channels"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilterInfo.html).
class ChatFilterInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilterInfo.html).
  ChatFilterInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilterInfo.html).
  factory ChatFilterInfo.create({
    String special_type = "chatFilterInfo",
    int? id,
    String? title,
    String? icon_name,
  }) {
    try {
      return ChatFilterInfo({
        "@type": special_type,
        "id": id,
        "title": title,
        "icon_name": icon_name,
      });
    } catch (e) {
      return ChatFilterInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatFilterInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilterInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilterInfo.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilterInfo.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatFilterInfo.html).
  String? get icon_name {
    try {
      return (rawData["icon_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RecommendedChatFilter.html).
class RecommendedChatFilter {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RecommendedChatFilter.html).
  RecommendedChatFilter(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RecommendedChatFilter.html).
  factory RecommendedChatFilter.create({
    String special_type = "recommendedChatFilter",
    ChatFilter? filter,
    String? description,
  }) {
    try {
      return RecommendedChatFilter({
        "@type": special_type,
        "filter": (filter != null) ? filter.toJson() : null,
        "description": description,
      });
    } catch (e) {
      return RecommendedChatFilter({
        "@type": "error",
        "error": "${e}",
        "message": "error method RecommendedChatFilter.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RecommendedChatFilter.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RecommendedChatFilter.html).
  ChatFilter get filter {
    try {
      return ChatFilter((rawData["filter"] as Map));
    } catch (e) {
      return ChatFilter({"@type": "error", "error": "${e}", "message": "error at RecommendedChatFilter filter"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RecommendedChatFilter.html).
  String? get description {
    try {
      return (rawData["description"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RecommendedChatFilters.html).
class RecommendedChatFilters {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RecommendedChatFilters.html).
  RecommendedChatFilters(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RecommendedChatFilters.html).
  factory RecommendedChatFilters.create({
    String special_type = "recommendedChatFilters",
    List<RecommendedChatFilter>? chat_filters,
  }) {
    try {
      return RecommendedChatFilters({
        "@type": special_type,
        "chat_filters": (chat_filters != null)
            ? chat_filters.map((e) {
                return RecommendedChatFilter((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return RecommendedChatFilters({
        "@type": "error",
        "error": "${e}",
        "message": "error method RecommendedChatFilters.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RecommendedChatFilters.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RecommendedChatFilters.html).
  List<RecommendedChatFilter> get chat_filters {
    try {
      return (rawData["chat_filters"] as List)
          .map((e) {
            return RecommendedChatFilter((e as Map));
          })
          .toList()
          .cast<RecommendedChatFilter>();
    } catch (e) {
      return [
        RecommendedChatFilter({"@type": "error", "error": "${e}", "message": "error at RecommendedChatFilters chat_filters"})
      ].cast<RecommendedChatFilter>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatList.html).
class ChatList {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatList.html).
  ChatList(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatList.html).
  factory ChatList.create({
    String special_type = "chatListMain",
    int? chat_filter_id,
  }) {
    try {
      return ChatList({
        "@type": special_type,
        "chat_filter_id": chat_filter_id,
      });
    } catch (e) {
      return ChatList({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatList.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatList.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatList.html).
  int? get chat_filter_id {
    try {
      return (rawData["chat_filter_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatLists.html).
class ChatLists {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatLists.html).
  ChatLists(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatLists.html).
  factory ChatLists.create({
    String special_type = "chatLists",
    List<ChatList>? chat_lists,
  }) {
    try {
      return ChatLists({
        "@type": special_type,
        "chat_lists": (chat_lists != null)
            ? chat_lists.map((e) {
                return ChatList((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return ChatLists({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatLists.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatLists.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatLists.html).
  List<ChatList> get chat_lists {
    try {
      return (rawData["chat_lists"] as List)
          .map((e) {
            return ChatList((e as Map));
          })
          .toList()
          .cast<ChatList>();
    } catch (e) {
      return [
        ChatList({"@type": "error", "error": "${e}", "message": "error at ChatLists chat_lists"})
      ].cast<ChatList>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatSource.html).
class ChatSource {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatSource.html).
  ChatSource(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatSource.html).
  factory ChatSource.create({
    String special_type = "chatSourceMtprotoProxy",
    String? type,
    String? text,
  }) {
    try {
      return ChatSource({
        "@type": special_type,
        "type": type,
        "text": text,
      });
    } catch (e) {
      return ChatSource({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatSource.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatSource.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatSource.html).
  String? get type {
    try {
      return (rawData["type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatSource.html).
  String? get text {
    try {
      return (rawData["text"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPosition.html).
class ChatPosition {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPosition.html).
  ChatPosition(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPosition.html).
  factory ChatPosition.create({
    String special_type = "chatPosition",
    ChatList? list,
    int? order,
    bool? is_pinned,
    ChatSource? source,
  }) {
    try {
      return ChatPosition({
        "@type": special_type,
        "list": (list != null) ? list.toJson() : null,
        "order": order,
        "is_pinned": is_pinned,
        "source": (source != null) ? source.toJson() : null,
      });
    } catch (e) {
      return ChatPosition({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatPosition.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPosition.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPosition.html).
  ChatList get list {
    try {
      return ChatList((rawData["list"] as Map));
    } catch (e) {
      return ChatList({"@type": "error", "error": "${e}", "message": "error at ChatPosition list"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPosition.html).
  int? get order {
    try {
      return (rawData["order"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPosition.html).
  bool? get is_pinned {
    try {
      return (rawData["is_pinned"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatPosition.html).
  ChatSource get source {
    try {
      return ChatSource((rawData["source"] as Map));
    } catch (e) {
      return ChatSource({"@type": "error", "error": "${e}", "message": "error at ChatPosition source"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAvailableReactions.html).
class ChatAvailableReactions {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAvailableReactions.html).
  ChatAvailableReactions(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAvailableReactions.html).
  factory ChatAvailableReactions.create({
    String special_type = "chatAvailableReactionsAll",
    List<ReactionType>? reactions,
  }) {
    try {
      return ChatAvailableReactions({
        "@type": special_type,
        "reactions": (reactions != null)
            ? reactions.map((e) {
                return ReactionType((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return ChatAvailableReactions({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatAvailableReactions.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAvailableReactions.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAvailableReactions.html).
  List<ReactionType> get reactions {
    try {
      return (rawData["reactions"] as List)
          .map((e) {
            return ReactionType((e as Map));
          })
          .toList()
          .cast<ReactionType>();
    } catch (e) {
      return [
        ReactionType({"@type": "error", "error": "${e}", "message": "error at ChatAvailableReactions reactions"})
      ].cast<ReactionType>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VideoChat.html).
class VideoChat {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VideoChat.html).
  VideoChat(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VideoChat.html).
  factory VideoChat.create({
    String special_type = "videoChat",
    int? group_call_id,
    bool? has_participants,
    MessageSender? default_participant_id,
  }) {
    try {
      return VideoChat({
        "@type": special_type,
        "group_call_id": group_call_id,
        "has_participants": has_participants,
        "default_participant_id": (default_participant_id != null) ? default_participant_id.toJson() : null,
      });
    } catch (e) {
      return VideoChat({
        "@type": "error",
        "error": "${e}",
        "message": "error method VideoChat.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VideoChat.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VideoChat.html).
  int? get group_call_id {
    try {
      return (rawData["group_call_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VideoChat.html).
  bool? get has_participants {
    try {
      return (rawData["has_participants"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VideoChat.html).
  MessageSender get default_participant_id {
    try {
      return MessageSender((rawData["default_participant_id"] as Map));
    } catch (e) {
      return MessageSender({"@type": "error", "error": "${e}", "message": "error at VideoChat default_participant_id"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
class Chat {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  Chat(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  factory Chat.create({
    String special_type = "chat",
    int? id,
    ChatType? type,
    String? title,
    ChatPhotoInfo? photo,
    ChatPermissions? permissions,
    Message? last_message,
    List<ChatPosition>? positions,
    MessageSender? message_sender_id,
    bool? has_protected_content,
    bool? is_marked_as_unread,
    bool? is_blocked,
    bool? has_scheduled_messages,
    bool? can_be_deleted_only_for_self,
    bool? can_be_deleted_for_all_users,
    bool? can_be_reported,
    bool? default_disable_notification,
    int? unread_count,
    int? last_read_inbox_message_id,
    int? last_read_outbox_message_id,
    int? unread_mention_count,
    int? unread_reaction_count,
    ChatNotificationSettings? notification_settings,
    ChatAvailableReactions? available_reactions,
    int? message_ttl,
    String? theme_name,
    ChatActionBar? action_bar,
    VideoChat? video_chat,
    ChatJoinRequestsInfo? pending_join_requests,
    int? reply_markup_message_id,
    DraftMessage? draft_message,
    String? client_data,
  }) {
    try {
      return Chat({
        "@type": special_type,
        "id": id,
        "type": (type != null) ? type.toJson() : null,
        "title": title,
        "photo": (photo != null) ? photo.toJson() : null,
        "permissions": (permissions != null) ? permissions.toJson() : null,
        "last_message": (last_message != null) ? last_message.toJson() : null,
        "positions": (positions != null)
            ? positions.map((e) {
                return ChatPosition((e as Map)).toJson();
              }).toList()
            : null,
        "message_sender_id": (message_sender_id != null) ? message_sender_id.toJson() : null,
        "has_protected_content": has_protected_content,
        "is_marked_as_unread": is_marked_as_unread,
        "is_blocked": is_blocked,
        "has_scheduled_messages": has_scheduled_messages,
        "can_be_deleted_only_for_self": can_be_deleted_only_for_self,
        "can_be_deleted_for_all_users": can_be_deleted_for_all_users,
        "can_be_reported": can_be_reported,
        "default_disable_notification": default_disable_notification,
        "unread_count": unread_count,
        "last_read_inbox_message_id": last_read_inbox_message_id,
        "last_read_outbox_message_id": last_read_outbox_message_id,
        "unread_mention_count": unread_mention_count,
        "unread_reaction_count": unread_reaction_count,
        "notification_settings": (notification_settings != null) ? notification_settings.toJson() : null,
        "available_reactions": (available_reactions != null) ? available_reactions.toJson() : null,
        "message_ttl": message_ttl,
        "theme_name": theme_name,
        "action_bar": (action_bar != null) ? action_bar.toJson() : null,
        "video_chat": (video_chat != null) ? video_chat.toJson() : null,
        "pending_join_requests": (pending_join_requests != null) ? pending_join_requests.toJson() : null,
        "reply_markup_message_id": reply_markup_message_id,
        "draft_message": (draft_message != null) ? draft_message.toJson() : null,
        "client_data": client_data,
      });
    } catch (e) {
      return Chat({
        "@type": "error",
        "error": "${e}",
        "message": "error method Chat.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  ChatType get type {
    try {
      return ChatType((rawData["type"] as Map));
    } catch (e) {
      return ChatType({"@type": "error", "error": "${e}", "message": "error at Chat type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  ChatPhotoInfo get photo {
    try {
      return ChatPhotoInfo((rawData["photo"] as Map));
    } catch (e) {
      return ChatPhotoInfo({"@type": "error", "error": "${e}", "message": "error at Chat photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  ChatPermissions get permissions {
    try {
      return ChatPermissions((rawData["permissions"] as Map));
    } catch (e) {
      return ChatPermissions({"@type": "error", "error": "${e}", "message": "error at Chat permissions"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  Message get last_message {
    try {
      return Message((rawData["last_message"] as Map));
    } catch (e) {
      return Message({"@type": "error", "error": "${e}", "message": "error at Chat last_message"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  List<ChatPosition> get positions {
    try {
      return (rawData["positions"] as List)
          .map((e) {
            return ChatPosition((e as Map));
          })
          .toList()
          .cast<ChatPosition>();
    } catch (e) {
      return [
        ChatPosition({"@type": "error", "error": "${e}", "message": "error at Chat positions"})
      ].cast<ChatPosition>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  MessageSender get message_sender_id {
    try {
      return MessageSender((rawData["message_sender_id"] as Map));
    } catch (e) {
      return MessageSender({"@type": "error", "error": "${e}", "message": "error at Chat message_sender_id"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  bool? get has_protected_content {
    try {
      return (rawData["has_protected_content"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  bool? get is_marked_as_unread {
    try {
      return (rawData["is_marked_as_unread"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  bool? get is_blocked {
    try {
      return (rawData["is_blocked"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  bool? get has_scheduled_messages {
    try {
      return (rawData["has_scheduled_messages"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  bool? get can_be_deleted_only_for_self {
    try {
      return (rawData["can_be_deleted_only_for_self"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  bool? get can_be_deleted_for_all_users {
    try {
      return (rawData["can_be_deleted_for_all_users"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  bool? get can_be_reported {
    try {
      return (rawData["can_be_reported"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  bool? get default_disable_notification {
    try {
      return (rawData["default_disable_notification"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  int? get unread_count {
    try {
      return (rawData["unread_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  int? get last_read_inbox_message_id {
    try {
      return (rawData["last_read_inbox_message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  int? get last_read_outbox_message_id {
    try {
      return (rawData["last_read_outbox_message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  int? get unread_mention_count {
    try {
      return (rawData["unread_mention_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  int? get unread_reaction_count {
    try {
      return (rawData["unread_reaction_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  ChatNotificationSettings get notification_settings {
    try {
      return ChatNotificationSettings((rawData["notification_settings"] as Map));
    } catch (e) {
      return ChatNotificationSettings({"@type": "error", "error": "${e}", "message": "error at Chat notification_settings"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  ChatAvailableReactions get available_reactions {
    try {
      return ChatAvailableReactions((rawData["available_reactions"] as Map));
    } catch (e) {
      return ChatAvailableReactions({"@type": "error", "error": "${e}", "message": "error at Chat available_reactions"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  int? get message_ttl {
    try {
      return (rawData["message_ttl"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  String? get theme_name {
    try {
      return (rawData["theme_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  ChatActionBar get action_bar {
    try {
      return ChatActionBar((rawData["action_bar"] as Map));
    } catch (e) {
      return ChatActionBar({"@type": "error", "error": "${e}", "message": "error at Chat action_bar"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  VideoChat get video_chat {
    try {
      return VideoChat((rawData["video_chat"] as Map));
    } catch (e) {
      return VideoChat({"@type": "error", "error": "${e}", "message": "error at Chat video_chat"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  ChatJoinRequestsInfo get pending_join_requests {
    try {
      return ChatJoinRequestsInfo((rawData["pending_join_requests"] as Map));
    } catch (e) {
      return ChatJoinRequestsInfo({"@type": "error", "error": "${e}", "message": "error at Chat pending_join_requests"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  int? get reply_markup_message_id {
    try {
      return (rawData["reply_markup_message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  DraftMessage get draft_message {
    try {
      return DraftMessage((rawData["draft_message"] as Map));
    } catch (e) {
      return DraftMessage({"@type": "error", "error": "${e}", "message": "error at Chat draft_message"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chat.html).
  String? get client_data {
    try {
      return (rawData["client_data"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chats.html).
class Chats {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chats.html).
  Chats(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chats.html).
  factory Chats.create({
    String special_type = "chats",
    int? total_count,
    List<int>? chat_ids,
  }) {
    try {
      return Chats({
        "@type": special_type,
        "total_count": total_count,
        "chat_ids": chat_ids,
      });
    } catch (e) {
      return Chats({
        "@type": "error",
        "error": "${e}",
        "message": "error method Chats.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chats.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chats.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Chats.html).
  List<int> get chat_ids {
    try {
      return (rawData["chat_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNearby.html).
class ChatNearby {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNearby.html).
  ChatNearby(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNearby.html).
  factory ChatNearby.create({
    String special_type = "chatNearby",
    int? chat_id,
    int? distance,
  }) {
    try {
      return ChatNearby({
        "@type": special_type,
        "chat_id": chat_id,
        "distance": distance,
      });
    } catch (e) {
      return ChatNearby({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatNearby.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNearby.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNearby.html).
  int? get chat_id {
    try {
      return (rawData["chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatNearby.html).
  int? get distance {
    try {
      return (rawData["distance"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatsNearby.html).
class ChatsNearby {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatsNearby.html).
  ChatsNearby(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatsNearby.html).
  factory ChatsNearby.create({
    String special_type = "chatsNearby",
    List<ChatNearby>? users_nearby,
    List<ChatNearby>? supergroups_nearby,
  }) {
    try {
      return ChatsNearby({
        "@type": special_type,
        "users_nearby": (users_nearby != null)
            ? users_nearby.map((e) {
                return ChatNearby((e as Map)).toJson();
              }).toList()
            : null,
        "supergroups_nearby": (supergroups_nearby != null)
            ? supergroups_nearby.map((e) {
                return ChatNearby((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return ChatsNearby({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatsNearby.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatsNearby.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatsNearby.html).
  List<ChatNearby> get users_nearby {
    try {
      return (rawData["users_nearby"] as List)
          .map((e) {
            return ChatNearby((e as Map));
          })
          .toList()
          .cast<ChatNearby>();
    } catch (e) {
      return [
        ChatNearby({"@type": "error", "error": "${e}", "message": "error at ChatsNearby users_nearby"})
      ].cast<ChatNearby>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatsNearby.html).
  List<ChatNearby> get supergroups_nearby {
    try {
      return (rawData["supergroups_nearby"] as List)
          .map((e) {
            return ChatNearby((e as Map));
          })
          .toList()
          .cast<ChatNearby>();
    } catch (e) {
      return [
        ChatNearby({"@type": "error", "error": "${e}", "message": "error at ChatsNearby supergroups_nearby"})
      ].cast<ChatNearby>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PublicChatType.html).
class PublicChatType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PublicChatType.html).
  PublicChatType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PublicChatType.html).
  factory PublicChatType.create({
    String special_type = "publicChatTypeHasUsername",
  }) {
    try {
      return PublicChatType({
        "@type": special_type,
      });
    } catch (e) {
      return PublicChatType({
        "@type": "error",
        "error": "${e}",
        "message": "error method PublicChatType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PublicChatType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatActionBar.html).
class ChatActionBar {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatActionBar.html).
  ChatActionBar(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatActionBar.html).
  factory ChatActionBar.create({
    String special_type = "chatActionBarReportSpam",
    bool? can_unarchive,
    int? distance,
    String? title,
    bool? is_channel,
    int? request_date,
  }) {
    try {
      return ChatActionBar({
        "@type": special_type,
        "can_unarchive": can_unarchive,
        "distance": distance,
        "title": title,
        "is_channel": is_channel,
        "request_date": request_date,
      });
    } catch (e) {
      return ChatActionBar({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatActionBar.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatActionBar.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatActionBar.html).
  bool? get can_unarchive {
    try {
      return (rawData["can_unarchive"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatActionBar.html).
  int? get distance {
    try {
      return (rawData["distance"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatActionBar.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatActionBar.html).
  bool? get is_channel {
    try {
      return (rawData["is_channel"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatActionBar.html).
  int? get request_date {
    try {
      return (rawData["request_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1KeyboardButtonType.html).
class KeyboardButtonType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1KeyboardButtonType.html).
  KeyboardButtonType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1KeyboardButtonType.html).
  factory KeyboardButtonType.create({
    String special_type = "keyboardButtonTypeText",
    bool? force_regular,
    bool? force_quiz,
    String? url,
  }) {
    try {
      return KeyboardButtonType({
        "@type": special_type,
        "force_regular": force_regular,
        "force_quiz": force_quiz,
        "url": url,
      });
    } catch (e) {
      return KeyboardButtonType({
        "@type": "error",
        "error": "${e}",
        "message": "error method KeyboardButtonType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1KeyboardButtonType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1KeyboardButtonType.html).
  bool? get force_regular {
    try {
      return (rawData["force_regular"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1KeyboardButtonType.html).
  bool? get force_quiz {
    try {
      return (rawData["force_quiz"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1KeyboardButtonType.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1KeyboardButton.html).
class KeyboardButton {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1KeyboardButton.html).
  KeyboardButton(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1KeyboardButton.html).
  factory KeyboardButton.create({
    String special_type = "keyboardButton",
    String? text,
    KeyboardButtonType? type,
  }) {
    try {
      return KeyboardButton({
        "@type": special_type,
        "text": text,
        "type": (type != null) ? type.toJson() : null,
      });
    } catch (e) {
      return KeyboardButton({
        "@type": "error",
        "error": "${e}",
        "message": "error method KeyboardButton.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1KeyboardButton.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1KeyboardButton.html).
  String? get text {
    try {
      return (rawData["text"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1KeyboardButton.html).
  KeyboardButtonType get type {
    try {
      return KeyboardButtonType((rawData["type"] as Map));
    } catch (e) {
      return KeyboardButtonType({"@type": "error", "error": "${e}", "message": "error at KeyboardButton type"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineKeyboardButtonType.html).
class InlineKeyboardButtonType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineKeyboardButtonType.html).
  InlineKeyboardButtonType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineKeyboardButtonType.html).
  factory InlineKeyboardButtonType.create({
    String special_type = "inlineKeyboardButtonTypeUrl",
    String? url,
    int? id,
    String? forward_text,
    String? data,
    String? query,
    bool? in_current_chat,
    int? user_id,
  }) {
    try {
      return InlineKeyboardButtonType({
        "@type": special_type,
        "url": url,
        "id": id,
        "forward_text": forward_text,
        "data": data,
        "query": query,
        "in_current_chat": in_current_chat,
        "user_id": user_id,
      });
    } catch (e) {
      return InlineKeyboardButtonType({
        "@type": "error",
        "error": "${e}",
        "message": "error method InlineKeyboardButtonType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineKeyboardButtonType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineKeyboardButtonType.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineKeyboardButtonType.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineKeyboardButtonType.html).
  String? get forward_text {
    try {
      return (rawData["forward_text"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineKeyboardButtonType.html).
  String? get data {
    try {
      return (rawData["data"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineKeyboardButtonType.html).
  String? get query {
    try {
      return (rawData["query"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineKeyboardButtonType.html).
  bool? get in_current_chat {
    try {
      return (rawData["in_current_chat"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineKeyboardButtonType.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineKeyboardButton.html).
class InlineKeyboardButton {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineKeyboardButton.html).
  InlineKeyboardButton(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineKeyboardButton.html).
  factory InlineKeyboardButton.create({
    String special_type = "inlineKeyboardButton",
    String? text,
    InlineKeyboardButtonType? type,
  }) {
    try {
      return InlineKeyboardButton({
        "@type": special_type,
        "text": text,
        "type": (type != null) ? type.toJson() : null,
      });
    } catch (e) {
      return InlineKeyboardButton({
        "@type": "error",
        "error": "${e}",
        "message": "error method InlineKeyboardButton.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineKeyboardButton.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineKeyboardButton.html).
  String? get text {
    try {
      return (rawData["text"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineKeyboardButton.html).
  InlineKeyboardButtonType get type {
    try {
      return InlineKeyboardButtonType((rawData["type"] as Map));
    } catch (e) {
      return InlineKeyboardButtonType({"@type": "error", "error": "${e}", "message": "error at InlineKeyboardButton type"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ReplyMarkup.html).
class ReplyMarkup {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ReplyMarkup.html).
  ReplyMarkup(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ReplyMarkup.html).
  factory ReplyMarkup.create({
    String special_type = "replyMarkupRemoveKeyboard",
    bool? is_personal,
    String? input_field_placeholder,
    List<List<InlineKeyboardButton>>? rows,
    bool? resize_keyboard,
    bool? one_time,
  }) {
    try {
      return ReplyMarkup({
        "@type": special_type,
        "is_personal": is_personal,
        "input_field_placeholder": input_field_placeholder,
        "rows": (rows != null)
            ? rows.map((e) {
                return (e as List).map((res) {
                  return InlineKeyboardButton((res as Map)).toJson();
                }).toList();
              }).toList()
            : null,
        "resize_keyboard": resize_keyboard,
        "one_time": one_time,
      });
    } catch (e) {
      return ReplyMarkup({
        "@type": "error",
        "error": "${e}",
        "message": "error method ReplyMarkup.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ReplyMarkup.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ReplyMarkup.html).
  bool? get is_personal {
    try {
      return (rawData["is_personal"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ReplyMarkup.html).
  String? get input_field_placeholder {
    try {
      return (rawData["input_field_placeholder"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ReplyMarkup.html).
  List<List<InlineKeyboardButton>> get rows {
    try {
      return (rawData["rows"] as List)
          .map((e) {
            return (e as List)
                .map((res) {
                  return InlineKeyboardButton((res as Map));
                })
                .toList()
                .cast<InlineKeyboardButton>();
          })
          .toList()
          .cast<List<InlineKeyboardButton>>();
    } catch (e) {
      return [
        [
          InlineKeyboardButton({"@type": "error", "error": "${e}", "message": "error at ReplyMarkup rows"})
        ]
      ].cast<List<InlineKeyboardButton>>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ReplyMarkup.html).
  bool? get resize_keyboard {
    try {
      return (rawData["resize_keyboard"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ReplyMarkup.html).
  bool? get one_time {
    try {
      return (rawData["one_time"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LoginUrlInfo.html).
class LoginUrlInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LoginUrlInfo.html).
  LoginUrlInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LoginUrlInfo.html).
  factory LoginUrlInfo.create({
    String special_type = "loginUrlInfoOpen",
    String? url,
    bool? skip_confirm,
    String? domain,
    int? bot_user_id,
    bool? request_write_access,
  }) {
    try {
      return LoginUrlInfo({
        "@type": special_type,
        "url": url,
        "skip_confirm": skip_confirm,
        "domain": domain,
        "bot_user_id": bot_user_id,
        "request_write_access": request_write_access,
      });
    } catch (e) {
      return LoginUrlInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method LoginUrlInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LoginUrlInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LoginUrlInfo.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LoginUrlInfo.html).
  bool? get skip_confirm {
    try {
      return (rawData["skip_confirm"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LoginUrlInfo.html).
  String? get domain {
    try {
      return (rawData["domain"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LoginUrlInfo.html).
  int? get bot_user_id {
    try {
      return (rawData["bot_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LoginUrlInfo.html).
  bool? get request_write_access {
    try {
      return (rawData["request_write_access"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebAppInfo.html).
class WebAppInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebAppInfo.html).
  WebAppInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebAppInfo.html).
  factory WebAppInfo.create({
    String special_type = "webAppInfo",
    int? launch_id,
    String? url,
  }) {
    try {
      return WebAppInfo({
        "@type": special_type,
        "launch_id": launch_id,
        "url": url,
      });
    } catch (e) {
      return WebAppInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method WebAppInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebAppInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebAppInfo.html).
  int? get launch_id {
    try {
      return (rawData["launch_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebAppInfo.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageThreadInfo.html).
class MessageThreadInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageThreadInfo.html).
  MessageThreadInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageThreadInfo.html).
  factory MessageThreadInfo.create({
    String special_type = "messageThreadInfo",
    int? chat_id,
    int? message_thread_id,
    MessageReplyInfo? reply_info,
    int? unread_message_count,
    List<Message>? messages,
    DraftMessage? draft_message,
  }) {
    try {
      return MessageThreadInfo({
        "@type": special_type,
        "chat_id": chat_id,
        "message_thread_id": message_thread_id,
        "reply_info": (reply_info != null) ? reply_info.toJson() : null,
        "unread_message_count": unread_message_count,
        "messages": (messages != null)
            ? messages.map((e) {
                return Message((e as Map)).toJson();
              }).toList()
            : null,
        "draft_message": (draft_message != null) ? draft_message.toJson() : null,
      });
    } catch (e) {
      return MessageThreadInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageThreadInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageThreadInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageThreadInfo.html).
  int? get chat_id {
    try {
      return (rawData["chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageThreadInfo.html).
  int? get message_thread_id {
    try {
      return (rawData["message_thread_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageThreadInfo.html).
  MessageReplyInfo get reply_info {
    try {
      return MessageReplyInfo((rawData["reply_info"] as Map));
    } catch (e) {
      return MessageReplyInfo({"@type": "error", "error": "${e}", "message": "error at MessageThreadInfo reply_info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageThreadInfo.html).
  int? get unread_message_count {
    try {
      return (rawData["unread_message_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageThreadInfo.html).
  List<Message> get messages {
    try {
      return (rawData["messages"] as List)
          .map((e) {
            return Message((e as Map));
          })
          .toList()
          .cast<Message>();
    } catch (e) {
      return [
        Message({"@type": "error", "error": "${e}", "message": "error at MessageThreadInfo messages"})
      ].cast<Message>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageThreadInfo.html).
  DraftMessage get draft_message {
    try {
      return DraftMessage((rawData["draft_message"] as Map));
    } catch (e) {
      return DraftMessage({"@type": "error", "error": "${e}", "message": "error at MessageThreadInfo draft_message"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RichText.html).
class RichText {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RichText.html).
  RichText(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RichText.html).
  factory RichText.create({
    String special_type = "richTextPlain",
    RichText? text,
    String? url,
    bool? is_cached,
    String? email_address,
    String? phone_number,
    Document? document,
    int? width,
    int? height,
    String? anchor_name,
    String? name,
    List<RichText>? texts,
  }) {
    try {
      return RichText({
        "@type": special_type,
        "text": (text != null) ? text.toJson() : null,
        "url": url,
        "is_cached": is_cached,
        "email_address": email_address,
        "phone_number": phone_number,
        "document": (document != null) ? document.toJson() : null,
        "width": width,
        "height": height,
        "anchor_name": anchor_name,
        "name": name,
        "texts": (texts != null)
            ? texts.map((e) {
                return RichText((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return RichText({
        "@type": "error",
        "error": "${e}",
        "message": "error method RichText.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RichText.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RichText.html).
  RichText get text {
    try {
      return RichText((rawData["text"] as Map));
    } catch (e) {
      return RichText({"@type": "error", "error": "${e}", "message": "error at RichText text"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RichText.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RichText.html).
  bool? get is_cached {
    try {
      return (rawData["is_cached"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RichText.html).
  String? get email_address {
    try {
      return (rawData["email_address"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RichText.html).
  String? get phone_number {
    try {
      return (rawData["phone_number"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RichText.html).
  Document get document {
    try {
      return Document((rawData["document"] as Map));
    } catch (e) {
      return Document({"@type": "error", "error": "${e}", "message": "error at RichText document"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RichText.html).
  int? get width {
    try {
      return (rawData["width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RichText.html).
  int? get height {
    try {
      return (rawData["height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RichText.html).
  String? get anchor_name {
    try {
      return (rawData["anchor_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RichText.html).
  String? get name {
    try {
      return (rawData["name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RichText.html).
  List<RichText> get texts {
    try {
      return (rawData["texts"] as List)
          .map((e) {
            return RichText((e as Map));
          })
          .toList()
          .cast<RichText>();
    } catch (e) {
      return [
        RichText({"@type": "error", "error": "${e}", "message": "error at RichText texts"})
      ].cast<RichText>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockCaption.html).
class PageBlockCaption {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockCaption.html).
  PageBlockCaption(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockCaption.html).
  factory PageBlockCaption.create({
    String special_type = "pageBlockCaption",
    RichText? text,
    RichText? credit,
  }) {
    try {
      return PageBlockCaption({
        "@type": special_type,
        "text": (text != null) ? text.toJson() : null,
        "credit": (credit != null) ? credit.toJson() : null,
      });
    } catch (e) {
      return PageBlockCaption({
        "@type": "error",
        "error": "${e}",
        "message": "error method PageBlockCaption.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockCaption.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockCaption.html).
  RichText get text {
    try {
      return RichText((rawData["text"] as Map));
    } catch (e) {
      return RichText({"@type": "error", "error": "${e}", "message": "error at PageBlockCaption text"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockCaption.html).
  RichText get credit {
    try {
      return RichText((rawData["credit"] as Map));
    } catch (e) {
      return RichText({"@type": "error", "error": "${e}", "message": "error at PageBlockCaption credit"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockListItem.html).
class PageBlockListItem {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockListItem.html).
  PageBlockListItem(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockListItem.html).
  factory PageBlockListItem.create({
    String special_type = "pageBlockListItem",
    String? label,
    List<PageBlock>? page_blocks,
  }) {
    try {
      return PageBlockListItem({
        "@type": special_type,
        "label": label,
        "page_blocks": (page_blocks != null)
            ? page_blocks.map((e) {
                return PageBlock((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return PageBlockListItem({
        "@type": "error",
        "error": "${e}",
        "message": "error method PageBlockListItem.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockListItem.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockListItem.html).
  String? get label {
    try {
      return (rawData["label"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockListItem.html).
  List<PageBlock> get page_blocks {
    try {
      return (rawData["page_blocks"] as List)
          .map((e) {
            return PageBlock((e as Map));
          })
          .toList()
          .cast<PageBlock>();
    } catch (e) {
      return [
        PageBlock({"@type": "error", "error": "${e}", "message": "error at PageBlockListItem page_blocks"})
      ].cast<PageBlock>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockHorizontalAlignment.html).
class PageBlockHorizontalAlignment {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockHorizontalAlignment.html).
  PageBlockHorizontalAlignment(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockHorizontalAlignment.html).
  factory PageBlockHorizontalAlignment.create({
    String special_type = "pageBlockHorizontalAlignmentLeft",
  }) {
    try {
      return PageBlockHorizontalAlignment({
        "@type": special_type,
      });
    } catch (e) {
      return PageBlockHorizontalAlignment({
        "@type": "error",
        "error": "${e}",
        "message": "error method PageBlockHorizontalAlignment.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockHorizontalAlignment.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockVerticalAlignment.html).
class PageBlockVerticalAlignment {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockVerticalAlignment.html).
  PageBlockVerticalAlignment(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockVerticalAlignment.html).
  factory PageBlockVerticalAlignment.create({
    String special_type = "pageBlockVerticalAlignmentTop",
  }) {
    try {
      return PageBlockVerticalAlignment({
        "@type": special_type,
      });
    } catch (e) {
      return PageBlockVerticalAlignment({
        "@type": "error",
        "error": "${e}",
        "message": "error method PageBlockVerticalAlignment.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockVerticalAlignment.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockTableCell.html).
class PageBlockTableCell {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockTableCell.html).
  PageBlockTableCell(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockTableCell.html).
  factory PageBlockTableCell.create({
    String special_type = "pageBlockTableCell",
    RichText? text,
    bool? is_header,
    int? colspan,
    int? rowspan,
    PageBlockHorizontalAlignment? align,
    PageBlockVerticalAlignment? valign,
  }) {
    try {
      return PageBlockTableCell({
        "@type": special_type,
        "text": (text != null) ? text.toJson() : null,
        "is_header": is_header,
        "colspan": colspan,
        "rowspan": rowspan,
        "align": (align != null) ? align.toJson() : null,
        "valign": (valign != null) ? valign.toJson() : null,
      });
    } catch (e) {
      return PageBlockTableCell({
        "@type": "error",
        "error": "${e}",
        "message": "error method PageBlockTableCell.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockTableCell.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockTableCell.html).
  RichText get text {
    try {
      return RichText((rawData["text"] as Map));
    } catch (e) {
      return RichText({"@type": "error", "error": "${e}", "message": "error at PageBlockTableCell text"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockTableCell.html).
  bool? get is_header {
    try {
      return (rawData["is_header"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockTableCell.html).
  int? get colspan {
    try {
      return (rawData["colspan"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockTableCell.html).
  int? get rowspan {
    try {
      return (rawData["rowspan"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockTableCell.html).
  PageBlockHorizontalAlignment get align {
    try {
      return PageBlockHorizontalAlignment((rawData["align"] as Map));
    } catch (e) {
      return PageBlockHorizontalAlignment({"@type": "error", "error": "${e}", "message": "error at PageBlockTableCell align"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockTableCell.html).
  PageBlockVerticalAlignment get valign {
    try {
      return PageBlockVerticalAlignment((rawData["valign"] as Map));
    } catch (e) {
      return PageBlockVerticalAlignment({"@type": "error", "error": "${e}", "message": "error at PageBlockTableCell valign"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockRelatedArticle.html).
class PageBlockRelatedArticle {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockRelatedArticle.html).
  PageBlockRelatedArticle(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockRelatedArticle.html).
  factory PageBlockRelatedArticle.create({
    String special_type = "pageBlockRelatedArticle",
    String? url,
    String? title,
    String? description,
    Photo? photo,
    String? author,
    int? publish_date,
  }) {
    try {
      return PageBlockRelatedArticle({
        "@type": special_type,
        "url": url,
        "title": title,
        "description": description,
        "photo": (photo != null) ? photo.toJson() : null,
        "author": author,
        "publish_date": publish_date,
      });
    } catch (e) {
      return PageBlockRelatedArticle({
        "@type": "error",
        "error": "${e}",
        "message": "error method PageBlockRelatedArticle.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockRelatedArticle.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockRelatedArticle.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockRelatedArticle.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockRelatedArticle.html).
  String? get description {
    try {
      return (rawData["description"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockRelatedArticle.html).
  Photo get photo {
    try {
      return Photo((rawData["photo"] as Map));
    } catch (e) {
      return Photo({"@type": "error", "error": "${e}", "message": "error at PageBlockRelatedArticle photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockRelatedArticle.html).
  String? get author {
    try {
      return (rawData["author"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlockRelatedArticle.html).
  int? get publish_date {
    try {
      return (rawData["publish_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
class PageBlock {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  PageBlock(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  factory PageBlock.create({
    String special_type = "pageBlockTitle",
    String? title,
    RichText? subtitle,
    String? author,
    int? publish_date,
    RichText? header,
    RichText? subheader,
    RichText? kicker,
    RichText? text,
    String? language,
    RichText? footer,
    String? name,
    List<PageBlockListItem>? items,
    RichText? credit,
    Animation? animation,
    PageBlockCaption? caption,
    bool? need_autoplay,
    Audio? audio,
    ChatPhotoInfo? photo,
    String? url,
    Video? video,
    bool? is_looped,
    VoiceNote? voice_note,
    PageBlock? cover,
    String? html,
    Photo? poster_photo,
    int? width,
    int? height,
    bool? is_full_width,
    bool? allow_scrolling,
    Photo? author_photo,
    int? date,
    List<PageBlock>? page_blocks,
    String? username,
    List<List<PageBlockTableCell>>? cells,
    bool? is_bordered,
    bool? is_striped,
    bool? is_open,
    List<PageBlockRelatedArticle>? articles,
    Location? location,
    int? zoom,
  }) {
    try {
      return PageBlock({
        "@type": special_type,
        "title": title,
        "subtitle": (subtitle != null) ? subtitle.toJson() : null,
        "author": author,
        "publish_date": publish_date,
        "header": (header != null) ? header.toJson() : null,
        "subheader": (subheader != null) ? subheader.toJson() : null,
        "kicker": (kicker != null) ? kicker.toJson() : null,
        "text": (text != null) ? text.toJson() : null,
        "language": language,
        "footer": (footer != null) ? footer.toJson() : null,
        "name": name,
        "items": (items != null)
            ? items.map((e) {
                return PageBlockListItem((e as Map)).toJson();
              }).toList()
            : null,
        "credit": (credit != null) ? credit.toJson() : null,
        "animation": (animation != null) ? animation.toJson() : null,
        "caption": (caption != null) ? caption.toJson() : null,
        "need_autoplay": need_autoplay,
        "audio": (audio != null) ? audio.toJson() : null,
        "photo": (photo != null) ? photo.toJson() : null,
        "url": url,
        "video": (video != null) ? video.toJson() : null,
        "is_looped": is_looped,
        "voice_note": (voice_note != null) ? voice_note.toJson() : null,
        "cover": (cover != null) ? cover.toJson() : null,
        "html": html,
        "poster_photo": (poster_photo != null) ? poster_photo.toJson() : null,
        "width": width,
        "height": height,
        "is_full_width": is_full_width,
        "allow_scrolling": allow_scrolling,
        "author_photo": (author_photo != null) ? author_photo.toJson() : null,
        "date": date,
        "page_blocks": (page_blocks != null)
            ? page_blocks.map((e) {
                return PageBlock((e as Map)).toJson();
              }).toList()
            : null,
        "username": username,
        "cells": (cells != null)
            ? cells.map((e) {
                return (e as List).map((res) {
                  return PageBlockTableCell((res as Map)).toJson();
                }).toList();
              }).toList()
            : null,
        "is_bordered": is_bordered,
        "is_striped": is_striped,
        "is_open": is_open,
        "articles": (articles != null)
            ? articles.map((e) {
                return PageBlockRelatedArticle((e as Map)).toJson();
              }).toList()
            : null,
        "location": (location != null) ? location.toJson() : null,
        "zoom": zoom,
      });
    } catch (e) {
      return PageBlock({
        "@type": "error",
        "error": "${e}",
        "message": "error method PageBlock.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  RichText get subtitle {
    try {
      return RichText((rawData["subtitle"] as Map));
    } catch (e) {
      return RichText({"@type": "error", "error": "${e}", "message": "error at PageBlock subtitle"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  String? get author {
    try {
      return (rawData["author"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  int? get publish_date {
    try {
      return (rawData["publish_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  RichText get header {
    try {
      return RichText((rawData["header"] as Map));
    } catch (e) {
      return RichText({"@type": "error", "error": "${e}", "message": "error at PageBlock header"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  RichText get subheader {
    try {
      return RichText((rawData["subheader"] as Map));
    } catch (e) {
      return RichText({"@type": "error", "error": "${e}", "message": "error at PageBlock subheader"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  RichText get kicker {
    try {
      return RichText((rawData["kicker"] as Map));
    } catch (e) {
      return RichText({"@type": "error", "error": "${e}", "message": "error at PageBlock kicker"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  RichText get text {
    try {
      return RichText((rawData["text"] as Map));
    } catch (e) {
      return RichText({"@type": "error", "error": "${e}", "message": "error at PageBlock text"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  String? get language {
    try {
      return (rawData["language"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  RichText get footer {
    try {
      return RichText((rawData["footer"] as Map));
    } catch (e) {
      return RichText({"@type": "error", "error": "${e}", "message": "error at PageBlock footer"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  String? get name {
    try {
      return (rawData["name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  List<PageBlockListItem> get items {
    try {
      return (rawData["items"] as List)
          .map((e) {
            return PageBlockListItem((e as Map));
          })
          .toList()
          .cast<PageBlockListItem>();
    } catch (e) {
      return [
        PageBlockListItem({"@type": "error", "error": "${e}", "message": "error at PageBlock items"})
      ].cast<PageBlockListItem>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  RichText get credit {
    try {
      return RichText((rawData["credit"] as Map));
    } catch (e) {
      return RichText({"@type": "error", "error": "${e}", "message": "error at PageBlock credit"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  Animation get animation {
    try {
      return Animation((rawData["animation"] as Map));
    } catch (e) {
      return Animation({"@type": "error", "error": "${e}", "message": "error at PageBlock animation"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  PageBlockCaption get caption {
    try {
      return PageBlockCaption((rawData["caption"] as Map));
    } catch (e) {
      return PageBlockCaption({"@type": "error", "error": "${e}", "message": "error at PageBlock caption"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  bool? get need_autoplay {
    try {
      return (rawData["need_autoplay"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  Audio get audio {
    try {
      return Audio((rawData["audio"] as Map));
    } catch (e) {
      return Audio({"@type": "error", "error": "${e}", "message": "error at PageBlock audio"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  ChatPhotoInfo get photo {
    try {
      return ChatPhotoInfo((rawData["photo"] as Map));
    } catch (e) {
      return ChatPhotoInfo({"@type": "error", "error": "${e}", "message": "error at PageBlock photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  Video get video {
    try {
      return Video((rawData["video"] as Map));
    } catch (e) {
      return Video({"@type": "error", "error": "${e}", "message": "error at PageBlock video"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  bool? get is_looped {
    try {
      return (rawData["is_looped"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  VoiceNote get voice_note {
    try {
      return VoiceNote((rawData["voice_note"] as Map));
    } catch (e) {
      return VoiceNote({"@type": "error", "error": "${e}", "message": "error at PageBlock voice_note"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  PageBlock get cover {
    try {
      return PageBlock((rawData["cover"] as Map));
    } catch (e) {
      return PageBlock({"@type": "error", "error": "${e}", "message": "error at PageBlock cover"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  String? get html {
    try {
      return (rawData["html"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  Photo get poster_photo {
    try {
      return Photo((rawData["poster_photo"] as Map));
    } catch (e) {
      return Photo({"@type": "error", "error": "${e}", "message": "error at PageBlock poster_photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  int? get width {
    try {
      return (rawData["width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  int? get height {
    try {
      return (rawData["height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  bool? get is_full_width {
    try {
      return (rawData["is_full_width"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  bool? get allow_scrolling {
    try {
      return (rawData["allow_scrolling"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  Photo get author_photo {
    try {
      return Photo((rawData["author_photo"] as Map));
    } catch (e) {
      return Photo({"@type": "error", "error": "${e}", "message": "error at PageBlock author_photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  int? get date {
    try {
      return (rawData["date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  List<PageBlock> get page_blocks {
    try {
      return (rawData["page_blocks"] as List)
          .map((e) {
            return PageBlock((e as Map));
          })
          .toList()
          .cast<PageBlock>();
    } catch (e) {
      return [
        PageBlock({"@type": "error", "error": "${e}", "message": "error at PageBlock page_blocks"})
      ].cast<PageBlock>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  String? get username {
    try {
      return (rawData["username"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  List<List<PageBlockTableCell>> get cells {
    try {
      return (rawData["cells"] as List)
          .map((e) {
            return (e as List)
                .map((res) {
                  return PageBlockTableCell((res as Map));
                })
                .toList()
                .cast<PageBlockTableCell>();
          })
          .toList()
          .cast<List<PageBlockTableCell>>();
    } catch (e) {
      return [
        [
          PageBlockTableCell({"@type": "error", "error": "${e}", "message": "error at PageBlock cells"})
        ]
      ].cast<List<PageBlockTableCell>>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  bool? get is_bordered {
    try {
      return (rawData["is_bordered"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  bool? get is_striped {
    try {
      return (rawData["is_striped"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  bool? get is_open {
    try {
      return (rawData["is_open"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  List<PageBlockRelatedArticle> get articles {
    try {
      return (rawData["articles"] as List)
          .map((e) {
            return PageBlockRelatedArticle((e as Map));
          })
          .toList()
          .cast<PageBlockRelatedArticle>();
    } catch (e) {
      return [
        PageBlockRelatedArticle({"@type": "error", "error": "${e}", "message": "error at PageBlock articles"})
      ].cast<PageBlockRelatedArticle>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  Location get location {
    try {
      return Location((rawData["location"] as Map));
    } catch (e) {
      return Location({"@type": "error", "error": "${e}", "message": "error at PageBlock location"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PageBlock.html).
  int? get zoom {
    try {
      return (rawData["zoom"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPageInstantView.html).
class WebPageInstantView {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPageInstantView.html).
  WebPageInstantView(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPageInstantView.html).
  factory WebPageInstantView.create({
    String special_type = "webPageInstantView",
    List<PageBlock>? page_blocks,
    int? view_count,
    int? version,
    bool? is_rtl,
    bool? is_full,
    InternalLinkType? feedback_link,
  }) {
    try {
      return WebPageInstantView({
        "@type": special_type,
        "page_blocks": (page_blocks != null)
            ? page_blocks.map((e) {
                return PageBlock((e as Map)).toJson();
              }).toList()
            : null,
        "view_count": view_count,
        "version": version,
        "is_rtl": is_rtl,
        "is_full": is_full,
        "feedback_link": (feedback_link != null) ? feedback_link.toJson() : null,
      });
    } catch (e) {
      return WebPageInstantView({
        "@type": "error",
        "error": "${e}",
        "message": "error method WebPageInstantView.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPageInstantView.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPageInstantView.html).
  List<PageBlock> get page_blocks {
    try {
      return (rawData["page_blocks"] as List)
          .map((e) {
            return PageBlock((e as Map));
          })
          .toList()
          .cast<PageBlock>();
    } catch (e) {
      return [
        PageBlock({"@type": "error", "error": "${e}", "message": "error at WebPageInstantView page_blocks"})
      ].cast<PageBlock>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPageInstantView.html).
  int? get view_count {
    try {
      return (rawData["view_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPageInstantView.html).
  int? get version {
    try {
      return (rawData["version"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPageInstantView.html).
  bool? get is_rtl {
    try {
      return (rawData["is_rtl"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPageInstantView.html).
  bool? get is_full {
    try {
      return (rawData["is_full"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPageInstantView.html).
  InternalLinkType get feedback_link {
    try {
      return InternalLinkType((rawData["feedback_link"] as Map));
    } catch (e) {
      return InternalLinkType({"@type": "error", "error": "${e}", "message": "error at WebPageInstantView feedback_link"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
class WebPage {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  WebPage(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  factory WebPage.create({
    String special_type = "webPage",
    String? url,
    String? display_url,
    String? type,
    String? site_name,
    String? title,
    FormattedText? description,
    Photo? photo,
    String? embed_url,
    String? embed_type,
    int? embed_width,
    int? embed_height,
    int? duration,
    String? author,
    Animation? animation,
    Audio? audio,
    Document? document,
    Sticker? sticker,
    Video? video,
    VideoNote? video_note,
    VoiceNote? voice_note,
    int? instant_view_version,
  }) {
    try {
      return WebPage({
        "@type": special_type,
        "url": url,
        "display_url": display_url,
        "type": type,
        "site_name": site_name,
        "title": title,
        "description": (description != null) ? description.toJson() : null,
        "photo": (photo != null) ? photo.toJson() : null,
        "embed_url": embed_url,
        "embed_type": embed_type,
        "embed_width": embed_width,
        "embed_height": embed_height,
        "duration": duration,
        "author": author,
        "animation": (animation != null) ? animation.toJson() : null,
        "audio": (audio != null) ? audio.toJson() : null,
        "document": (document != null) ? document.toJson() : null,
        "sticker": (sticker != null) ? sticker.toJson() : null,
        "video": (video != null) ? video.toJson() : null,
        "video_note": (video_note != null) ? video_note.toJson() : null,
        "voice_note": (voice_note != null) ? voice_note.toJson() : null,
        "instant_view_version": instant_view_version,
      });
    } catch (e) {
      return WebPage({
        "@type": "error",
        "error": "${e}",
        "message": "error method WebPage.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  String? get display_url {
    try {
      return (rawData["display_url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  String? get type {
    try {
      return (rawData["type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  String? get site_name {
    try {
      return (rawData["site_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  FormattedText get description {
    try {
      return FormattedText((rawData["description"] as Map));
    } catch (e) {
      return FormattedText({"@type": "error", "error": "${e}", "message": "error at WebPage description"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  Photo get photo {
    try {
      return Photo((rawData["photo"] as Map));
    } catch (e) {
      return Photo({"@type": "error", "error": "${e}", "message": "error at WebPage photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  String? get embed_url {
    try {
      return (rawData["embed_url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  String? get embed_type {
    try {
      return (rawData["embed_type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  int? get embed_width {
    try {
      return (rawData["embed_width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  int? get embed_height {
    try {
      return (rawData["embed_height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  int? get duration {
    try {
      return (rawData["duration"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  String? get author {
    try {
      return (rawData["author"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  Animation get animation {
    try {
      return Animation((rawData["animation"] as Map));
    } catch (e) {
      return Animation({"@type": "error", "error": "${e}", "message": "error at WebPage animation"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  Audio get audio {
    try {
      return Audio((rawData["audio"] as Map));
    } catch (e) {
      return Audio({"@type": "error", "error": "${e}", "message": "error at WebPage audio"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  Document get document {
    try {
      return Document((rawData["document"] as Map));
    } catch (e) {
      return Document({"@type": "error", "error": "${e}", "message": "error at WebPage document"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  Sticker get sticker {
    try {
      return Sticker((rawData["sticker"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at WebPage sticker"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  Video get video {
    try {
      return Video((rawData["video"] as Map));
    } catch (e) {
      return Video({"@type": "error", "error": "${e}", "message": "error at WebPage video"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  VideoNote get video_note {
    try {
      return VideoNote((rawData["video_note"] as Map));
    } catch (e) {
      return VideoNote({"@type": "error", "error": "${e}", "message": "error at WebPage video_note"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  VoiceNote get voice_note {
    try {
      return VoiceNote((rawData["voice_note"] as Map));
    } catch (e) {
      return VoiceNote({"@type": "error", "error": "${e}", "message": "error at WebPage voice_note"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1WebPage.html).
  int? get instant_view_version {
    try {
      return (rawData["instant_view_version"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CountryInfo.html).
class CountryInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CountryInfo.html).
  CountryInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CountryInfo.html).
  factory CountryInfo.create({
    String special_type = "countryInfo",
    String? country_code,
    String? name,
    String? english_name,
    bool? is_hidden,
    List<String>? calling_codes,
  }) {
    try {
      return CountryInfo({
        "@type": special_type,
        "country_code": country_code,
        "name": name,
        "english_name": english_name,
        "is_hidden": is_hidden,
        "calling_codes": calling_codes,
      });
    } catch (e) {
      return CountryInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method CountryInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CountryInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CountryInfo.html).
  String? get country_code {
    try {
      return (rawData["country_code"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CountryInfo.html).
  String? get name {
    try {
      return (rawData["name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CountryInfo.html).
  String? get english_name {
    try {
      return (rawData["english_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CountryInfo.html).
  bool? get is_hidden {
    try {
      return (rawData["is_hidden"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CountryInfo.html).
  List<String> get calling_codes {
    try {
      return (rawData["calling_codes"] as List).cast<String>();
    } catch (e) {
      return [].cast<String>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Countries.html).
class Countries {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Countries.html).
  Countries(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Countries.html).
  factory Countries.create({
    String special_type = "countries",
    List<CountryInfo>? countries,
  }) {
    try {
      return Countries({
        "@type": special_type,
        "countries": (countries != null)
            ? countries.map((e) {
                return CountryInfo((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return Countries({
        "@type": "error",
        "error": "${e}",
        "message": "error method Countries.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Countries.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Countries.html).
  List<CountryInfo> get countries {
    try {
      return (rawData["countries"] as List)
          .map((e) {
            return CountryInfo((e as Map));
          })
          .toList()
          .cast<CountryInfo>();
    } catch (e) {
      return [
        CountryInfo({"@type": "error", "error": "${e}", "message": "error at Countries countries"})
      ].cast<CountryInfo>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhoneNumberInfo.html).
class PhoneNumberInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhoneNumberInfo.html).
  PhoneNumberInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhoneNumberInfo.html).
  factory PhoneNumberInfo.create({
    String special_type = "phoneNumberInfo",
    CountryInfo? country,
    String? country_calling_code,
    String? formatted_phone_number,
  }) {
    try {
      return PhoneNumberInfo({
        "@type": special_type,
        "country": (country != null) ? country.toJson() : null,
        "country_calling_code": country_calling_code,
        "formatted_phone_number": formatted_phone_number,
      });
    } catch (e) {
      return PhoneNumberInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method PhoneNumberInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhoneNumberInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhoneNumberInfo.html).
  CountryInfo get country {
    try {
      return CountryInfo((rawData["country"] as Map));
    } catch (e) {
      return CountryInfo({"@type": "error", "error": "${e}", "message": "error at PhoneNumberInfo country"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhoneNumberInfo.html).
  String? get country_calling_code {
    try {
      return (rawData["country_calling_code"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhoneNumberInfo.html).
  String? get formatted_phone_number {
    try {
      return (rawData["formatted_phone_number"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BankCardActionOpenUrl.html).
class BankCardActionOpenUrl {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BankCardActionOpenUrl.html).
  BankCardActionOpenUrl(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BankCardActionOpenUrl.html).
  factory BankCardActionOpenUrl.create({
    String special_type = "bankCardActionOpenUrl",
    String? text,
    String? url,
  }) {
    try {
      return BankCardActionOpenUrl({
        "@type": special_type,
        "text": text,
        "url": url,
      });
    } catch (e) {
      return BankCardActionOpenUrl({
        "@type": "error",
        "error": "${e}",
        "message": "error method BankCardActionOpenUrl.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BankCardActionOpenUrl.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BankCardActionOpenUrl.html).
  String? get text {
    try {
      return (rawData["text"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BankCardActionOpenUrl.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BankCardInfo.html).
class BankCardInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BankCardInfo.html).
  BankCardInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BankCardInfo.html).
  factory BankCardInfo.create({
    String special_type = "bankCardInfo",
    String? title,
    List<BankCardActionOpenUrl>? actions,
  }) {
    try {
      return BankCardInfo({
        "@type": special_type,
        "title": title,
        "actions": (actions != null)
            ? actions.map((e) {
                return BankCardActionOpenUrl((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return BankCardInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method BankCardInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BankCardInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BankCardInfo.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BankCardInfo.html).
  List<BankCardActionOpenUrl> get actions {
    try {
      return (rawData["actions"] as List)
          .map((e) {
            return BankCardActionOpenUrl((e as Map));
          })
          .toList()
          .cast<BankCardActionOpenUrl>();
    } catch (e) {
      return [
        BankCardActionOpenUrl({"@type": "error", "error": "${e}", "message": "error at BankCardInfo actions"})
      ].cast<BankCardActionOpenUrl>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Address.html).
class Address {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Address.html).
  Address(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Address.html).
  factory Address.create({
    String special_type = "address",
    String? country_code,
    String? state,
    String? city,
    String? street_line1,
    String? street_line2,
    String? postal_code,
  }) {
    try {
      return Address({
        "@type": special_type,
        "country_code": country_code,
        "state": state,
        "city": city,
        "street_line1": street_line1,
        "street_line2": street_line2,
        "postal_code": postal_code,
      });
    } catch (e) {
      return Address({
        "@type": "error",
        "error": "${e}",
        "message": "error method Address.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Address.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Address.html).
  String? get country_code {
    try {
      return (rawData["country_code"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Address.html).
  String? get state {
    try {
      return (rawData["state"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Address.html).
  String? get city {
    try {
      return (rawData["city"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Address.html).
  String? get street_line1 {
    try {
      return (rawData["street_line1"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Address.html).
  String? get street_line2 {
    try {
      return (rawData["street_line2"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Address.html).
  String? get postal_code {
    try {
      return (rawData["postal_code"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeParameters.html).
class ThemeParameters {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeParameters.html).
  ThemeParameters(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeParameters.html).
  factory ThemeParameters.create({
    String special_type = "themeParameters",
    int? background_color,
    int? secondary_background_color,
    int? text_color,
    int? hint_color,
    int? link_color,
    int? button_color,
    int? button_text_color,
  }) {
    try {
      return ThemeParameters({
        "@type": special_type,
        "background_color": background_color,
        "secondary_background_color": secondary_background_color,
        "text_color": text_color,
        "hint_color": hint_color,
        "link_color": link_color,
        "button_color": button_color,
        "button_text_color": button_text_color,
      });
    } catch (e) {
      return ThemeParameters({
        "@type": "error",
        "error": "${e}",
        "message": "error method ThemeParameters.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeParameters.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeParameters.html).
  int? get background_color {
    try {
      return (rawData["background_color"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeParameters.html).
  int? get secondary_background_color {
    try {
      return (rawData["secondary_background_color"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeParameters.html).
  int? get text_color {
    try {
      return (rawData["text_color"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeParameters.html).
  int? get hint_color {
    try {
      return (rawData["hint_color"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeParameters.html).
  int? get link_color {
    try {
      return (rawData["link_color"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeParameters.html).
  int? get button_color {
    try {
      return (rawData["button_color"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeParameters.html).
  int? get button_text_color {
    try {
      return (rawData["button_text_color"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LabeledPricePart.html).
class LabeledPricePart {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LabeledPricePart.html).
  LabeledPricePart(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LabeledPricePart.html).
  factory LabeledPricePart.create({
    String special_type = "labeledPricePart",
    String? label,
    int? amount,
  }) {
    try {
      return LabeledPricePart({
        "@type": special_type,
        "label": label,
        "amount": amount,
      });
    } catch (e) {
      return LabeledPricePart({
        "@type": "error",
        "error": "${e}",
        "message": "error method LabeledPricePart.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LabeledPricePart.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LabeledPricePart.html).
  String? get label {
    try {
      return (rawData["label"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LabeledPricePart.html).
  int? get amount {
    try {
      return (rawData["amount"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Invoice.html).
class Invoice {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Invoice.html).
  Invoice(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Invoice.html).
  factory Invoice.create({
    String special_type = "invoice",
    String? currency,
    List<LabeledPricePart>? price_parts,
    int? max_tip_amount,
    List<int>? suggested_tip_amounts,
    String? recurring_payment_terms_of_service_url,
    bool? is_test,
    bool? need_name,
    bool? need_phone_number,
    bool? need_email_address,
    bool? need_shipping_address,
    bool? send_phone_number_to_provider,
    bool? send_email_address_to_provider,
    bool? is_flexible,
  }) {
    try {
      return Invoice({
        "@type": special_type,
        "currency": currency,
        "price_parts": (price_parts != null)
            ? price_parts.map((e) {
                return LabeledPricePart((e as Map)).toJson();
              }).toList()
            : null,
        "max_tip_amount": max_tip_amount,
        "suggested_tip_amounts": suggested_tip_amounts,
        "recurring_payment_terms_of_service_url": recurring_payment_terms_of_service_url,
        "is_test": is_test,
        "need_name": need_name,
        "need_phone_number": need_phone_number,
        "need_email_address": need_email_address,
        "need_shipping_address": need_shipping_address,
        "send_phone_number_to_provider": send_phone_number_to_provider,
        "send_email_address_to_provider": send_email_address_to_provider,
        "is_flexible": is_flexible,
      });
    } catch (e) {
      return Invoice({
        "@type": "error",
        "error": "${e}",
        "message": "error method Invoice.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Invoice.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Invoice.html).
  String? get currency {
    try {
      return (rawData["currency"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Invoice.html).
  List<LabeledPricePart> get price_parts {
    try {
      return (rawData["price_parts"] as List)
          .map((e) {
            return LabeledPricePart((e as Map));
          })
          .toList()
          .cast<LabeledPricePart>();
    } catch (e) {
      return [
        LabeledPricePart({"@type": "error", "error": "${e}", "message": "error at Invoice price_parts"})
      ].cast<LabeledPricePart>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Invoice.html).
  int? get max_tip_amount {
    try {
      return (rawData["max_tip_amount"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Invoice.html).
  List<int> get suggested_tip_amounts {
    try {
      return (rawData["suggested_tip_amounts"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Invoice.html).
  String? get recurring_payment_terms_of_service_url {
    try {
      return (rawData["recurring_payment_terms_of_service_url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Invoice.html).
  bool? get is_test {
    try {
      return (rawData["is_test"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Invoice.html).
  bool? get need_name {
    try {
      return (rawData["need_name"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Invoice.html).
  bool? get need_phone_number {
    try {
      return (rawData["need_phone_number"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Invoice.html).
  bool? get need_email_address {
    try {
      return (rawData["need_email_address"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Invoice.html).
  bool? get need_shipping_address {
    try {
      return (rawData["need_shipping_address"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Invoice.html).
  bool? get send_phone_number_to_provider {
    try {
      return (rawData["send_phone_number_to_provider"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Invoice.html).
  bool? get send_email_address_to_provider {
    try {
      return (rawData["send_email_address_to_provider"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Invoice.html).
  bool? get is_flexible {
    try {
      return (rawData["is_flexible"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1OrderInfo.html).
class OrderInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1OrderInfo.html).
  OrderInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1OrderInfo.html).
  factory OrderInfo.create({
    String special_type = "orderInfo",
    String? name,
    String? phone_number,
    String? email_address,
    Address? shipping_address,
  }) {
    try {
      return OrderInfo({
        "@type": special_type,
        "name": name,
        "phone_number": phone_number,
        "email_address": email_address,
        "shipping_address": (shipping_address != null) ? shipping_address.toJson() : null,
      });
    } catch (e) {
      return OrderInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method OrderInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1OrderInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1OrderInfo.html).
  String? get name {
    try {
      return (rawData["name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1OrderInfo.html).
  String? get phone_number {
    try {
      return (rawData["phone_number"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1OrderInfo.html).
  String? get email_address {
    try {
      return (rawData["email_address"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1OrderInfo.html).
  Address get shipping_address {
    try {
      return Address((rawData["shipping_address"] as Map));
    } catch (e) {
      return Address({"@type": "error", "error": "${e}", "message": "error at OrderInfo shipping_address"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ShippingOption.html).
class ShippingOption {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ShippingOption.html).
  ShippingOption(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ShippingOption.html).
  factory ShippingOption.create({
    String special_type = "shippingOption",
    String? id,
    String? title,
    List<LabeledPricePart>? price_parts,
  }) {
    try {
      return ShippingOption({
        "@type": special_type,
        "id": id,
        "title": title,
        "price_parts": (price_parts != null)
            ? price_parts.map((e) {
                return LabeledPricePart((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return ShippingOption({
        "@type": "error",
        "error": "${e}",
        "message": "error method ShippingOption.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ShippingOption.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ShippingOption.html).
  String? get id {
    try {
      return (rawData["id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ShippingOption.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ShippingOption.html).
  List<LabeledPricePart> get price_parts {
    try {
      return (rawData["price_parts"] as List)
          .map((e) {
            return LabeledPricePart((e as Map));
          })
          .toList()
          .cast<LabeledPricePart>();
    } catch (e) {
      return [
        LabeledPricePart({"@type": "error", "error": "${e}", "message": "error at ShippingOption price_parts"})
      ].cast<LabeledPricePart>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SavedCredentials.html).
class SavedCredentials {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SavedCredentials.html).
  SavedCredentials(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SavedCredentials.html).
  factory SavedCredentials.create({
    String special_type = "savedCredentials",
    String? id,
    String? title,
  }) {
    try {
      return SavedCredentials({
        "@type": special_type,
        "id": id,
        "title": title,
      });
    } catch (e) {
      return SavedCredentials({
        "@type": "error",
        "error": "${e}",
        "message": "error method SavedCredentials.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SavedCredentials.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SavedCredentials.html).
  String? get id {
    try {
      return (rawData["id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SavedCredentials.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputCredentials.html).
class InputCredentials {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputCredentials.html).
  InputCredentials(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputCredentials.html).
  factory InputCredentials.create({
    String special_type = "inputCredentialsSaved",
    String? saved_credentials_id,
    String? data,
    bool? allow_save,
  }) {
    try {
      return InputCredentials({
        "@type": special_type,
        "saved_credentials_id": saved_credentials_id,
        "data": data,
        "allow_save": allow_save,
      });
    } catch (e) {
      return InputCredentials({
        "@type": "error",
        "error": "${e}",
        "message": "error method InputCredentials.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputCredentials.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputCredentials.html).
  String? get saved_credentials_id {
    try {
      return (rawData["saved_credentials_id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputCredentials.html).
  String? get data {
    try {
      return (rawData["data"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputCredentials.html).
  bool? get allow_save {
    try {
      return (rawData["allow_save"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentProvider.html).
class PaymentProvider {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentProvider.html).
  PaymentProvider(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentProvider.html).
  factory PaymentProvider.create({
    String special_type = "paymentProviderSmartGlocal",
    String? public_token,
    String? publishable_key,
    bool? need_country,
    bool? need_postal_code,
    bool? need_cardholder_name,
    String? url,
  }) {
    try {
      return PaymentProvider({
        "@type": special_type,
        "public_token": public_token,
        "publishable_key": publishable_key,
        "need_country": need_country,
        "need_postal_code": need_postal_code,
        "need_cardholder_name": need_cardholder_name,
        "url": url,
      });
    } catch (e) {
      return PaymentProvider({
        "@type": "error",
        "error": "${e}",
        "message": "error method PaymentProvider.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentProvider.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentProvider.html).
  String? get public_token {
    try {
      return (rawData["public_token"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentProvider.html).
  String? get publishable_key {
    try {
      return (rawData["publishable_key"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentProvider.html).
  bool? get need_country {
    try {
      return (rawData["need_country"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentProvider.html).
  bool? get need_postal_code {
    try {
      return (rawData["need_postal_code"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentProvider.html).
  bool? get need_cardholder_name {
    try {
      return (rawData["need_cardholder_name"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentProvider.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentOption.html).
class PaymentOption {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentOption.html).
  PaymentOption(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentOption.html).
  factory PaymentOption.create({
    String special_type = "paymentOption",
    String? title,
    String? url,
  }) {
    try {
      return PaymentOption({
        "@type": special_type,
        "title": title,
        "url": url,
      });
    } catch (e) {
      return PaymentOption({
        "@type": "error",
        "error": "${e}",
        "message": "error method PaymentOption.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentOption.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentOption.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentOption.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentForm.html).
class PaymentForm {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentForm.html).
  PaymentForm(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentForm.html).
  factory PaymentForm.create({
    String special_type = "paymentForm",
    int? id,
    Invoice? invoice,
    int? seller_bot_user_id,
    int? payment_provider_user_id,
    PaymentProvider? payment_provider,
    List<PaymentOption>? additional_payment_options,
    OrderInfo? saved_order_info,
    List<SavedCredentials>? saved_credentials,
    bool? can_save_credentials,
    bool? need_password,
    String? product_title,
    FormattedText? product_description,
    Photo? product_photo,
  }) {
    try {
      return PaymentForm({
        "@type": special_type,
        "id": id,
        "invoice": (invoice != null) ? invoice.toJson() : null,
        "seller_bot_user_id": seller_bot_user_id,
        "payment_provider_user_id": payment_provider_user_id,
        "payment_provider": (payment_provider != null) ? payment_provider.toJson() : null,
        "additional_payment_options": (additional_payment_options != null)
            ? additional_payment_options.map((e) {
                return PaymentOption((e as Map)).toJson();
              }).toList()
            : null,
        "saved_order_info": (saved_order_info != null) ? saved_order_info.toJson() : null,
        "saved_credentials": (saved_credentials != null)
            ? saved_credentials.map((e) {
                return SavedCredentials((e as Map)).toJson();
              }).toList()
            : null,
        "can_save_credentials": can_save_credentials,
        "need_password": need_password,
        "product_title": product_title,
        "product_description": (product_description != null) ? product_description.toJson() : null,
        "product_photo": (product_photo != null) ? product_photo.toJson() : null,
      });
    } catch (e) {
      return PaymentForm({
        "@type": "error",
        "error": "${e}",
        "message": "error method PaymentForm.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentForm.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentForm.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentForm.html).
  Invoice get invoice {
    try {
      return Invoice((rawData["invoice"] as Map));
    } catch (e) {
      return Invoice({"@type": "error", "error": "${e}", "message": "error at PaymentForm invoice"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentForm.html).
  int? get seller_bot_user_id {
    try {
      return (rawData["seller_bot_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentForm.html).
  int? get payment_provider_user_id {
    try {
      return (rawData["payment_provider_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentForm.html).
  PaymentProvider get payment_provider {
    try {
      return PaymentProvider((rawData["payment_provider"] as Map));
    } catch (e) {
      return PaymentProvider({"@type": "error", "error": "${e}", "message": "error at PaymentForm payment_provider"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentForm.html).
  List<PaymentOption> get additional_payment_options {
    try {
      return (rawData["additional_payment_options"] as List)
          .map((e) {
            return PaymentOption((e as Map));
          })
          .toList()
          .cast<PaymentOption>();
    } catch (e) {
      return [
        PaymentOption({"@type": "error", "error": "${e}", "message": "error at PaymentForm additional_payment_options"})
      ].cast<PaymentOption>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentForm.html).
  OrderInfo get saved_order_info {
    try {
      return OrderInfo((rawData["saved_order_info"] as Map));
    } catch (e) {
      return OrderInfo({"@type": "error", "error": "${e}", "message": "error at PaymentForm saved_order_info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentForm.html).
  List<SavedCredentials> get saved_credentials {
    try {
      return (rawData["saved_credentials"] as List)
          .map((e) {
            return SavedCredentials((e as Map));
          })
          .toList()
          .cast<SavedCredentials>();
    } catch (e) {
      return [
        SavedCredentials({"@type": "error", "error": "${e}", "message": "error at PaymentForm saved_credentials"})
      ].cast<SavedCredentials>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentForm.html).
  bool? get can_save_credentials {
    try {
      return (rawData["can_save_credentials"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentForm.html).
  bool? get need_password {
    try {
      return (rawData["need_password"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentForm.html).
  String? get product_title {
    try {
      return (rawData["product_title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentForm.html).
  FormattedText get product_description {
    try {
      return FormattedText((rawData["product_description"] as Map));
    } catch (e) {
      return FormattedText({"@type": "error", "error": "${e}", "message": "error at PaymentForm product_description"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentForm.html).
  Photo get product_photo {
    try {
      return Photo((rawData["product_photo"] as Map));
    } catch (e) {
      return Photo({"@type": "error", "error": "${e}", "message": "error at PaymentForm product_photo"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ValidatedOrderInfo.html).
class ValidatedOrderInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ValidatedOrderInfo.html).
  ValidatedOrderInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ValidatedOrderInfo.html).
  factory ValidatedOrderInfo.create({
    String special_type = "validatedOrderInfo",
    String? order_info_id,
    List<ShippingOption>? shipping_options,
  }) {
    try {
      return ValidatedOrderInfo({
        "@type": special_type,
        "order_info_id": order_info_id,
        "shipping_options": (shipping_options != null)
            ? shipping_options.map((e) {
                return ShippingOption((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return ValidatedOrderInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method ValidatedOrderInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ValidatedOrderInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ValidatedOrderInfo.html).
  String? get order_info_id {
    try {
      return (rawData["order_info_id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ValidatedOrderInfo.html).
  List<ShippingOption> get shipping_options {
    try {
      return (rawData["shipping_options"] as List)
          .map((e) {
            return ShippingOption((e as Map));
          })
          .toList()
          .cast<ShippingOption>();
    } catch (e) {
      return [
        ShippingOption({"@type": "error", "error": "${e}", "message": "error at ValidatedOrderInfo shipping_options"})
      ].cast<ShippingOption>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentResult.html).
class PaymentResult {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentResult.html).
  PaymentResult(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentResult.html).
  factory PaymentResult.create({
    String special_type = "paymentResult",
    bool? success,
    String? verification_url,
  }) {
    try {
      return PaymentResult({
        "@type": special_type,
        "success": success,
        "verification_url": verification_url,
      });
    } catch (e) {
      return PaymentResult({
        "@type": "error",
        "error": "${e}",
        "message": "error method PaymentResult.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentResult.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentResult.html).
  bool? get success {
    try {
      return (rawData["success"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentResult.html).
  String? get verification_url {
    try {
      return (rawData["verification_url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentReceipt.html).
class PaymentReceipt {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentReceipt.html).
  PaymentReceipt(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentReceipt.html).
  factory PaymentReceipt.create({
    String special_type = "paymentReceipt",
    String? title,
    FormattedText? description,
    Photo? photo,
    int? date,
    int? seller_bot_user_id,
    int? payment_provider_user_id,
    Invoice? invoice,
    OrderInfo? order_info,
    ShippingOption? shipping_option,
    String? credentials_title,
    int? tip_amount,
  }) {
    try {
      return PaymentReceipt({
        "@type": special_type,
        "title": title,
        "description": (description != null) ? description.toJson() : null,
        "photo": (photo != null) ? photo.toJson() : null,
        "date": date,
        "seller_bot_user_id": seller_bot_user_id,
        "payment_provider_user_id": payment_provider_user_id,
        "invoice": (invoice != null) ? invoice.toJson() : null,
        "order_info": (order_info != null) ? order_info.toJson() : null,
        "shipping_option": (shipping_option != null) ? shipping_option.toJson() : null,
        "credentials_title": credentials_title,
        "tip_amount": tip_amount,
      });
    } catch (e) {
      return PaymentReceipt({
        "@type": "error",
        "error": "${e}",
        "message": "error method PaymentReceipt.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentReceipt.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentReceipt.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentReceipt.html).
  FormattedText get description {
    try {
      return FormattedText((rawData["description"] as Map));
    } catch (e) {
      return FormattedText({"@type": "error", "error": "${e}", "message": "error at PaymentReceipt description"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentReceipt.html).
  Photo get photo {
    try {
      return Photo((rawData["photo"] as Map));
    } catch (e) {
      return Photo({"@type": "error", "error": "${e}", "message": "error at PaymentReceipt photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentReceipt.html).
  int? get date {
    try {
      return (rawData["date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentReceipt.html).
  int? get seller_bot_user_id {
    try {
      return (rawData["seller_bot_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentReceipt.html).
  int? get payment_provider_user_id {
    try {
      return (rawData["payment_provider_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentReceipt.html).
  Invoice get invoice {
    try {
      return Invoice((rawData["invoice"] as Map));
    } catch (e) {
      return Invoice({"@type": "error", "error": "${e}", "message": "error at PaymentReceipt invoice"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentReceipt.html).
  OrderInfo get order_info {
    try {
      return OrderInfo((rawData["order_info"] as Map));
    } catch (e) {
      return OrderInfo({"@type": "error", "error": "${e}", "message": "error at PaymentReceipt order_info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentReceipt.html).
  ShippingOption get shipping_option {
    try {
      return ShippingOption((rawData["shipping_option"] as Map));
    } catch (e) {
      return ShippingOption({"@type": "error", "error": "${e}", "message": "error at PaymentReceipt shipping_option"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentReceipt.html).
  String? get credentials_title {
    try {
      return (rawData["credentials_title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PaymentReceipt.html).
  int? get tip_amount {
    try {
      return (rawData["tip_amount"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInvoice.html).
class InputInvoice {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInvoice.html).
  InputInvoice(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInvoice.html).
  factory InputInvoice.create({
    String special_type = "inputInvoiceMessage",
    int? chat_id,
    int? message_id,
    String? name,
  }) {
    try {
      return InputInvoice({
        "@type": special_type,
        "chat_id": chat_id,
        "message_id": message_id,
        "name": name,
      });
    } catch (e) {
      return InputInvoice({
        "@type": "error",
        "error": "${e}",
        "message": "error method InputInvoice.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInvoice.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInvoice.html).
  int? get chat_id {
    try {
      return (rawData["chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInvoice.html).
  int? get message_id {
    try {
      return (rawData["message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInvoice.html).
  String? get name {
    try {
      return (rawData["name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageExtendedMedia.html).
class MessageExtendedMedia {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageExtendedMedia.html).
  MessageExtendedMedia(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageExtendedMedia.html).
  factory MessageExtendedMedia.create({
    String special_type = "messageExtendedMediaPreview",
    int? width,
    int? height,
    int? duration,
    Minithumbnail? minithumbnail,
    FormattedText? caption,
    Photo? photo,
    Video? video,
  }) {
    try {
      return MessageExtendedMedia({
        "@type": special_type,
        "width": width,
        "height": height,
        "duration": duration,
        "minithumbnail": (minithumbnail != null) ? minithumbnail.toJson() : null,
        "caption": (caption != null) ? caption.toJson() : null,
        "photo": (photo != null) ? photo.toJson() : null,
        "video": (video != null) ? video.toJson() : null,
      });
    } catch (e) {
      return MessageExtendedMedia({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageExtendedMedia.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageExtendedMedia.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageExtendedMedia.html).
  int? get width {
    try {
      return (rawData["width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageExtendedMedia.html).
  int? get height {
    try {
      return (rawData["height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageExtendedMedia.html).
  int? get duration {
    try {
      return (rawData["duration"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageExtendedMedia.html).
  Minithumbnail get minithumbnail {
    try {
      return Minithumbnail((rawData["minithumbnail"] as Map));
    } catch (e) {
      return Minithumbnail({"@type": "error", "error": "${e}", "message": "error at MessageExtendedMedia minithumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageExtendedMedia.html).
  FormattedText get caption {
    try {
      return FormattedText((rawData["caption"] as Map));
    } catch (e) {
      return FormattedText({"@type": "error", "error": "${e}", "message": "error at MessageExtendedMedia caption"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageExtendedMedia.html).
  Photo get photo {
    try {
      return Photo((rawData["photo"] as Map));
    } catch (e) {
      return Photo({"@type": "error", "error": "${e}", "message": "error at MessageExtendedMedia photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageExtendedMedia.html).
  Video get video {
    try {
      return Video((rawData["video"] as Map));
    } catch (e) {
      return Video({"@type": "error", "error": "${e}", "message": "error at MessageExtendedMedia video"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DatedFile.html).
class DatedFile {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DatedFile.html).
  DatedFile(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DatedFile.html).
  factory DatedFile.create({
    String special_type = "datedFile",
    File? file,
    int? date,
  }) {
    try {
      return DatedFile({
        "@type": special_type,
        "file": (file != null) ? file.toJson() : null,
        "date": date,
      });
    } catch (e) {
      return DatedFile({
        "@type": "error",
        "error": "${e}",
        "message": "error method DatedFile.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DatedFile.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DatedFile.html).
  File get file {
    try {
      return File((rawData["file"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at DatedFile file"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DatedFile.html).
  int? get date {
    try {
      return (rawData["date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementType.html).
class PassportElementType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementType.html).
  PassportElementType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementType.html).
  factory PassportElementType.create({
    String special_type = "passportElementTypePersonalDetails",
  }) {
    try {
      return PassportElementType({
        "@type": special_type,
      });
    } catch (e) {
      return PassportElementType({
        "@type": "error",
        "error": "${e}",
        "message": "error method PassportElementType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Date.html).
class Date {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Date.html).
  Date(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Date.html).
  factory Date.create({
    String special_type = "date",
    int? day,
    int? month,
    int? year,
  }) {
    try {
      return Date({
        "@type": special_type,
        "day": day,
        "month": month,
        "year": year,
      });
    } catch (e) {
      return Date({
        "@type": "error",
        "error": "${e}",
        "message": "error method Date.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Date.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Date.html).
  int? get day {
    try {
      return (rawData["day"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Date.html).
  int? get month {
    try {
      return (rawData["month"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Date.html).
  int? get year {
    try {
      return (rawData["year"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDetails.html).
class PersonalDetails {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDetails.html).
  PersonalDetails(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDetails.html).
  factory PersonalDetails.create({
    String special_type = "personalDetails",
    String? first_name,
    String? middle_name,
    String? last_name,
    String? native_first_name,
    String? native_middle_name,
    String? native_last_name,
    Date? birthdate,
    String? gender,
    String? country_code,
    String? residence_country_code,
  }) {
    try {
      return PersonalDetails({
        "@type": special_type,
        "first_name": first_name,
        "middle_name": middle_name,
        "last_name": last_name,
        "native_first_name": native_first_name,
        "native_middle_name": native_middle_name,
        "native_last_name": native_last_name,
        "birthdate": (birthdate != null) ? birthdate.toJson() : null,
        "gender": gender,
        "country_code": country_code,
        "residence_country_code": residence_country_code,
      });
    } catch (e) {
      return PersonalDetails({
        "@type": "error",
        "error": "${e}",
        "message": "error method PersonalDetails.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDetails.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDetails.html).
  String? get first_name {
    try {
      return (rawData["first_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDetails.html).
  String? get middle_name {
    try {
      return (rawData["middle_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDetails.html).
  String? get last_name {
    try {
      return (rawData["last_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDetails.html).
  String? get native_first_name {
    try {
      return (rawData["native_first_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDetails.html).
  String? get native_middle_name {
    try {
      return (rawData["native_middle_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDetails.html).
  String? get native_last_name {
    try {
      return (rawData["native_last_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDetails.html).
  Date get birthdate {
    try {
      return Date((rawData["birthdate"] as Map));
    } catch (e) {
      return Date({"@type": "error", "error": "${e}", "message": "error at PersonalDetails birthdate"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDetails.html).
  String? get gender {
    try {
      return (rawData["gender"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDetails.html).
  String? get country_code {
    try {
      return (rawData["country_code"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDetails.html).
  String? get residence_country_code {
    try {
      return (rawData["residence_country_code"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1IdentityDocument.html).
class IdentityDocument {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1IdentityDocument.html).
  IdentityDocument(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1IdentityDocument.html).
  factory IdentityDocument.create({
    String special_type = "identityDocument",
    String? number,
    Date? expiry_date,
    DatedFile? front_side,
    DatedFile? reverse_side,
    DatedFile? selfie,
    List<DatedFile>? translation,
  }) {
    try {
      return IdentityDocument({
        "@type": special_type,
        "number": number,
        "expiry_date": (expiry_date != null) ? expiry_date.toJson() : null,
        "front_side": (front_side != null) ? front_side.toJson() : null,
        "reverse_side": (reverse_side != null) ? reverse_side.toJson() : null,
        "selfie": (selfie != null) ? selfie.toJson() : null,
        "translation": (translation != null)
            ? translation.map((e) {
                return DatedFile((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return IdentityDocument({
        "@type": "error",
        "error": "${e}",
        "message": "error method IdentityDocument.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1IdentityDocument.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1IdentityDocument.html).
  String? get number {
    try {
      return (rawData["number"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1IdentityDocument.html).
  Date get expiry_date {
    try {
      return Date((rawData["expiry_date"] as Map));
    } catch (e) {
      return Date({"@type": "error", "error": "${e}", "message": "error at IdentityDocument expiry_date"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1IdentityDocument.html).
  DatedFile get front_side {
    try {
      return DatedFile((rawData["front_side"] as Map));
    } catch (e) {
      return DatedFile({"@type": "error", "error": "${e}", "message": "error at IdentityDocument front_side"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1IdentityDocument.html).
  DatedFile get reverse_side {
    try {
      return DatedFile((rawData["reverse_side"] as Map));
    } catch (e) {
      return DatedFile({"@type": "error", "error": "${e}", "message": "error at IdentityDocument reverse_side"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1IdentityDocument.html).
  DatedFile get selfie {
    try {
      return DatedFile((rawData["selfie"] as Map));
    } catch (e) {
      return DatedFile({"@type": "error", "error": "${e}", "message": "error at IdentityDocument selfie"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1IdentityDocument.html).
  List<DatedFile> get translation {
    try {
      return (rawData["translation"] as List)
          .map((e) {
            return DatedFile((e as Map));
          })
          .toList()
          .cast<DatedFile>();
    } catch (e) {
      return [
        DatedFile({"@type": "error", "error": "${e}", "message": "error at IdentityDocument translation"})
      ].cast<DatedFile>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputIdentityDocument.html).
class InputIdentityDocument {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputIdentityDocument.html).
  InputIdentityDocument(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputIdentityDocument.html).
  factory InputIdentityDocument.create({
    String special_type = "inputIdentityDocument",
    String? number,
    Date? expiry_date,
    InputFile? front_side,
    InputFile? reverse_side,
    InputFile? selfie,
    List<InputFile>? translation,
  }) {
    try {
      return InputIdentityDocument({
        "@type": special_type,
        "number": number,
        "expiry_date": (expiry_date != null) ? expiry_date.toJson() : null,
        "front_side": (front_side != null) ? front_side.toJson() : null,
        "reverse_side": (reverse_side != null) ? reverse_side.toJson() : null,
        "selfie": (selfie != null) ? selfie.toJson() : null,
        "translation": (translation != null)
            ? translation.map((e) {
                return InputFile((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return InputIdentityDocument({
        "@type": "error",
        "error": "${e}",
        "message": "error method InputIdentityDocument.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputIdentityDocument.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputIdentityDocument.html).
  String? get number {
    try {
      return (rawData["number"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputIdentityDocument.html).
  Date get expiry_date {
    try {
      return Date((rawData["expiry_date"] as Map));
    } catch (e) {
      return Date({"@type": "error", "error": "${e}", "message": "error at InputIdentityDocument expiry_date"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputIdentityDocument.html).
  InputFile get front_side {
    try {
      return InputFile((rawData["front_side"] as Map));
    } catch (e) {
      return InputFile({"@type": "error", "error": "${e}", "message": "error at InputIdentityDocument front_side"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputIdentityDocument.html).
  InputFile get reverse_side {
    try {
      return InputFile((rawData["reverse_side"] as Map));
    } catch (e) {
      return InputFile({"@type": "error", "error": "${e}", "message": "error at InputIdentityDocument reverse_side"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputIdentityDocument.html).
  InputFile get selfie {
    try {
      return InputFile((rawData["selfie"] as Map));
    } catch (e) {
      return InputFile({"@type": "error", "error": "${e}", "message": "error at InputIdentityDocument selfie"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputIdentityDocument.html).
  List<InputFile> get translation {
    try {
      return (rawData["translation"] as List)
          .map((e) {
            return InputFile((e as Map));
          })
          .toList()
          .cast<InputFile>();
    } catch (e) {
      return [
        InputFile({"@type": "error", "error": "${e}", "message": "error at InputIdentityDocument translation"})
      ].cast<InputFile>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDocument.html).
class PersonalDocument {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDocument.html).
  PersonalDocument(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDocument.html).
  factory PersonalDocument.create({
    String special_type = "personalDocument",
    List<DatedFile>? files,
    List<DatedFile>? translation,
  }) {
    try {
      return PersonalDocument({
        "@type": special_type,
        "files": (files != null)
            ? files.map((e) {
                return DatedFile((e as Map)).toJson();
              }).toList()
            : null,
        "translation": (translation != null)
            ? translation.map((e) {
                return DatedFile((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return PersonalDocument({
        "@type": "error",
        "error": "${e}",
        "message": "error method PersonalDocument.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDocument.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDocument.html).
  List<DatedFile> get files {
    try {
      return (rawData["files"] as List)
          .map((e) {
            return DatedFile((e as Map));
          })
          .toList()
          .cast<DatedFile>();
    } catch (e) {
      return [
        DatedFile({"@type": "error", "error": "${e}", "message": "error at PersonalDocument files"})
      ].cast<DatedFile>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PersonalDocument.html).
  List<DatedFile> get translation {
    try {
      return (rawData["translation"] as List)
          .map((e) {
            return DatedFile((e as Map));
          })
          .toList()
          .cast<DatedFile>();
    } catch (e) {
      return [
        DatedFile({"@type": "error", "error": "${e}", "message": "error at PersonalDocument translation"})
      ].cast<DatedFile>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPersonalDocument.html).
class InputPersonalDocument {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPersonalDocument.html).
  InputPersonalDocument(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPersonalDocument.html).
  factory InputPersonalDocument.create({
    String special_type = "inputPersonalDocument",
    List<InputFile>? files,
    List<InputFile>? translation,
  }) {
    try {
      return InputPersonalDocument({
        "@type": special_type,
        "files": (files != null)
            ? files.map((e) {
                return InputFile((e as Map)).toJson();
              }).toList()
            : null,
        "translation": (translation != null)
            ? translation.map((e) {
                return InputFile((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return InputPersonalDocument({
        "@type": "error",
        "error": "${e}",
        "message": "error method InputPersonalDocument.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPersonalDocument.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPersonalDocument.html).
  List<InputFile> get files {
    try {
      return (rawData["files"] as List)
          .map((e) {
            return InputFile((e as Map));
          })
          .toList()
          .cast<InputFile>();
    } catch (e) {
      return [
        InputFile({"@type": "error", "error": "${e}", "message": "error at InputPersonalDocument files"})
      ].cast<InputFile>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPersonalDocument.html).
  List<InputFile> get translation {
    try {
      return (rawData["translation"] as List)
          .map((e) {
            return InputFile((e as Map));
          })
          .toList()
          .cast<InputFile>();
    } catch (e) {
      return [
        InputFile({"@type": "error", "error": "${e}", "message": "error at InputPersonalDocument translation"})
      ].cast<InputFile>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElement.html).
class PassportElement {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElement.html).
  PassportElement(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElement.html).
  factory PassportElement.create({
    String special_type = "passportElementPersonalDetails",
    PersonalDetails? personal_details,
    IdentityDocument? passport,
    IdentityDocument? driver_license,
    IdentityDocument? identity_card,
    IdentityDocument? internal_passport,
    Address? address,
    PersonalDocument? utility_bill,
    PersonalDocument? bank_statement,
    PersonalDocument? rental_agreement,
    PersonalDocument? passport_registration,
    PersonalDocument? temporary_registration,
    String? phone_number,
    String? email_address,
  }) {
    try {
      return PassportElement({
        "@type": special_type,
        "personal_details": (personal_details != null) ? personal_details.toJson() : null,
        "passport": (passport != null) ? passport.toJson() : null,
        "driver_license": (driver_license != null) ? driver_license.toJson() : null,
        "identity_card": (identity_card != null) ? identity_card.toJson() : null,
        "internal_passport": (internal_passport != null) ? internal_passport.toJson() : null,
        "address": (address != null) ? address.toJson() : null,
        "utility_bill": (utility_bill != null) ? utility_bill.toJson() : null,
        "bank_statement": (bank_statement != null) ? bank_statement.toJson() : null,
        "rental_agreement": (rental_agreement != null) ? rental_agreement.toJson() : null,
        "passport_registration": (passport_registration != null) ? passport_registration.toJson() : null,
        "temporary_registration": (temporary_registration != null) ? temporary_registration.toJson() : null,
        "phone_number": phone_number,
        "email_address": email_address,
      });
    } catch (e) {
      return PassportElement({
        "@type": "error",
        "error": "${e}",
        "message": "error method PassportElement.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElement.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElement.html).
  PersonalDetails get personal_details {
    try {
      return PersonalDetails((rawData["personal_details"] as Map));
    } catch (e) {
      return PersonalDetails({"@type": "error", "error": "${e}", "message": "error at PassportElement personal_details"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElement.html).
  IdentityDocument get passport {
    try {
      return IdentityDocument((rawData["passport"] as Map));
    } catch (e) {
      return IdentityDocument({"@type": "error", "error": "${e}", "message": "error at PassportElement passport"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElement.html).
  IdentityDocument get driver_license {
    try {
      return IdentityDocument((rawData["driver_license"] as Map));
    } catch (e) {
      return IdentityDocument({"@type": "error", "error": "${e}", "message": "error at PassportElement driver_license"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElement.html).
  IdentityDocument get identity_card {
    try {
      return IdentityDocument((rawData["identity_card"] as Map));
    } catch (e) {
      return IdentityDocument({"@type": "error", "error": "${e}", "message": "error at PassportElement identity_card"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElement.html).
  IdentityDocument get internal_passport {
    try {
      return IdentityDocument((rawData["internal_passport"] as Map));
    } catch (e) {
      return IdentityDocument({"@type": "error", "error": "${e}", "message": "error at PassportElement internal_passport"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElement.html).
  Address get address {
    try {
      return Address((rawData["address"] as Map));
    } catch (e) {
      return Address({"@type": "error", "error": "${e}", "message": "error at PassportElement address"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElement.html).
  PersonalDocument get utility_bill {
    try {
      return PersonalDocument((rawData["utility_bill"] as Map));
    } catch (e) {
      return PersonalDocument({"@type": "error", "error": "${e}", "message": "error at PassportElement utility_bill"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElement.html).
  PersonalDocument get bank_statement {
    try {
      return PersonalDocument((rawData["bank_statement"] as Map));
    } catch (e) {
      return PersonalDocument({"@type": "error", "error": "${e}", "message": "error at PassportElement bank_statement"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElement.html).
  PersonalDocument get rental_agreement {
    try {
      return PersonalDocument((rawData["rental_agreement"] as Map));
    } catch (e) {
      return PersonalDocument({"@type": "error", "error": "${e}", "message": "error at PassportElement rental_agreement"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElement.html).
  PersonalDocument get passport_registration {
    try {
      return PersonalDocument((rawData["passport_registration"] as Map));
    } catch (e) {
      return PersonalDocument({"@type": "error", "error": "${e}", "message": "error at PassportElement passport_registration"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElement.html).
  PersonalDocument get temporary_registration {
    try {
      return PersonalDocument((rawData["temporary_registration"] as Map));
    } catch (e) {
      return PersonalDocument({"@type": "error", "error": "${e}", "message": "error at PassportElement temporary_registration"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElement.html).
  String? get phone_number {
    try {
      return (rawData["phone_number"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElement.html).
  String? get email_address {
    try {
      return (rawData["email_address"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElement.html).
class InputPassportElement {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElement.html).
  InputPassportElement(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElement.html).
  factory InputPassportElement.create({
    String special_type = "inputPassportElementPersonalDetails",
    PersonalDetails? personal_details,
    InputIdentityDocument? passport,
    InputIdentityDocument? driver_license,
    InputIdentityDocument? identity_card,
    InputIdentityDocument? internal_passport,
    Address? address,
    InputPersonalDocument? utility_bill,
    InputPersonalDocument? bank_statement,
    InputPersonalDocument? rental_agreement,
    InputPersonalDocument? passport_registration,
    InputPersonalDocument? temporary_registration,
    String? phone_number,
    String? email_address,
  }) {
    try {
      return InputPassportElement({
        "@type": special_type,
        "personal_details": (personal_details != null) ? personal_details.toJson() : null,
        "passport": (passport != null) ? passport.toJson() : null,
        "driver_license": (driver_license != null) ? driver_license.toJson() : null,
        "identity_card": (identity_card != null) ? identity_card.toJson() : null,
        "internal_passport": (internal_passport != null) ? internal_passport.toJson() : null,
        "address": (address != null) ? address.toJson() : null,
        "utility_bill": (utility_bill != null) ? utility_bill.toJson() : null,
        "bank_statement": (bank_statement != null) ? bank_statement.toJson() : null,
        "rental_agreement": (rental_agreement != null) ? rental_agreement.toJson() : null,
        "passport_registration": (passport_registration != null) ? passport_registration.toJson() : null,
        "temporary_registration": (temporary_registration != null) ? temporary_registration.toJson() : null,
        "phone_number": phone_number,
        "email_address": email_address,
      });
    } catch (e) {
      return InputPassportElement({
        "@type": "error",
        "error": "${e}",
        "message": "error method InputPassportElement.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElement.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElement.html).
  PersonalDetails get personal_details {
    try {
      return PersonalDetails((rawData["personal_details"] as Map));
    } catch (e) {
      return PersonalDetails({"@type": "error", "error": "${e}", "message": "error at InputPassportElement personal_details"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElement.html).
  InputIdentityDocument get passport {
    try {
      return InputIdentityDocument((rawData["passport"] as Map));
    } catch (e) {
      return InputIdentityDocument({"@type": "error", "error": "${e}", "message": "error at InputPassportElement passport"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElement.html).
  InputIdentityDocument get driver_license {
    try {
      return InputIdentityDocument((rawData["driver_license"] as Map));
    } catch (e) {
      return InputIdentityDocument({"@type": "error", "error": "${e}", "message": "error at InputPassportElement driver_license"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElement.html).
  InputIdentityDocument get identity_card {
    try {
      return InputIdentityDocument((rawData["identity_card"] as Map));
    } catch (e) {
      return InputIdentityDocument({"@type": "error", "error": "${e}", "message": "error at InputPassportElement identity_card"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElement.html).
  InputIdentityDocument get internal_passport {
    try {
      return InputIdentityDocument((rawData["internal_passport"] as Map));
    } catch (e) {
      return InputIdentityDocument({"@type": "error", "error": "${e}", "message": "error at InputPassportElement internal_passport"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElement.html).
  Address get address {
    try {
      return Address((rawData["address"] as Map));
    } catch (e) {
      return Address({"@type": "error", "error": "${e}", "message": "error at InputPassportElement address"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElement.html).
  InputPersonalDocument get utility_bill {
    try {
      return InputPersonalDocument((rawData["utility_bill"] as Map));
    } catch (e) {
      return InputPersonalDocument({"@type": "error", "error": "${e}", "message": "error at InputPassportElement utility_bill"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElement.html).
  InputPersonalDocument get bank_statement {
    try {
      return InputPersonalDocument((rawData["bank_statement"] as Map));
    } catch (e) {
      return InputPersonalDocument({"@type": "error", "error": "${e}", "message": "error at InputPassportElement bank_statement"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElement.html).
  InputPersonalDocument get rental_agreement {
    try {
      return InputPersonalDocument((rawData["rental_agreement"] as Map));
    } catch (e) {
      return InputPersonalDocument({"@type": "error", "error": "${e}", "message": "error at InputPassportElement rental_agreement"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElement.html).
  InputPersonalDocument get passport_registration {
    try {
      return InputPersonalDocument((rawData["passport_registration"] as Map));
    } catch (e) {
      return InputPersonalDocument({"@type": "error", "error": "${e}", "message": "error at InputPassportElement passport_registration"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElement.html).
  InputPersonalDocument get temporary_registration {
    try {
      return InputPersonalDocument((rawData["temporary_registration"] as Map));
    } catch (e) {
      return InputPersonalDocument({"@type": "error", "error": "${e}", "message": "error at InputPassportElement temporary_registration"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElement.html).
  String? get phone_number {
    try {
      return (rawData["phone_number"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElement.html).
  String? get email_address {
    try {
      return (rawData["email_address"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElements.html).
class PassportElements {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElements.html).
  PassportElements(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElements.html).
  factory PassportElements.create({
    String special_type = "passportElements",
    List<PassportElement>? elements,
  }) {
    try {
      return PassportElements({
        "@type": special_type,
        "elements": (elements != null)
            ? elements.map((e) {
                return PassportElement((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return PassportElements({
        "@type": "error",
        "error": "${e}",
        "message": "error method PassportElements.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElements.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElements.html).
  List<PassportElement> get elements {
    try {
      return (rawData["elements"] as List)
          .map((e) {
            return PassportElement((e as Map));
          })
          .toList()
          .cast<PassportElement>();
    } catch (e) {
      return [
        PassportElement({"@type": "error", "error": "${e}", "message": "error at PassportElements elements"})
      ].cast<PassportElement>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementErrorSource.html).
class PassportElementErrorSource {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementErrorSource.html).
  PassportElementErrorSource(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementErrorSource.html).
  factory PassportElementErrorSource.create({
    String special_type = "passportElementErrorSourceUnspecified",
    String? field_name,
    int? file_index,
  }) {
    try {
      return PassportElementErrorSource({
        "@type": special_type,
        "field_name": field_name,
        "file_index": file_index,
      });
    } catch (e) {
      return PassportElementErrorSource({
        "@type": "error",
        "error": "${e}",
        "message": "error method PassportElementErrorSource.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementErrorSource.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementErrorSource.html).
  String? get field_name {
    try {
      return (rawData["field_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementErrorSource.html).
  int? get file_index {
    try {
      return (rawData["file_index"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementError.html).
class PassportElementError {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementError.html).
  PassportElementError(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementError.html).
  factory PassportElementError.create({
    String special_type = "passportElementError",
    PassportElementType? type,
    String? message,
    PassportElementErrorSource? source,
  }) {
    try {
      return PassportElementError({
        "@type": special_type,
        "type": (type != null) ? type.toJson() : null,
        "message": message,
        "source": (source != null) ? source.toJson() : null,
      });
    } catch (e) {
      return PassportElementError({
        "@type": "error",
        "error": "${e}",
        "message": "error method PassportElementError.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementError.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementError.html).
  PassportElementType get type {
    try {
      return PassportElementType((rawData["type"] as Map));
    } catch (e) {
      return PassportElementType({"@type": "error", "error": "${e}", "message": "error at PassportElementError type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementError.html).
  String? get message {
    try {
      return (rawData["message"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementError.html).
  PassportElementErrorSource get source {
    try {
      return PassportElementErrorSource((rawData["source"] as Map));
    } catch (e) {
      return PassportElementErrorSource({"@type": "error", "error": "${e}", "message": "error at PassportElementError source"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportSuitableElement.html).
class PassportSuitableElement {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportSuitableElement.html).
  PassportSuitableElement(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportSuitableElement.html).
  factory PassportSuitableElement.create({
    String special_type = "passportSuitableElement",
    PassportElementType? type,
    bool? is_selfie_required,
    bool? is_translation_required,
    bool? is_native_name_required,
  }) {
    try {
      return PassportSuitableElement({
        "@type": special_type,
        "type": (type != null) ? type.toJson() : null,
        "is_selfie_required": is_selfie_required,
        "is_translation_required": is_translation_required,
        "is_native_name_required": is_native_name_required,
      });
    } catch (e) {
      return PassportSuitableElement({
        "@type": "error",
        "error": "${e}",
        "message": "error method PassportSuitableElement.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportSuitableElement.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportSuitableElement.html).
  PassportElementType get type {
    try {
      return PassportElementType((rawData["type"] as Map));
    } catch (e) {
      return PassportElementType({"@type": "error", "error": "${e}", "message": "error at PassportSuitableElement type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportSuitableElement.html).
  bool? get is_selfie_required {
    try {
      return (rawData["is_selfie_required"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportSuitableElement.html).
  bool? get is_translation_required {
    try {
      return (rawData["is_translation_required"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportSuitableElement.html).
  bool? get is_native_name_required {
    try {
      return (rawData["is_native_name_required"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportRequiredElement.html).
class PassportRequiredElement {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportRequiredElement.html).
  PassportRequiredElement(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportRequiredElement.html).
  factory PassportRequiredElement.create({
    String special_type = "passportRequiredElement",
    List<PassportSuitableElement>? suitable_elements,
  }) {
    try {
      return PassportRequiredElement({
        "@type": special_type,
        "suitable_elements": (suitable_elements != null)
            ? suitable_elements.map((e) {
                return PassportSuitableElement((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return PassportRequiredElement({
        "@type": "error",
        "error": "${e}",
        "message": "error method PassportRequiredElement.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportRequiredElement.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportRequiredElement.html).
  List<PassportSuitableElement> get suitable_elements {
    try {
      return (rawData["suitable_elements"] as List)
          .map((e) {
            return PassportSuitableElement((e as Map));
          })
          .toList()
          .cast<PassportSuitableElement>();
    } catch (e) {
      return [
        PassportSuitableElement({"@type": "error", "error": "${e}", "message": "error at PassportRequiredElement suitable_elements"})
      ].cast<PassportSuitableElement>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportAuthorizationForm.html).
class PassportAuthorizationForm {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportAuthorizationForm.html).
  PassportAuthorizationForm(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportAuthorizationForm.html).
  factory PassportAuthorizationForm.create({
    String special_type = "passportAuthorizationForm",
    int? id,
    List<PassportRequiredElement>? required_elements,
    String? privacy_policy_url,
  }) {
    try {
      return PassportAuthorizationForm({
        "@type": special_type,
        "id": id,
        "required_elements": (required_elements != null)
            ? required_elements.map((e) {
                return PassportRequiredElement((e as Map)).toJson();
              }).toList()
            : null,
        "privacy_policy_url": privacy_policy_url,
      });
    } catch (e) {
      return PassportAuthorizationForm({
        "@type": "error",
        "error": "${e}",
        "message": "error method PassportAuthorizationForm.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportAuthorizationForm.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportAuthorizationForm.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportAuthorizationForm.html).
  List<PassportRequiredElement> get required_elements {
    try {
      return (rawData["required_elements"] as List)
          .map((e) {
            return PassportRequiredElement((e as Map));
          })
          .toList()
          .cast<PassportRequiredElement>();
    } catch (e) {
      return [
        PassportRequiredElement({"@type": "error", "error": "${e}", "message": "error at PassportAuthorizationForm required_elements"})
      ].cast<PassportRequiredElement>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportAuthorizationForm.html).
  String? get privacy_policy_url {
    try {
      return (rawData["privacy_policy_url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementsWithErrors.html).
class PassportElementsWithErrors {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementsWithErrors.html).
  PassportElementsWithErrors(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementsWithErrors.html).
  factory PassportElementsWithErrors.create({
    String special_type = "passportElementsWithErrors",
    List<PassportElement>? elements,
    List<PassportElementError>? errors,
  }) {
    try {
      return PassportElementsWithErrors({
        "@type": special_type,
        "elements": (elements != null)
            ? elements.map((e) {
                return PassportElement((e as Map)).toJson();
              }).toList()
            : null,
        "errors": (errors != null)
            ? errors.map((e) {
                return PassportElementError((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return PassportElementsWithErrors({
        "@type": "error",
        "error": "${e}",
        "message": "error method PassportElementsWithErrors.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementsWithErrors.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementsWithErrors.html).
  List<PassportElement> get elements {
    try {
      return (rawData["elements"] as List)
          .map((e) {
            return PassportElement((e as Map));
          })
          .toList()
          .cast<PassportElement>();
    } catch (e) {
      return [
        PassportElement({"@type": "error", "error": "${e}", "message": "error at PassportElementsWithErrors elements"})
      ].cast<PassportElement>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PassportElementsWithErrors.html).
  List<PassportElementError> get errors {
    try {
      return (rawData["errors"] as List)
          .map((e) {
            return PassportElementError((e as Map));
          })
          .toList()
          .cast<PassportElementError>();
    } catch (e) {
      return [
        PassportElementError({"@type": "error", "error": "${e}", "message": "error at PassportElementsWithErrors errors"})
      ].cast<PassportElementError>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedCredentials.html).
class EncryptedCredentials {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedCredentials.html).
  EncryptedCredentials(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedCredentials.html).
  factory EncryptedCredentials.create({
    String special_type = "encryptedCredentials",
    String? data,
    String? hash,
    String? secret,
  }) {
    try {
      return EncryptedCredentials({
        "@type": special_type,
        "data": data,
        "hash": hash,
        "secret": secret,
      });
    } catch (e) {
      return EncryptedCredentials({
        "@type": "error",
        "error": "${e}",
        "message": "error method EncryptedCredentials.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedCredentials.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedCredentials.html).
  String? get data {
    try {
      return (rawData["data"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedCredentials.html).
  String? get hash {
    try {
      return (rawData["hash"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedCredentials.html).
  String? get secret {
    try {
      return (rawData["secret"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedPassportElement.html).
class EncryptedPassportElement {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedPassportElement.html).
  EncryptedPassportElement(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedPassportElement.html).
  factory EncryptedPassportElement.create({
    String special_type = "encryptedPassportElement",
    PassportElementType? type,
    String? data,
    DatedFile? front_side,
    DatedFile? reverse_side,
    DatedFile? selfie,
    List<DatedFile>? translation,
    List<DatedFile>? files,
    String? value,
    String? hash,
  }) {
    try {
      return EncryptedPassportElement({
        "@type": special_type,
        "type": (type != null) ? type.toJson() : null,
        "data": data,
        "front_side": (front_side != null) ? front_side.toJson() : null,
        "reverse_side": (reverse_side != null) ? reverse_side.toJson() : null,
        "selfie": (selfie != null) ? selfie.toJson() : null,
        "translation": (translation != null)
            ? translation.map((e) {
                return DatedFile((e as Map)).toJson();
              }).toList()
            : null,
        "files": (files != null)
            ? files.map((e) {
                return DatedFile((e as Map)).toJson();
              }).toList()
            : null,
        "value": value,
        "hash": hash,
      });
    } catch (e) {
      return EncryptedPassportElement({
        "@type": "error",
        "error": "${e}",
        "message": "error method EncryptedPassportElement.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedPassportElement.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedPassportElement.html).
  PassportElementType get type {
    try {
      return PassportElementType((rawData["type"] as Map));
    } catch (e) {
      return PassportElementType({"@type": "error", "error": "${e}", "message": "error at EncryptedPassportElement type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedPassportElement.html).
  String? get data {
    try {
      return (rawData["data"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedPassportElement.html).
  DatedFile get front_side {
    try {
      return DatedFile((rawData["front_side"] as Map));
    } catch (e) {
      return DatedFile({"@type": "error", "error": "${e}", "message": "error at EncryptedPassportElement front_side"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedPassportElement.html).
  DatedFile get reverse_side {
    try {
      return DatedFile((rawData["reverse_side"] as Map));
    } catch (e) {
      return DatedFile({"@type": "error", "error": "${e}", "message": "error at EncryptedPassportElement reverse_side"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedPassportElement.html).
  DatedFile get selfie {
    try {
      return DatedFile((rawData["selfie"] as Map));
    } catch (e) {
      return DatedFile({"@type": "error", "error": "${e}", "message": "error at EncryptedPassportElement selfie"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedPassportElement.html).
  List<DatedFile> get translation {
    try {
      return (rawData["translation"] as List)
          .map((e) {
            return DatedFile((e as Map));
          })
          .toList()
          .cast<DatedFile>();
    } catch (e) {
      return [
        DatedFile({"@type": "error", "error": "${e}", "message": "error at EncryptedPassportElement translation"})
      ].cast<DatedFile>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedPassportElement.html).
  List<DatedFile> get files {
    try {
      return (rawData["files"] as List)
          .map((e) {
            return DatedFile((e as Map));
          })
          .toList()
          .cast<DatedFile>();
    } catch (e) {
      return [
        DatedFile({"@type": "error", "error": "${e}", "message": "error at EncryptedPassportElement files"})
      ].cast<DatedFile>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedPassportElement.html).
  String? get value {
    try {
      return (rawData["value"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EncryptedPassportElement.html).
  String? get hash {
    try {
      return (rawData["hash"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElementErrorSource.html).
class InputPassportElementErrorSource {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElementErrorSource.html).
  InputPassportElementErrorSource(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElementErrorSource.html).
  factory InputPassportElementErrorSource.create({
    String special_type = "inputPassportElementErrorSourceUnspecified",
    String? element_hash,
    String? field_name,
    String? data_hash,
    String? file_hash,
    List<String>? file_hashes,
  }) {
    try {
      return InputPassportElementErrorSource({
        "@type": special_type,
        "element_hash": element_hash,
        "field_name": field_name,
        "data_hash": data_hash,
        "file_hash": file_hash,
        "file_hashes": file_hashes,
      });
    } catch (e) {
      return InputPassportElementErrorSource({
        "@type": "error",
        "error": "${e}",
        "message": "error method InputPassportElementErrorSource.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElementErrorSource.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElementErrorSource.html).
  String? get element_hash {
    try {
      return (rawData["element_hash"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElementErrorSource.html).
  String? get field_name {
    try {
      return (rawData["field_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElementErrorSource.html).
  String? get data_hash {
    try {
      return (rawData["data_hash"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElementErrorSource.html).
  String? get file_hash {
    try {
      return (rawData["file_hash"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElementErrorSource.html).
  List<String> get file_hashes {
    try {
      return (rawData["file_hashes"] as List).cast<String>();
    } catch (e) {
      return [].cast<String>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElementError.html).
class InputPassportElementError {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElementError.html).
  InputPassportElementError(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElementError.html).
  factory InputPassportElementError.create({
    String special_type = "inputPassportElementError",
    PassportElementType? type,
    String? message,
    InputPassportElementErrorSource? source,
  }) {
    try {
      return InputPassportElementError({
        "@type": special_type,
        "type": (type != null) ? type.toJson() : null,
        "message": message,
        "source": (source != null) ? source.toJson() : null,
      });
    } catch (e) {
      return InputPassportElementError({
        "@type": "error",
        "error": "${e}",
        "message": "error method InputPassportElementError.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElementError.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElementError.html).
  PassportElementType get type {
    try {
      return PassportElementType((rawData["type"] as Map));
    } catch (e) {
      return PassportElementType({"@type": "error", "error": "${e}", "message": "error at InputPassportElementError type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElementError.html).
  String? get message {
    try {
      return (rawData["message"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputPassportElementError.html).
  InputPassportElementErrorSource get source {
    try {
      return InputPassportElementErrorSource((rawData["source"] as Map));
    } catch (e) {
      return InputPassportElementErrorSource({"@type": "error", "error": "${e}", "message": "error at InputPassportElementError source"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
class MessageContent {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  MessageContent(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  factory MessageContent.create({
    String special_type = "messageText",
    String? text,
    WebPage? web_page,
    Animation? animation,
    FormattedText? caption,
    bool? is_secret,
    Audio? audio,
    Document? document,
    ChatPhoto? photo,
    Sticker? sticker,
    bool? is_premium,
    Video? video,
    VideoNote? video_note,
    bool? is_viewed,
    VoiceNote? voice_note,
    bool? is_listened,
    Location? location,
    int? live_period,
    int? expires_in,
    int? heading,
    int? proximity_alert_radius,
    Venue? venue,
    Contact? contact,
    AnimatedEmoji? animated_emoji,
    String? emoji,
    DiceStickers? initial_state,
    DiceStickers? final_state,
    int? value,
    int? success_animation_frame_number,
    Game? game,
    Poll? poll,
    String? title,
    FormattedText? description,
    String? currency,
    int? total_amount,
    String? start_parameter,
    bool? is_test,
    bool? need_shipping_address,
    int? receipt_message_id,
    MessageExtendedMedia? extended_media,
    bool? is_video,
    CallDiscardReason? discard_reason,
    int? duration,
    int? group_call_id,
    int? start_date,
    List<int>? user_ids,
    List<int>? member_user_ids,
    int? user_id,
    int? supergroup_id,
    int? basic_group_id,
    int? message_id,
    String? theme_name,
    int? ttl,
    int? game_message_id,
    int? game_id,
    int? score,
    int? invoice_chat_id,
    int? invoice_message_id,
    bool? is_recurring,
    bool? is_first_recurring,
    String? invoice_name,
    String? invoice_payload,
    String? shipping_option_id,
    OrderInfo? order_info,
    String? telegram_payment_charge_id,
    String? provider_payment_charge_id,
    int? amount,
    int? month_count,
    String? domain_name,
    String? button_text,
    String? data,
    List<PassportElementType>? types,
    List<EncryptedPassportElement>? elements,
    EncryptedCredentials? credentials,
    MessageSender? traveler_id,
    MessageSender? watcher_id,
    int? distance,
  }) {
    try {
      return MessageContent({
        "@type": special_type,
        "text": text,
        "web_page": (web_page != null) ? web_page.toJson() : null,
        "animation": (animation != null) ? animation.toJson() : null,
        "caption": (caption != null) ? caption.toJson() : null,
        "is_secret": is_secret,
        "audio": (audio != null) ? audio.toJson() : null,
        "document": (document != null) ? document.toJson() : null,
        "photo": (photo != null) ? photo.toJson() : null,
        "sticker": (sticker != null) ? sticker.toJson() : null,
        "is_premium": is_premium,
        "video": (video != null) ? video.toJson() : null,
        "video_note": (video_note != null) ? video_note.toJson() : null,
        "is_viewed": is_viewed,
        "voice_note": (voice_note != null) ? voice_note.toJson() : null,
        "is_listened": is_listened,
        "location": (location != null) ? location.toJson() : null,
        "live_period": live_period,
        "expires_in": expires_in,
        "heading": heading,
        "proximity_alert_radius": proximity_alert_radius,
        "venue": (venue != null) ? venue.toJson() : null,
        "contact": (contact != null) ? contact.toJson() : null,
        "animated_emoji": (animated_emoji != null) ? animated_emoji.toJson() : null,
        "emoji": emoji,
        "initial_state": (initial_state != null) ? initial_state.toJson() : null,
        "final_state": (final_state != null) ? final_state.toJson() : null,
        "value": value,
        "success_animation_frame_number": success_animation_frame_number,
        "game": (game != null) ? game.toJson() : null,
        "poll": (poll != null) ? poll.toJson() : null,
        "title": title,
        "description": (description != null) ? description.toJson() : null,
        "currency": currency,
        "total_amount": total_amount,
        "start_parameter": start_parameter,
        "is_test": is_test,
        "need_shipping_address": need_shipping_address,
        "receipt_message_id": receipt_message_id,
        "extended_media": (extended_media != null) ? extended_media.toJson() : null,
        "is_video": is_video,
        "discard_reason": (discard_reason != null) ? discard_reason.toJson() : null,
        "duration": duration,
        "group_call_id": group_call_id,
        "start_date": start_date,
        "user_ids": user_ids,
        "member_user_ids": member_user_ids,
        "user_id": user_id,
        "supergroup_id": supergroup_id,
        "basic_group_id": basic_group_id,
        "message_id": message_id,
        "theme_name": theme_name,
        "ttl": ttl,
        "game_message_id": game_message_id,
        "game_id": game_id,
        "score": score,
        "invoice_chat_id": invoice_chat_id,
        "invoice_message_id": invoice_message_id,
        "is_recurring": is_recurring,
        "is_first_recurring": is_first_recurring,
        "invoice_name": invoice_name,
        "invoice_payload": invoice_payload,
        "shipping_option_id": shipping_option_id,
        "order_info": (order_info != null) ? order_info.toJson() : null,
        "telegram_payment_charge_id": telegram_payment_charge_id,
        "provider_payment_charge_id": provider_payment_charge_id,
        "amount": amount,
        "month_count": month_count,
        "domain_name": domain_name,
        "button_text": button_text,
        "data": data,
        "types": (types != null)
            ? types.map((e) {
                return PassportElementType((e as Map)).toJson();
              }).toList()
            : null,
        "elements": (elements != null)
            ? elements.map((e) {
                return EncryptedPassportElement((e as Map)).toJson();
              }).toList()
            : null,
        "credentials": (credentials != null) ? credentials.toJson() : null,
        "traveler_id": (traveler_id != null) ? traveler_id.toJson() : null,
        "watcher_id": (watcher_id != null) ? watcher_id.toJson() : null,
        "distance": distance,
      });
    } catch (e) {
      return MessageContent({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageContent.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  String? get text {
    try {
      return (rawData["text"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  WebPage get web_page {
    try {
      return WebPage((rawData["web_page"] as Map));
    } catch (e) {
      return WebPage({"@type": "error", "error": "${e}", "message": "error at MessageContent web_page"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  Animation get animation {
    try {
      return Animation((rawData["animation"] as Map));
    } catch (e) {
      return Animation({"@type": "error", "error": "${e}", "message": "error at MessageContent animation"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  FormattedText get caption {
    try {
      return FormattedText((rawData["caption"] as Map));
    } catch (e) {
      return FormattedText({"@type": "error", "error": "${e}", "message": "error at MessageContent caption"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  bool? get is_secret {
    try {
      return (rawData["is_secret"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  Audio get audio {
    try {
      return Audio((rawData["audio"] as Map));
    } catch (e) {
      return Audio({"@type": "error", "error": "${e}", "message": "error at MessageContent audio"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  Document get document {
    try {
      return Document((rawData["document"] as Map));
    } catch (e) {
      return Document({"@type": "error", "error": "${e}", "message": "error at MessageContent document"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  ChatPhoto get photo {
    try {
      return ChatPhoto((rawData["photo"] as Map));
    } catch (e) {
      return ChatPhoto({"@type": "error", "error": "${e}", "message": "error at MessageContent photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  Sticker get sticker {
    try {
      return Sticker((rawData["sticker"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at MessageContent sticker"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  bool? get is_premium {
    try {
      return (rawData["is_premium"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  Video get video {
    try {
      return Video((rawData["video"] as Map));
    } catch (e) {
      return Video({"@type": "error", "error": "${e}", "message": "error at MessageContent video"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  VideoNote get video_note {
    try {
      return VideoNote((rawData["video_note"] as Map));
    } catch (e) {
      return VideoNote({"@type": "error", "error": "${e}", "message": "error at MessageContent video_note"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  bool? get is_viewed {
    try {
      return (rawData["is_viewed"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  VoiceNote get voice_note {
    try {
      return VoiceNote((rawData["voice_note"] as Map));
    } catch (e) {
      return VoiceNote({"@type": "error", "error": "${e}", "message": "error at MessageContent voice_note"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  bool? get is_listened {
    try {
      return (rawData["is_listened"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  Location get location {
    try {
      return Location((rawData["location"] as Map));
    } catch (e) {
      return Location({"@type": "error", "error": "${e}", "message": "error at MessageContent location"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get live_period {
    try {
      return (rawData["live_period"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get expires_in {
    try {
      return (rawData["expires_in"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get heading {
    try {
      return (rawData["heading"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get proximity_alert_radius {
    try {
      return (rawData["proximity_alert_radius"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  Venue get venue {
    try {
      return Venue((rawData["venue"] as Map));
    } catch (e) {
      return Venue({"@type": "error", "error": "${e}", "message": "error at MessageContent venue"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  Contact get contact {
    try {
      return Contact((rawData["contact"] as Map));
    } catch (e) {
      return Contact({"@type": "error", "error": "${e}", "message": "error at MessageContent contact"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  AnimatedEmoji get animated_emoji {
    try {
      return AnimatedEmoji((rawData["animated_emoji"] as Map));
    } catch (e) {
      return AnimatedEmoji({"@type": "error", "error": "${e}", "message": "error at MessageContent animated_emoji"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  String? get emoji {
    try {
      return (rawData["emoji"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  DiceStickers get initial_state {
    try {
      return DiceStickers((rawData["initial_state"] as Map));
    } catch (e) {
      return DiceStickers({"@type": "error", "error": "${e}", "message": "error at MessageContent initial_state"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  DiceStickers get final_state {
    try {
      return DiceStickers((rawData["final_state"] as Map));
    } catch (e) {
      return DiceStickers({"@type": "error", "error": "${e}", "message": "error at MessageContent final_state"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get value {
    try {
      return (rawData["value"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get success_animation_frame_number {
    try {
      return (rawData["success_animation_frame_number"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  Game get game {
    try {
      return Game((rawData["game"] as Map));
    } catch (e) {
      return Game({"@type": "error", "error": "${e}", "message": "error at MessageContent game"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  Poll get poll {
    try {
      return Poll((rawData["poll"] as Map));
    } catch (e) {
      return Poll({"@type": "error", "error": "${e}", "message": "error at MessageContent poll"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  FormattedText get description {
    try {
      return FormattedText((rawData["description"] as Map));
    } catch (e) {
      return FormattedText({"@type": "error", "error": "${e}", "message": "error at MessageContent description"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  String? get currency {
    try {
      return (rawData["currency"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get total_amount {
    try {
      return (rawData["total_amount"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  String? get start_parameter {
    try {
      return (rawData["start_parameter"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  bool? get is_test {
    try {
      return (rawData["is_test"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  bool? get need_shipping_address {
    try {
      return (rawData["need_shipping_address"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get receipt_message_id {
    try {
      return (rawData["receipt_message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  MessageExtendedMedia get extended_media {
    try {
      return MessageExtendedMedia((rawData["extended_media"] as Map));
    } catch (e) {
      return MessageExtendedMedia({"@type": "error", "error": "${e}", "message": "error at MessageContent extended_media"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  bool? get is_video {
    try {
      return (rawData["is_video"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  CallDiscardReason get discard_reason {
    try {
      return CallDiscardReason((rawData["discard_reason"] as Map));
    } catch (e) {
      return CallDiscardReason({"@type": "error", "error": "${e}", "message": "error at MessageContent discard_reason"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get duration {
    try {
      return (rawData["duration"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get group_call_id {
    try {
      return (rawData["group_call_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get start_date {
    try {
      return (rawData["start_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  List<int> get user_ids {
    try {
      return (rawData["user_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  List<int> get member_user_ids {
    try {
      return (rawData["member_user_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get supergroup_id {
    try {
      return (rawData["supergroup_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get basic_group_id {
    try {
      return (rawData["basic_group_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get message_id {
    try {
      return (rawData["message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  String? get theme_name {
    try {
      return (rawData["theme_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get ttl {
    try {
      return (rawData["ttl"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get game_message_id {
    try {
      return (rawData["game_message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get game_id {
    try {
      return (rawData["game_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get score {
    try {
      return (rawData["score"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get invoice_chat_id {
    try {
      return (rawData["invoice_chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get invoice_message_id {
    try {
      return (rawData["invoice_message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  bool? get is_recurring {
    try {
      return (rawData["is_recurring"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  bool? get is_first_recurring {
    try {
      return (rawData["is_first_recurring"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  String? get invoice_name {
    try {
      return (rawData["invoice_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  String? get invoice_payload {
    try {
      return (rawData["invoice_payload"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  String? get shipping_option_id {
    try {
      return (rawData["shipping_option_id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  OrderInfo get order_info {
    try {
      return OrderInfo((rawData["order_info"] as Map));
    } catch (e) {
      return OrderInfo({"@type": "error", "error": "${e}", "message": "error at MessageContent order_info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  String? get telegram_payment_charge_id {
    try {
      return (rawData["telegram_payment_charge_id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  String? get provider_payment_charge_id {
    try {
      return (rawData["provider_payment_charge_id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get amount {
    try {
      return (rawData["amount"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get month_count {
    try {
      return (rawData["month_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  String? get domain_name {
    try {
      return (rawData["domain_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  String? get button_text {
    try {
      return (rawData["button_text"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  String? get data {
    try {
      return (rawData["data"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  List<PassportElementType> get types {
    try {
      return (rawData["types"] as List)
          .map((e) {
            return PassportElementType((e as Map));
          })
          .toList()
          .cast<PassportElementType>();
    } catch (e) {
      return [
        PassportElementType({"@type": "error", "error": "${e}", "message": "error at MessageContent types"})
      ].cast<PassportElementType>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  List<EncryptedPassportElement> get elements {
    try {
      return (rawData["elements"] as List)
          .map((e) {
            return EncryptedPassportElement((e as Map));
          })
          .toList()
          .cast<EncryptedPassportElement>();
    } catch (e) {
      return [
        EncryptedPassportElement({"@type": "error", "error": "${e}", "message": "error at MessageContent elements"})
      ].cast<EncryptedPassportElement>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  EncryptedCredentials get credentials {
    try {
      return EncryptedCredentials((rawData["credentials"] as Map));
    } catch (e) {
      return EncryptedCredentials({"@type": "error", "error": "${e}", "message": "error at MessageContent credentials"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  MessageSender get traveler_id {
    try {
      return MessageSender((rawData["traveler_id"] as Map));
    } catch (e) {
      return MessageSender({"@type": "error", "error": "${e}", "message": "error at MessageContent traveler_id"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  MessageSender get watcher_id {
    try {
      return MessageSender((rawData["watcher_id"] as Map));
    } catch (e) {
      return MessageSender({"@type": "error", "error": "${e}", "message": "error at MessageContent watcher_id"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageContent.html).
  int? get distance {
    try {
      return (rawData["distance"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntityType.html).
class TextEntityType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntityType.html).
  TextEntityType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntityType.html).
  factory TextEntityType.create({
    String special_type = "textEntityTypeMention",
    String? language,
    String? url,
    int? user_id,
    int? custom_emoji_id,
    int? media_timestamp,
  }) {
    try {
      return TextEntityType({
        "@type": special_type,
        "language": language,
        "url": url,
        "user_id": user_id,
        "custom_emoji_id": custom_emoji_id,
        "media_timestamp": media_timestamp,
      });
    } catch (e) {
      return TextEntityType({
        "@type": "error",
        "error": "${e}",
        "message": "error method TextEntityType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntityType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntityType.html).
  String? get language {
    try {
      return (rawData["language"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntityType.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntityType.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntityType.html).
  int? get custom_emoji_id {
    try {
      return (rawData["custom_emoji_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextEntityType.html).
  int? get media_timestamp {
    try {
      return (rawData["media_timestamp"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputThumbnail.html).
class InputThumbnail {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputThumbnail.html).
  InputThumbnail(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputThumbnail.html).
  factory InputThumbnail.create({
    String special_type = "inputThumbnail",
    InputFile? thumbnail,
    int? width,
    int? height,
  }) {
    try {
      return InputThumbnail({
        "@type": special_type,
        "thumbnail": (thumbnail != null) ? thumbnail.toJson() : null,
        "width": width,
        "height": height,
      });
    } catch (e) {
      return InputThumbnail({
        "@type": "error",
        "error": "${e}",
        "message": "error method InputThumbnail.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputThumbnail.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputThumbnail.html).
  InputFile get thumbnail {
    try {
      return InputFile((rawData["thumbnail"] as Map));
    } catch (e) {
      return InputFile({"@type": "error", "error": "${e}", "message": "error at InputThumbnail thumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputThumbnail.html).
  int? get width {
    try {
      return (rawData["width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputThumbnail.html).
  int? get height {
    try {
      return (rawData["height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSchedulingState.html).
class MessageSchedulingState {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSchedulingState.html).
  MessageSchedulingState(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSchedulingState.html).
  factory MessageSchedulingState.create({
    String special_type = "messageSchedulingStateSendAtDate",
    int? send_date,
  }) {
    try {
      return MessageSchedulingState({
        "@type": special_type,
        "send_date": send_date,
      });
    } catch (e) {
      return MessageSchedulingState({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageSchedulingState.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSchedulingState.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSchedulingState.html).
  int? get send_date {
    try {
      return (rawData["send_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendOptions.html).
class MessageSendOptions {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendOptions.html).
  MessageSendOptions(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendOptions.html).
  factory MessageSendOptions.create({
    String special_type = "messageSendOptions",
    bool? disable_notification,
    bool? from_background,
    bool? protect_content,
    bool? update_order_of_installed_sticker_sets,
    MessageSchedulingState? scheduling_state,
  }) {
    try {
      return MessageSendOptions({
        "@type": special_type,
        "disable_notification": disable_notification,
        "from_background": from_background,
        "protect_content": protect_content,
        "update_order_of_installed_sticker_sets": update_order_of_installed_sticker_sets,
        "scheduling_state": (scheduling_state != null) ? scheduling_state.toJson() : null,
      });
    } catch (e) {
      return MessageSendOptions({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageSendOptions.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendOptions.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendOptions.html).
  bool? get disable_notification {
    try {
      return (rawData["disable_notification"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendOptions.html).
  bool? get from_background {
    try {
      return (rawData["from_background"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendOptions.html).
  bool? get protect_content {
    try {
      return (rawData["protect_content"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendOptions.html).
  bool? get update_order_of_installed_sticker_sets {
    try {
      return (rawData["update_order_of_installed_sticker_sets"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageSendOptions.html).
  MessageSchedulingState get scheduling_state {
    try {
      return MessageSchedulingState((rawData["scheduling_state"] as Map));
    } catch (e) {
      return MessageSchedulingState({"@type": "error", "error": "${e}", "message": "error at MessageSendOptions scheduling_state"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCopyOptions.html).
class MessageCopyOptions {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCopyOptions.html).
  MessageCopyOptions(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCopyOptions.html).
  factory MessageCopyOptions.create({
    String special_type = "messageCopyOptions",
    bool? send_copy,
    bool? replace_caption,
    FormattedText? new_caption,
  }) {
    try {
      return MessageCopyOptions({
        "@type": special_type,
        "send_copy": send_copy,
        "replace_caption": replace_caption,
        "new_caption": (new_caption != null) ? new_caption.toJson() : null,
      });
    } catch (e) {
      return MessageCopyOptions({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageCopyOptions.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCopyOptions.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCopyOptions.html).
  bool? get send_copy {
    try {
      return (rawData["send_copy"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCopyOptions.html).
  bool? get replace_caption {
    try {
      return (rawData["replace_caption"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageCopyOptions.html).
  FormattedText get new_caption {
    try {
      return FormattedText((rawData["new_caption"] as Map));
    } catch (e) {
      return FormattedText({"@type": "error", "error": "${e}", "message": "error at MessageCopyOptions new_caption"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
class InputMessageContent {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  InputMessageContent(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  factory InputMessageContent.create({
    String special_type = "inputMessageText",
    FormattedText? text,
    bool? disable_web_page_preview,
    bool? clear_draft,
    InputFile? animation,
    InputThumbnail? thumbnail,
    List<int>? added_sticker_file_ids,
    int? duration,
    int? width,
    int? height,
    FormattedText? caption,
    InputFile? audio,
    InputThumbnail? album_cover_thumbnail,
    String? title,
    String? performer,
    InputFile? document,
    bool? disable_content_type_detection,
    InputFile? photo,
    int? ttl,
    InputFile? sticker,
    String? emoji,
    InputFile? video,
    bool? supports_streaming,
    InputFile? video_note,
    int? length,
    InputFile? voice_note,
    String? waveform,
    Location? location,
    int? live_period,
    int? heading,
    int? proximity_alert_radius,
    Venue? venue,
    Contact? contact,
    int? bot_user_id,
    String? game_short_name,
    Invoice? invoice,
    String? description,
    String? photo_url,
    int? photo_size,
    int? photo_width,
    int? photo_height,
    String? payload,
    String? provider_token,
    String? provider_data,
    String? start_parameter,
    InputMessageContent? extended_media_content,
    String? question,
    List<String>? options,
    bool? is_anonymous,
    PollType? type,
    int? open_period,
    int? close_date,
    bool? is_closed,
    int? from_chat_id,
    int? message_id,
    bool? in_game_share,
    MessageCopyOptions? copy_options,
  }) {
    try {
      return InputMessageContent({
        "@type": special_type,
        "text": (text != null) ? text.toJson() : null,
        "disable_web_page_preview": disable_web_page_preview,
        "clear_draft": clear_draft,
        "animation": (animation != null) ? animation.toJson() : null,
        "thumbnail": (thumbnail != null) ? thumbnail.toJson() : null,
        "added_sticker_file_ids": added_sticker_file_ids,
        "duration": duration,
        "width": width,
        "height": height,
        "caption": (caption != null) ? caption.toJson() : null,
        "audio": (audio != null) ? audio.toJson() : null,
        "album_cover_thumbnail": (album_cover_thumbnail != null) ? album_cover_thumbnail.toJson() : null,
        "title": title,
        "performer": performer,
        "document": (document != null) ? document.toJson() : null,
        "disable_content_type_detection": disable_content_type_detection,
        "photo": (photo != null) ? photo.toJson() : null,
        "ttl": ttl,
        "sticker": (sticker != null) ? sticker.toJson() : null,
        "emoji": emoji,
        "video": (video != null) ? video.toJson() : null,
        "supports_streaming": supports_streaming,
        "video_note": (video_note != null) ? video_note.toJson() : null,
        "length": length,
        "voice_note": (voice_note != null) ? voice_note.toJson() : null,
        "waveform": waveform,
        "location": (location != null) ? location.toJson() : null,
        "live_period": live_period,
        "heading": heading,
        "proximity_alert_radius": proximity_alert_radius,
        "venue": (venue != null) ? venue.toJson() : null,
        "contact": (contact != null) ? contact.toJson() : null,
        "bot_user_id": bot_user_id,
        "game_short_name": game_short_name,
        "invoice": (invoice != null) ? invoice.toJson() : null,
        "description": description,
        "photo_url": photo_url,
        "photo_size": photo_size,
        "photo_width": photo_width,
        "photo_height": photo_height,
        "payload": payload,
        "provider_token": provider_token,
        "provider_data": provider_data,
        "start_parameter": start_parameter,
        "extended_media_content": (extended_media_content != null) ? extended_media_content.toJson() : null,
        "question": question,
        "options": options,
        "is_anonymous": is_anonymous,
        "type": (type != null) ? type.toJson() : null,
        "open_period": open_period,
        "close_date": close_date,
        "is_closed": is_closed,
        "from_chat_id": from_chat_id,
        "message_id": message_id,
        "in_game_share": in_game_share,
        "copy_options": (copy_options != null) ? copy_options.toJson() : null,
      });
    } catch (e) {
      return InputMessageContent({
        "@type": "error",
        "error": "${e}",
        "message": "error method InputMessageContent.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  FormattedText get text {
    try {
      return FormattedText((rawData["text"] as Map));
    } catch (e) {
      return FormattedText({"@type": "error", "error": "${e}", "message": "error at InputMessageContent text"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  bool? get disable_web_page_preview {
    try {
      return (rawData["disable_web_page_preview"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  bool? get clear_draft {
    try {
      return (rawData["clear_draft"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  InputFile get animation {
    try {
      return InputFile((rawData["animation"] as Map));
    } catch (e) {
      return InputFile({"@type": "error", "error": "${e}", "message": "error at InputMessageContent animation"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  InputThumbnail get thumbnail {
    try {
      return InputThumbnail((rawData["thumbnail"] as Map));
    } catch (e) {
      return InputThumbnail({"@type": "error", "error": "${e}", "message": "error at InputMessageContent thumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  List<int> get added_sticker_file_ids {
    try {
      return (rawData["added_sticker_file_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  int? get duration {
    try {
      return (rawData["duration"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  int? get width {
    try {
      return (rawData["width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  int? get height {
    try {
      return (rawData["height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  FormattedText get caption {
    try {
      return FormattedText((rawData["caption"] as Map));
    } catch (e) {
      return FormattedText({"@type": "error", "error": "${e}", "message": "error at InputMessageContent caption"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  InputFile get audio {
    try {
      return InputFile((rawData["audio"] as Map));
    } catch (e) {
      return InputFile({"@type": "error", "error": "${e}", "message": "error at InputMessageContent audio"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  InputThumbnail get album_cover_thumbnail {
    try {
      return InputThumbnail((rawData["album_cover_thumbnail"] as Map));
    } catch (e) {
      return InputThumbnail({"@type": "error", "error": "${e}", "message": "error at InputMessageContent album_cover_thumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  String? get performer {
    try {
      return (rawData["performer"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  InputFile get document {
    try {
      return InputFile((rawData["document"] as Map));
    } catch (e) {
      return InputFile({"@type": "error", "error": "${e}", "message": "error at InputMessageContent document"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  bool? get disable_content_type_detection {
    try {
      return (rawData["disable_content_type_detection"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  InputFile get photo {
    try {
      return InputFile((rawData["photo"] as Map));
    } catch (e) {
      return InputFile({"@type": "error", "error": "${e}", "message": "error at InputMessageContent photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  int? get ttl {
    try {
      return (rawData["ttl"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  InputFile get sticker {
    try {
      return InputFile((rawData["sticker"] as Map));
    } catch (e) {
      return InputFile({"@type": "error", "error": "${e}", "message": "error at InputMessageContent sticker"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  String? get emoji {
    try {
      return (rawData["emoji"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  InputFile get video {
    try {
      return InputFile((rawData["video"] as Map));
    } catch (e) {
      return InputFile({"@type": "error", "error": "${e}", "message": "error at InputMessageContent video"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  bool? get supports_streaming {
    try {
      return (rawData["supports_streaming"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  InputFile get video_note {
    try {
      return InputFile((rawData["video_note"] as Map));
    } catch (e) {
      return InputFile({"@type": "error", "error": "${e}", "message": "error at InputMessageContent video_note"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  int? get length {
    try {
      return (rawData["length"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  InputFile get voice_note {
    try {
      return InputFile((rawData["voice_note"] as Map));
    } catch (e) {
      return InputFile({"@type": "error", "error": "${e}", "message": "error at InputMessageContent voice_note"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  String? get waveform {
    try {
      return (rawData["waveform"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  Location get location {
    try {
      return Location((rawData["location"] as Map));
    } catch (e) {
      return Location({"@type": "error", "error": "${e}", "message": "error at InputMessageContent location"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  int? get live_period {
    try {
      return (rawData["live_period"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  int? get heading {
    try {
      return (rawData["heading"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  int? get proximity_alert_radius {
    try {
      return (rawData["proximity_alert_radius"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  Venue get venue {
    try {
      return Venue((rawData["venue"] as Map));
    } catch (e) {
      return Venue({"@type": "error", "error": "${e}", "message": "error at InputMessageContent venue"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  Contact get contact {
    try {
      return Contact((rawData["contact"] as Map));
    } catch (e) {
      return Contact({"@type": "error", "error": "${e}", "message": "error at InputMessageContent contact"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  int? get bot_user_id {
    try {
      return (rawData["bot_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  String? get game_short_name {
    try {
      return (rawData["game_short_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  Invoice get invoice {
    try {
      return Invoice((rawData["invoice"] as Map));
    } catch (e) {
      return Invoice({"@type": "error", "error": "${e}", "message": "error at InputMessageContent invoice"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  String? get description {
    try {
      return (rawData["description"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  String? get photo_url {
    try {
      return (rawData["photo_url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  int? get photo_size {
    try {
      return (rawData["photo_size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  int? get photo_width {
    try {
      return (rawData["photo_width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  int? get photo_height {
    try {
      return (rawData["photo_height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  String? get payload {
    try {
      return (rawData["payload"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  String? get provider_token {
    try {
      return (rawData["provider_token"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  String? get provider_data {
    try {
      return (rawData["provider_data"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  String? get start_parameter {
    try {
      return (rawData["start_parameter"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  InputMessageContent get extended_media_content {
    try {
      return InputMessageContent((rawData["extended_media_content"] as Map));
    } catch (e) {
      return InputMessageContent({"@type": "error", "error": "${e}", "message": "error at InputMessageContent extended_media_content"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  String? get question {
    try {
      return (rawData["question"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  List<String> get options {
    try {
      return (rawData["options"] as List).cast<String>();
    } catch (e) {
      return [].cast<String>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  bool? get is_anonymous {
    try {
      return (rawData["is_anonymous"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  PollType get type {
    try {
      return PollType((rawData["type"] as Map));
    } catch (e) {
      return PollType({"@type": "error", "error": "${e}", "message": "error at InputMessageContent type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  int? get open_period {
    try {
      return (rawData["open_period"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  int? get close_date {
    try {
      return (rawData["close_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  bool? get is_closed {
    try {
      return (rawData["is_closed"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  int? get from_chat_id {
    try {
      return (rawData["from_chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  int? get message_id {
    try {
      return (rawData["message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  bool? get in_game_share {
    try {
      return (rawData["in_game_share"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputMessageContent.html).
  MessageCopyOptions get copy_options {
    try {
      return MessageCopyOptions((rawData["copy_options"] as Map));
    } catch (e) {
      return MessageCopyOptions({"@type": "error", "error": "${e}", "message": "error at InputMessageContent copy_options"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SearchMessagesFilter.html).
class SearchMessagesFilter {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SearchMessagesFilter.html).
  SearchMessagesFilter(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SearchMessagesFilter.html).
  factory SearchMessagesFilter.create({
    String special_type = "searchMessagesFilterEmpty",
  }) {
    try {
      return SearchMessagesFilter({
        "@type": special_type,
      });
    } catch (e) {
      return SearchMessagesFilter({
        "@type": "error",
        "error": "${e}",
        "message": "error method SearchMessagesFilter.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SearchMessagesFilter.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAction.html).
class ChatAction {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAction.html).
  ChatAction(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAction.html).
  factory ChatAction.create({
    String special_type = "chatActionTyping",
    int? progress,
    String? emoji,
  }) {
    try {
      return ChatAction({
        "@type": special_type,
        "progress": progress,
        "emoji": emoji,
      });
    } catch (e) {
      return ChatAction({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatAction.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAction.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAction.html).
  int? get progress {
    try {
      return (rawData["progress"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatAction.html).
  String? get emoji {
    try {
      return (rawData["emoji"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserStatus.html).
class UserStatus {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserStatus.html).
  UserStatus(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserStatus.html).
  factory UserStatus.create({
    String special_type = "userStatusEmpty",
    int? expires,
    int? was_online,
  }) {
    try {
      return UserStatus({
        "@type": special_type,
        "expires": expires,
        "was_online": was_online,
      });
    } catch (e) {
      return UserStatus({
        "@type": "error",
        "error": "${e}",
        "message": "error method UserStatus.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserStatus.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserStatus.html).
  int? get expires {
    try {
      return (rawData["expires"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserStatus.html).
  int? get was_online {
    try {
      return (rawData["was_online"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Stickers.html).
class Stickers {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Stickers.html).
  Stickers(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Stickers.html).
  factory Stickers.create({
    String special_type = "stickers",
    List<Sticker>? stickers,
  }) {
    try {
      return Stickers({
        "@type": special_type,
        "stickers": (stickers != null)
            ? stickers.map((e) {
                return Sticker((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return Stickers({
        "@type": "error",
        "error": "${e}",
        "message": "error method Stickers.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Stickers.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Stickers.html).
  List<Sticker> get stickers {
    try {
      return (rawData["stickers"] as List)
          .map((e) {
            return Sticker((e as Map));
          })
          .toList()
          .cast<Sticker>();
    } catch (e) {
      return [
        Sticker({"@type": "error", "error": "${e}", "message": "error at Stickers stickers"})
      ].cast<Sticker>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Emojis.html).
class Emojis {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Emojis.html).
  Emojis(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Emojis.html).
  factory Emojis.create({
    String special_type = "emojis",
    List<String>? emojis,
  }) {
    try {
      return Emojis({
        "@type": special_type,
        "emojis": emojis,
      });
    } catch (e) {
      return Emojis({
        "@type": "error",
        "error": "${e}",
        "message": "error method Emojis.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Emojis.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Emojis.html).
  List<String> get emojis {
    try {
      return (rawData["emojis"] as List).cast<String>();
    } catch (e) {
      return [].cast<String>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSet.html).
class StickerSet {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSet.html).
  StickerSet(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSet.html).
  factory StickerSet.create({
    String special_type = "stickerSet",
    int? id,
    String? title,
    String? name,
    Thumbnail? thumbnail,
    List<ClosedVectorPath>? thumbnail_outline,
    bool? is_installed,
    bool? is_archived,
    bool? is_official,
    StickerFormat? sticker_format,
    StickerType? sticker_type,
    bool? is_viewed,
    List<Sticker>? stickers,
    List<Emojis>? emojis,
  }) {
    try {
      return StickerSet({
        "@type": special_type,
        "id": id,
        "title": title,
        "name": name,
        "thumbnail": (thumbnail != null) ? thumbnail.toJson() : null,
        "thumbnail_outline": (thumbnail_outline != null)
            ? thumbnail_outline.map((e) {
                return ClosedVectorPath((e as Map)).toJson();
              }).toList()
            : null,
        "is_installed": is_installed,
        "is_archived": is_archived,
        "is_official": is_official,
        "sticker_format": (sticker_format != null) ? sticker_format.toJson() : null,
        "sticker_type": (sticker_type != null) ? sticker_type.toJson() : null,
        "is_viewed": is_viewed,
        "stickers": (stickers != null)
            ? stickers.map((e) {
                return Sticker((e as Map)).toJson();
              }).toList()
            : null,
        "emojis": (emojis != null)
            ? emojis.map((e) {
                return Emojis((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return StickerSet({
        "@type": "error",
        "error": "${e}",
        "message": "error method StickerSet.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSet.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSet.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSet.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSet.html).
  String? get name {
    try {
      return (rawData["name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSet.html).
  Thumbnail get thumbnail {
    try {
      return Thumbnail((rawData["thumbnail"] as Map));
    } catch (e) {
      return Thumbnail({"@type": "error", "error": "${e}", "message": "error at StickerSet thumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSet.html).
  List<ClosedVectorPath> get thumbnail_outline {
    try {
      return (rawData["thumbnail_outline"] as List)
          .map((e) {
            return ClosedVectorPath((e as Map));
          })
          .toList()
          .cast<ClosedVectorPath>();
    } catch (e) {
      return [
        ClosedVectorPath({"@type": "error", "error": "${e}", "message": "error at StickerSet thumbnail_outline"})
      ].cast<ClosedVectorPath>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSet.html).
  bool? get is_installed {
    try {
      return (rawData["is_installed"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSet.html).
  bool? get is_archived {
    try {
      return (rawData["is_archived"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSet.html).
  bool? get is_official {
    try {
      return (rawData["is_official"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSet.html).
  StickerFormat get sticker_format {
    try {
      return StickerFormat((rawData["sticker_format"] as Map));
    } catch (e) {
      return StickerFormat({"@type": "error", "error": "${e}", "message": "error at StickerSet sticker_format"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSet.html).
  StickerType get sticker_type {
    try {
      return StickerType((rawData["sticker_type"] as Map));
    } catch (e) {
      return StickerType({"@type": "error", "error": "${e}", "message": "error at StickerSet sticker_type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSet.html).
  bool? get is_viewed {
    try {
      return (rawData["is_viewed"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSet.html).
  List<Sticker> get stickers {
    try {
      return (rawData["stickers"] as List)
          .map((e) {
            return Sticker((e as Map));
          })
          .toList()
          .cast<Sticker>();
    } catch (e) {
      return [
        Sticker({"@type": "error", "error": "${e}", "message": "error at StickerSet stickers"})
      ].cast<Sticker>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSet.html).
  List<Emojis> get emojis {
    try {
      return (rawData["emojis"] as List)
          .map((e) {
            return Emojis((e as Map));
          })
          .toList()
          .cast<Emojis>();
    } catch (e) {
      return [
        Emojis({"@type": "error", "error": "${e}", "message": "error at StickerSet emojis"})
      ].cast<Emojis>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSetInfo.html).
class StickerSetInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSetInfo.html).
  StickerSetInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSetInfo.html).
  factory StickerSetInfo.create({
    String special_type = "stickerSetInfo",
    int? id,
    String? title,
    String? name,
    Thumbnail? thumbnail,
    List<ClosedVectorPath>? thumbnail_outline,
    bool? is_installed,
    bool? is_archived,
    bool? is_official,
    StickerFormat? sticker_format,
    StickerType? sticker_type,
    bool? is_viewed,
    int? size,
    List<Sticker>? covers,
  }) {
    try {
      return StickerSetInfo({
        "@type": special_type,
        "id": id,
        "title": title,
        "name": name,
        "thumbnail": (thumbnail != null) ? thumbnail.toJson() : null,
        "thumbnail_outline": (thumbnail_outline != null)
            ? thumbnail_outline.map((e) {
                return ClosedVectorPath((e as Map)).toJson();
              }).toList()
            : null,
        "is_installed": is_installed,
        "is_archived": is_archived,
        "is_official": is_official,
        "sticker_format": (sticker_format != null) ? sticker_format.toJson() : null,
        "sticker_type": (sticker_type != null) ? sticker_type.toJson() : null,
        "is_viewed": is_viewed,
        "size": size,
        "covers": (covers != null)
            ? covers.map((e) {
                return Sticker((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return StickerSetInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method StickerSetInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSetInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSetInfo.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSetInfo.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSetInfo.html).
  String? get name {
    try {
      return (rawData["name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSetInfo.html).
  Thumbnail get thumbnail {
    try {
      return Thumbnail((rawData["thumbnail"] as Map));
    } catch (e) {
      return Thumbnail({"@type": "error", "error": "${e}", "message": "error at StickerSetInfo thumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSetInfo.html).
  List<ClosedVectorPath> get thumbnail_outline {
    try {
      return (rawData["thumbnail_outline"] as List)
          .map((e) {
            return ClosedVectorPath((e as Map));
          })
          .toList()
          .cast<ClosedVectorPath>();
    } catch (e) {
      return [
        ClosedVectorPath({"@type": "error", "error": "${e}", "message": "error at StickerSetInfo thumbnail_outline"})
      ].cast<ClosedVectorPath>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSetInfo.html).
  bool? get is_installed {
    try {
      return (rawData["is_installed"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSetInfo.html).
  bool? get is_archived {
    try {
      return (rawData["is_archived"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSetInfo.html).
  bool? get is_official {
    try {
      return (rawData["is_official"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSetInfo.html).
  StickerFormat get sticker_format {
    try {
      return StickerFormat((rawData["sticker_format"] as Map));
    } catch (e) {
      return StickerFormat({"@type": "error", "error": "${e}", "message": "error at StickerSetInfo sticker_format"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSetInfo.html).
  StickerType get sticker_type {
    try {
      return StickerType((rawData["sticker_type"] as Map));
    } catch (e) {
      return StickerType({"@type": "error", "error": "${e}", "message": "error at StickerSetInfo sticker_type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSetInfo.html).
  bool? get is_viewed {
    try {
      return (rawData["is_viewed"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSetInfo.html).
  int? get size {
    try {
      return (rawData["size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSetInfo.html).
  List<Sticker> get covers {
    try {
      return (rawData["covers"] as List)
          .map((e) {
            return Sticker((e as Map));
          })
          .toList()
          .cast<Sticker>();
    } catch (e) {
      return [
        Sticker({"@type": "error", "error": "${e}", "message": "error at StickerSetInfo covers"})
      ].cast<Sticker>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSets.html).
class StickerSets {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSets.html).
  StickerSets(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSets.html).
  factory StickerSets.create({
    String special_type = "stickerSets",
    int? total_count,
    List<StickerSetInfo>? sets,
  }) {
    try {
      return StickerSets({
        "@type": special_type,
        "total_count": total_count,
        "sets": (sets != null)
            ? sets.map((e) {
                return StickerSetInfo((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return StickerSets({
        "@type": "error",
        "error": "${e}",
        "message": "error method StickerSets.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSets.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSets.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StickerSets.html).
  List<StickerSetInfo> get sets {
    try {
      return (rawData["sets"] as List)
          .map((e) {
            return StickerSetInfo((e as Map));
          })
          .toList()
          .cast<StickerSetInfo>();
    } catch (e) {
      return [
        StickerSetInfo({"@type": "error", "error": "${e}", "message": "error at StickerSets sets"})
      ].cast<StickerSetInfo>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TrendingStickerSets.html).
class TrendingStickerSets {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TrendingStickerSets.html).
  TrendingStickerSets(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TrendingStickerSets.html).
  factory TrendingStickerSets.create({
    String special_type = "trendingStickerSets",
    int? total_count,
    List<StickerSetInfo>? sets,
    bool? is_premium,
  }) {
    try {
      return TrendingStickerSets({
        "@type": special_type,
        "total_count": total_count,
        "sets": (sets != null)
            ? sets.map((e) {
                return StickerSetInfo((e as Map)).toJson();
              }).toList()
            : null,
        "is_premium": is_premium,
      });
    } catch (e) {
      return TrendingStickerSets({
        "@type": "error",
        "error": "${e}",
        "message": "error method TrendingStickerSets.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TrendingStickerSets.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TrendingStickerSets.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TrendingStickerSets.html).
  List<StickerSetInfo> get sets {
    try {
      return (rawData["sets"] as List)
          .map((e) {
            return StickerSetInfo((e as Map));
          })
          .toList()
          .cast<StickerSetInfo>();
    } catch (e) {
      return [
        StickerSetInfo({"@type": "error", "error": "${e}", "message": "error at TrendingStickerSets sets"})
      ].cast<StickerSetInfo>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TrendingStickerSets.html).
  bool? get is_premium {
    try {
      return (rawData["is_premium"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallDiscardReason.html).
class CallDiscardReason {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallDiscardReason.html).
  CallDiscardReason(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallDiscardReason.html).
  factory CallDiscardReason.create({
    String special_type = "callDiscardReasonEmpty",
  }) {
    try {
      return CallDiscardReason({
        "@type": special_type,
      });
    } catch (e) {
      return CallDiscardReason({
        "@type": "error",
        "error": "${e}",
        "message": "error method CallDiscardReason.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallDiscardReason.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallProtocol.html).
class CallProtocol {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallProtocol.html).
  CallProtocol(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallProtocol.html).
  factory CallProtocol.create({
    String special_type = "callProtocol",
    bool? udp_p2p,
    bool? udp_reflector,
    int? min_layer,
    int? max_layer,
    List<String>? library_versions,
  }) {
    try {
      return CallProtocol({
        "@type": special_type,
        "udp_p2p": udp_p2p,
        "udp_reflector": udp_reflector,
        "min_layer": min_layer,
        "max_layer": max_layer,
        "library_versions": library_versions,
      });
    } catch (e) {
      return CallProtocol({
        "@type": "error",
        "error": "${e}",
        "message": "error method CallProtocol.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallProtocol.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallProtocol.html).
  bool? get udp_p2p {
    try {
      return (rawData["udp_p2p"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallProtocol.html).
  bool? get udp_reflector {
    try {
      return (rawData["udp_reflector"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallProtocol.html).
  int? get min_layer {
    try {
      return (rawData["min_layer"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallProtocol.html).
  int? get max_layer {
    try {
      return (rawData["max_layer"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallProtocol.html).
  List<String> get library_versions {
    try {
      return (rawData["library_versions"] as List).cast<String>();
    } catch (e) {
      return [].cast<String>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServerType.html).
class CallServerType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServerType.html).
  CallServerType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServerType.html).
  factory CallServerType.create({
    String special_type = "callServerTypeTelegramReflector",
    String? peer_tag,
    bool? is_tcp,
    String? username,
    String? password,
    bool? supports_turn,
    bool? supports_stun,
  }) {
    try {
      return CallServerType({
        "@type": special_type,
        "peer_tag": peer_tag,
        "is_tcp": is_tcp,
        "username": username,
        "password": password,
        "supports_turn": supports_turn,
        "supports_stun": supports_stun,
      });
    } catch (e) {
      return CallServerType({
        "@type": "error",
        "error": "${e}",
        "message": "error method CallServerType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServerType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServerType.html).
  String? get peer_tag {
    try {
      return (rawData["peer_tag"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServerType.html).
  bool? get is_tcp {
    try {
      return (rawData["is_tcp"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServerType.html).
  String? get username {
    try {
      return (rawData["username"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServerType.html).
  String? get password {
    try {
      return (rawData["password"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServerType.html).
  bool? get supports_turn {
    try {
      return (rawData["supports_turn"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServerType.html).
  bool? get supports_stun {
    try {
      return (rawData["supports_stun"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServer.html).
class CallServer {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServer.html).
  CallServer(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServer.html).
  factory CallServer.create({
    String special_type = "callServer",
    int? id,
    String? ip_address,
    String? ipv6_address,
    int? port,
    CallServerType? type,
  }) {
    try {
      return CallServer({
        "@type": special_type,
        "id": id,
        "ip_address": ip_address,
        "ipv6_address": ipv6_address,
        "port": port,
        "type": (type != null) ? type.toJson() : null,
      });
    } catch (e) {
      return CallServer({
        "@type": "error",
        "error": "${e}",
        "message": "error method CallServer.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServer.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServer.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServer.html).
  String? get ip_address {
    try {
      return (rawData["ip_address"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServer.html).
  String? get ipv6_address {
    try {
      return (rawData["ipv6_address"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServer.html).
  int? get port {
    try {
      return (rawData["port"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallServer.html).
  CallServerType get type {
    try {
      return CallServerType((rawData["type"] as Map));
    } catch (e) {
      return CallServerType({"@type": "error", "error": "${e}", "message": "error at CallServer type"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallId.html).
class CallId {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallId.html).
  CallId(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallId.html).
  factory CallId.create({
    String special_type = "callId",
    int? id,
  }) {
    try {
      return CallId({
        "@type": special_type,
        "id": id,
      });
    } catch (e) {
      return CallId({
        "@type": "error",
        "error": "${e}",
        "message": "error method CallId.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallId.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallId.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallId.html).
class GroupCallId {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallId.html).
  GroupCallId(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallId.html).
  factory GroupCallId.create({
    String special_type = "groupCallId",
    int? id,
  }) {
    try {
      return GroupCallId({
        "@type": special_type,
        "id": id,
      });
    } catch (e) {
      return GroupCallId({
        "@type": "error",
        "error": "${e}",
        "message": "error method GroupCallId.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallId.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallId.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallState.html).
class CallState {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallState.html).
  CallState(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallState.html).
  factory CallState.create({
    String special_type = "callStatePending",
    bool? is_created,
    bool? is_received,
    CallProtocol? protocol,
    List<CallServer>? servers,
    String? config,
    String? encryption_key,
    List<String>? emojis,
    bool? allow_p2p,
    CallDiscardReason? reason,
    bool? need_rating,
    bool? need_debug_information,
    bool? need_log,
    Error? error,
  }) {
    try {
      return CallState({
        "@type": special_type,
        "is_created": is_created,
        "is_received": is_received,
        "protocol": (protocol != null) ? protocol.toJson() : null,
        "servers": (servers != null)
            ? servers.map((e) {
                return CallServer((e as Map)).toJson();
              }).toList()
            : null,
        "config": config,
        "encryption_key": encryption_key,
        "emojis": emojis,
        "allow_p2p": allow_p2p,
        "reason": (reason != null) ? reason.toJson() : null,
        "need_rating": need_rating,
        "need_debug_information": need_debug_information,
        "need_log": need_log,
        "error": (error != null) ? error.toJson() : null,
      });
    } catch (e) {
      return CallState({
        "@type": "error",
        "error": "${e}",
        "message": "error method CallState.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallState.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallState.html).
  bool? get is_created {
    try {
      return (rawData["is_created"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallState.html).
  bool? get is_received {
    try {
      return (rawData["is_received"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallState.html).
  CallProtocol get protocol {
    try {
      return CallProtocol((rawData["protocol"] as Map));
    } catch (e) {
      return CallProtocol({"@type": "error", "error": "${e}", "message": "error at CallState protocol"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallState.html).
  List<CallServer> get servers {
    try {
      return (rawData["servers"] as List)
          .map((e) {
            return CallServer((e as Map));
          })
          .toList()
          .cast<CallServer>();
    } catch (e) {
      return [
        CallServer({"@type": "error", "error": "${e}", "message": "error at CallState servers"})
      ].cast<CallServer>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallState.html).
  String? get config {
    try {
      return (rawData["config"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallState.html).
  String? get encryption_key {
    try {
      return (rawData["encryption_key"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallState.html).
  List<String> get emojis {
    try {
      return (rawData["emojis"] as List).cast<String>();
    } catch (e) {
      return [].cast<String>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallState.html).
  bool? get allow_p2p {
    try {
      return (rawData["allow_p2p"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallState.html).
  CallDiscardReason get reason {
    try {
      return CallDiscardReason((rawData["reason"] as Map));
    } catch (e) {
      return CallDiscardReason({"@type": "error", "error": "${e}", "message": "error at CallState reason"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallState.html).
  bool? get need_rating {
    try {
      return (rawData["need_rating"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallState.html).
  bool? get need_debug_information {
    try {
      return (rawData["need_debug_information"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallState.html).
  bool? get need_log {
    try {
      return (rawData["need_log"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallState.html).
  Error get error {
    try {
      return Error((rawData["error"] as Map));
    } catch (e) {
      return Error({"@type": "error", "error": "${e}", "message": "error at CallState error"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallVideoQuality.html).
class GroupCallVideoQuality {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallVideoQuality.html).
  GroupCallVideoQuality(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallVideoQuality.html).
  factory GroupCallVideoQuality.create({
    String special_type = "groupCallVideoQualityThumbnail",
  }) {
    try {
      return GroupCallVideoQuality({
        "@type": special_type,
      });
    } catch (e) {
      return GroupCallVideoQuality({
        "@type": "error",
        "error": "${e}",
        "message": "error method GroupCallVideoQuality.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallVideoQuality.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallStream.html).
class GroupCallStream {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallStream.html).
  GroupCallStream(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallStream.html).
  factory GroupCallStream.create({
    String special_type = "groupCallStream",
    int? channel_id,
    int? scale,
    int? time_offset,
  }) {
    try {
      return GroupCallStream({
        "@type": special_type,
        "channel_id": channel_id,
        "scale": scale,
        "time_offset": time_offset,
      });
    } catch (e) {
      return GroupCallStream({
        "@type": "error",
        "error": "${e}",
        "message": "error method GroupCallStream.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallStream.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallStream.html).
  int? get channel_id {
    try {
      return (rawData["channel_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallStream.html).
  int? get scale {
    try {
      return (rawData["scale"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallStream.html).
  int? get time_offset {
    try {
      return (rawData["time_offset"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallStreams.html).
class GroupCallStreams {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallStreams.html).
  GroupCallStreams(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallStreams.html).
  factory GroupCallStreams.create({
    String special_type = "groupCallStreams",
    List<GroupCallStream>? streams,
  }) {
    try {
      return GroupCallStreams({
        "@type": special_type,
        "streams": (streams != null)
            ? streams.map((e) {
                return GroupCallStream((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return GroupCallStreams({
        "@type": "error",
        "error": "${e}",
        "message": "error method GroupCallStreams.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallStreams.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallStreams.html).
  List<GroupCallStream> get streams {
    try {
      return (rawData["streams"] as List)
          .map((e) {
            return GroupCallStream((e as Map));
          })
          .toList()
          .cast<GroupCallStream>();
    } catch (e) {
      return [
        GroupCallStream({"@type": "error", "error": "${e}", "message": "error at GroupCallStreams streams"})
      ].cast<GroupCallStream>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RtmpUrl.html).
class RtmpUrl {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RtmpUrl.html).
  RtmpUrl(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RtmpUrl.html).
  factory RtmpUrl.create({
    String special_type = "rtmpUrl",
    String? url,
    String? stream_key,
  }) {
    try {
      return RtmpUrl({
        "@type": special_type,
        "url": url,
        "stream_key": stream_key,
      });
    } catch (e) {
      return RtmpUrl({
        "@type": "error",
        "error": "${e}",
        "message": "error method RtmpUrl.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RtmpUrl.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RtmpUrl.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1RtmpUrl.html).
  String? get stream_key {
    try {
      return (rawData["stream_key"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallRecentSpeaker.html).
class GroupCallRecentSpeaker {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallRecentSpeaker.html).
  GroupCallRecentSpeaker(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallRecentSpeaker.html).
  factory GroupCallRecentSpeaker.create({
    String special_type = "groupCallRecentSpeaker",
    MessageSender? participant_id,
    bool? is_speaking,
  }) {
    try {
      return GroupCallRecentSpeaker({
        "@type": special_type,
        "participant_id": (participant_id != null) ? participant_id.toJson() : null,
        "is_speaking": is_speaking,
      });
    } catch (e) {
      return GroupCallRecentSpeaker({
        "@type": "error",
        "error": "${e}",
        "message": "error method GroupCallRecentSpeaker.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallRecentSpeaker.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallRecentSpeaker.html).
  MessageSender get participant_id {
    try {
      return MessageSender((rawData["participant_id"] as Map));
    } catch (e) {
      return MessageSender({"@type": "error", "error": "${e}", "message": "error at GroupCallRecentSpeaker participant_id"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallRecentSpeaker.html).
  bool? get is_speaking {
    try {
      return (rawData["is_speaking"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
class GroupCall {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  GroupCall(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  factory GroupCall.create({
    String special_type = "groupCall",
    int? id,
    String? title,
    int? scheduled_start_date,
    bool? enabled_start_notification,
    bool? is_active,
    bool? is_rtmp_stream,
    bool? is_joined,
    bool? need_rejoin,
    bool? can_be_managed,
    int? participant_count,
    bool? has_hidden_listeners,
    bool? loaded_all_participants,
    List<GroupCallRecentSpeaker>? recent_speakers,
    bool? is_my_video_enabled,
    bool? is_my_video_paused,
    bool? can_enable_video,
    bool? mute_new_participants,
    bool? can_toggle_mute_new_participants,
    int? record_duration,
    bool? is_video_recorded,
    int? duration,
  }) {
    try {
      return GroupCall({
        "@type": special_type,
        "id": id,
        "title": title,
        "scheduled_start_date": scheduled_start_date,
        "enabled_start_notification": enabled_start_notification,
        "is_active": is_active,
        "is_rtmp_stream": is_rtmp_stream,
        "is_joined": is_joined,
        "need_rejoin": need_rejoin,
        "can_be_managed": can_be_managed,
        "participant_count": participant_count,
        "has_hidden_listeners": has_hidden_listeners,
        "loaded_all_participants": loaded_all_participants,
        "recent_speakers": (recent_speakers != null)
            ? recent_speakers.map((e) {
                return GroupCallRecentSpeaker((e as Map)).toJson();
              }).toList()
            : null,
        "is_my_video_enabled": is_my_video_enabled,
        "is_my_video_paused": is_my_video_paused,
        "can_enable_video": can_enable_video,
        "mute_new_participants": mute_new_participants,
        "can_toggle_mute_new_participants": can_toggle_mute_new_participants,
        "record_duration": record_duration,
        "is_video_recorded": is_video_recorded,
        "duration": duration,
      });
    } catch (e) {
      return GroupCall({
        "@type": "error",
        "error": "${e}",
        "message": "error method GroupCall.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  int? get scheduled_start_date {
    try {
      return (rawData["scheduled_start_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  bool? get enabled_start_notification {
    try {
      return (rawData["enabled_start_notification"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  bool? get is_active {
    try {
      return (rawData["is_active"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  bool? get is_rtmp_stream {
    try {
      return (rawData["is_rtmp_stream"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  bool? get is_joined {
    try {
      return (rawData["is_joined"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  bool? get need_rejoin {
    try {
      return (rawData["need_rejoin"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  bool? get can_be_managed {
    try {
      return (rawData["can_be_managed"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  int? get participant_count {
    try {
      return (rawData["participant_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  bool? get has_hidden_listeners {
    try {
      return (rawData["has_hidden_listeners"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  bool? get loaded_all_participants {
    try {
      return (rawData["loaded_all_participants"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  List<GroupCallRecentSpeaker> get recent_speakers {
    try {
      return (rawData["recent_speakers"] as List)
          .map((e) {
            return GroupCallRecentSpeaker((e as Map));
          })
          .toList()
          .cast<GroupCallRecentSpeaker>();
    } catch (e) {
      return [
        GroupCallRecentSpeaker({"@type": "error", "error": "${e}", "message": "error at GroupCall recent_speakers"})
      ].cast<GroupCallRecentSpeaker>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  bool? get is_my_video_enabled {
    try {
      return (rawData["is_my_video_enabled"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  bool? get is_my_video_paused {
    try {
      return (rawData["is_my_video_paused"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  bool? get can_enable_video {
    try {
      return (rawData["can_enable_video"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  bool? get mute_new_participants {
    try {
      return (rawData["mute_new_participants"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  bool? get can_toggle_mute_new_participants {
    try {
      return (rawData["can_toggle_mute_new_participants"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  int? get record_duration {
    try {
      return (rawData["record_duration"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  bool? get is_video_recorded {
    try {
      return (rawData["is_video_recorded"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCall.html).
  int? get duration {
    try {
      return (rawData["duration"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallVideoSourceGroup.html).
class GroupCallVideoSourceGroup {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallVideoSourceGroup.html).
  GroupCallVideoSourceGroup(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallVideoSourceGroup.html).
  factory GroupCallVideoSourceGroup.create({
    String special_type = "groupCallVideoSourceGroup",
    String? semantics,
    List<int>? source_ids,
  }) {
    try {
      return GroupCallVideoSourceGroup({
        "@type": special_type,
        "semantics": semantics,
        "source_ids": source_ids,
      });
    } catch (e) {
      return GroupCallVideoSourceGroup({
        "@type": "error",
        "error": "${e}",
        "message": "error method GroupCallVideoSourceGroup.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallVideoSourceGroup.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallVideoSourceGroup.html).
  String? get semantics {
    try {
      return (rawData["semantics"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallVideoSourceGroup.html).
  List<int> get source_ids {
    try {
      return (rawData["source_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipantVideoInfo.html).
class GroupCallParticipantVideoInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipantVideoInfo.html).
  GroupCallParticipantVideoInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipantVideoInfo.html).
  factory GroupCallParticipantVideoInfo.create({
    String special_type = "groupCallParticipantVideoInfo",
    List<GroupCallVideoSourceGroup>? source_groups,
    String? endpoint_id,
    bool? is_paused,
  }) {
    try {
      return GroupCallParticipantVideoInfo({
        "@type": special_type,
        "source_groups": (source_groups != null)
            ? source_groups.map((e) {
                return GroupCallVideoSourceGroup((e as Map)).toJson();
              }).toList()
            : null,
        "endpoint_id": endpoint_id,
        "is_paused": is_paused,
      });
    } catch (e) {
      return GroupCallParticipantVideoInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method GroupCallParticipantVideoInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipantVideoInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipantVideoInfo.html).
  List<GroupCallVideoSourceGroup> get source_groups {
    try {
      return (rawData["source_groups"] as List)
          .map((e) {
            return GroupCallVideoSourceGroup((e as Map));
          })
          .toList()
          .cast<GroupCallVideoSourceGroup>();
    } catch (e) {
      return [
        GroupCallVideoSourceGroup({"@type": "error", "error": "${e}", "message": "error at GroupCallParticipantVideoInfo source_groups"})
      ].cast<GroupCallVideoSourceGroup>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipantVideoInfo.html).
  String? get endpoint_id {
    try {
      return (rawData["endpoint_id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipantVideoInfo.html).
  bool? get is_paused {
    try {
      return (rawData["is_paused"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
class GroupCallParticipant {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  GroupCallParticipant(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  factory GroupCallParticipant.create({
    String special_type = "groupCallParticipant",
    MessageSender? participant_id,
    int? audio_source_id,
    int? screen_sharing_audio_source_id,
    GroupCallParticipantVideoInfo? video_info,
    GroupCallParticipantVideoInfo? screen_sharing_video_info,
    String? bio,
    bool? is_current_user,
    bool? is_speaking,
    bool? is_hand_raised,
    bool? can_be_muted_for_all_users,
    bool? can_be_unmuted_for_all_users,
    bool? can_be_muted_for_current_user,
    bool? can_be_unmuted_for_current_user,
    bool? is_muted_for_all_users,
    bool? is_muted_for_current_user,
    bool? can_unmute_self,
    int? volume_level,
    String? order,
  }) {
    try {
      return GroupCallParticipant({
        "@type": special_type,
        "participant_id": (participant_id != null) ? participant_id.toJson() : null,
        "audio_source_id": audio_source_id,
        "screen_sharing_audio_source_id": screen_sharing_audio_source_id,
        "video_info": (video_info != null) ? video_info.toJson() : null,
        "screen_sharing_video_info": (screen_sharing_video_info != null) ? screen_sharing_video_info.toJson() : null,
        "bio": bio,
        "is_current_user": is_current_user,
        "is_speaking": is_speaking,
        "is_hand_raised": is_hand_raised,
        "can_be_muted_for_all_users": can_be_muted_for_all_users,
        "can_be_unmuted_for_all_users": can_be_unmuted_for_all_users,
        "can_be_muted_for_current_user": can_be_muted_for_current_user,
        "can_be_unmuted_for_current_user": can_be_unmuted_for_current_user,
        "is_muted_for_all_users": is_muted_for_all_users,
        "is_muted_for_current_user": is_muted_for_current_user,
        "can_unmute_self": can_unmute_self,
        "volume_level": volume_level,
        "order": order,
      });
    } catch (e) {
      return GroupCallParticipant({
        "@type": "error",
        "error": "${e}",
        "message": "error method GroupCallParticipant.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  MessageSender get participant_id {
    try {
      return MessageSender((rawData["participant_id"] as Map));
    } catch (e) {
      return MessageSender({"@type": "error", "error": "${e}", "message": "error at GroupCallParticipant participant_id"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  int? get audio_source_id {
    try {
      return (rawData["audio_source_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  int? get screen_sharing_audio_source_id {
    try {
      return (rawData["screen_sharing_audio_source_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  GroupCallParticipantVideoInfo get video_info {
    try {
      return GroupCallParticipantVideoInfo((rawData["video_info"] as Map));
    } catch (e) {
      return GroupCallParticipantVideoInfo({"@type": "error", "error": "${e}", "message": "error at GroupCallParticipant video_info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  GroupCallParticipantVideoInfo get screen_sharing_video_info {
    try {
      return GroupCallParticipantVideoInfo((rawData["screen_sharing_video_info"] as Map));
    } catch (e) {
      return GroupCallParticipantVideoInfo({"@type": "error", "error": "${e}", "message": "error at GroupCallParticipant screen_sharing_video_info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  String? get bio {
    try {
      return (rawData["bio"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  bool? get is_current_user {
    try {
      return (rawData["is_current_user"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  bool? get is_speaking {
    try {
      return (rawData["is_speaking"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  bool? get is_hand_raised {
    try {
      return (rawData["is_hand_raised"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  bool? get can_be_muted_for_all_users {
    try {
      return (rawData["can_be_muted_for_all_users"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  bool? get can_be_unmuted_for_all_users {
    try {
      return (rawData["can_be_unmuted_for_all_users"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  bool? get can_be_muted_for_current_user {
    try {
      return (rawData["can_be_muted_for_current_user"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  bool? get can_be_unmuted_for_current_user {
    try {
      return (rawData["can_be_unmuted_for_current_user"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  bool? get is_muted_for_all_users {
    try {
      return (rawData["is_muted_for_all_users"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  bool? get is_muted_for_current_user {
    try {
      return (rawData["is_muted_for_current_user"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  bool? get can_unmute_self {
    try {
      return (rawData["can_unmute_self"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  int? get volume_level {
    try {
      return (rawData["volume_level"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GroupCallParticipant.html).
  String? get order {
    try {
      return (rawData["order"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallProblem.html).
class CallProblem {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallProblem.html).
  CallProblem(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallProblem.html).
  factory CallProblem.create({
    String special_type = "callProblemEcho",
  }) {
    try {
      return CallProblem({
        "@type": special_type,
      });
    } catch (e) {
      return CallProblem({
        "@type": "error",
        "error": "${e}",
        "message": "error method CallProblem.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallProblem.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Call.html).
class Call {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Call.html).
  Call(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Call.html).
  factory Call.create({
    String special_type = "call",
    int? id,
    int? user_id,
    bool? is_outgoing,
    bool? is_video,
    CallState? state,
  }) {
    try {
      return Call({
        "@type": special_type,
        "id": id,
        "user_id": user_id,
        "is_outgoing": is_outgoing,
        "is_video": is_video,
        "state": (state != null) ? state.toJson() : null,
      });
    } catch (e) {
      return Call({
        "@type": "error",
        "error": "${e}",
        "message": "error method Call.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Call.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Call.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Call.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Call.html).
  bool? get is_outgoing {
    try {
      return (rawData["is_outgoing"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Call.html).
  bool? get is_video {
    try {
      return (rawData["is_video"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Call.html).
  CallState get state {
    try {
      return CallState((rawData["state"] as Map));
    } catch (e) {
      return CallState({"@type": "error", "error": "${e}", "message": "error at Call state"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhoneNumberAuthenticationSettings.html).
class PhoneNumberAuthenticationSettings {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhoneNumberAuthenticationSettings.html).
  PhoneNumberAuthenticationSettings(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhoneNumberAuthenticationSettings.html).
  factory PhoneNumberAuthenticationSettings.create({
    String special_type = "phoneNumberAuthenticationSettings",
    bool? allow_flash_call,
    bool? allow_missed_call,
    bool? is_current_phone_number,
    bool? allow_sms_retriever_api,
    List<String>? authentication_tokens,
  }) {
    try {
      return PhoneNumberAuthenticationSettings({
        "@type": special_type,
        "allow_flash_call": allow_flash_call,
        "allow_missed_call": allow_missed_call,
        "is_current_phone_number": is_current_phone_number,
        "allow_sms_retriever_api": allow_sms_retriever_api,
        "authentication_tokens": authentication_tokens,
      });
    } catch (e) {
      return PhoneNumberAuthenticationSettings({
        "@type": "error",
        "error": "${e}",
        "message": "error method PhoneNumberAuthenticationSettings.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhoneNumberAuthenticationSettings.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhoneNumberAuthenticationSettings.html).
  bool? get allow_flash_call {
    try {
      return (rawData["allow_flash_call"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhoneNumberAuthenticationSettings.html).
  bool? get allow_missed_call {
    try {
      return (rawData["allow_missed_call"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhoneNumberAuthenticationSettings.html).
  bool? get is_current_phone_number {
    try {
      return (rawData["is_current_phone_number"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhoneNumberAuthenticationSettings.html).
  bool? get allow_sms_retriever_api {
    try {
      return (rawData["allow_sms_retriever_api"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PhoneNumberAuthenticationSettings.html).
  List<String> get authentication_tokens {
    try {
      return (rawData["authentication_tokens"] as List).cast<String>();
    } catch (e) {
      return [].cast<String>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AddedReaction.html).
class AddedReaction {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AddedReaction.html).
  AddedReaction(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AddedReaction.html).
  factory AddedReaction.create({
    String special_type = "addedReaction",
    ReactionType? type,
    MessageSender? sender_id,
  }) {
    try {
      return AddedReaction({
        "@type": special_type,
        "type": (type != null) ? type.toJson() : null,
        "sender_id": (sender_id != null) ? sender_id.toJson() : null,
      });
    } catch (e) {
      return AddedReaction({
        "@type": "error",
        "error": "${e}",
        "message": "error method AddedReaction.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AddedReaction.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AddedReaction.html).
  ReactionType get type {
    try {
      return ReactionType((rawData["type"] as Map));
    } catch (e) {
      return ReactionType({"@type": "error", "error": "${e}", "message": "error at AddedReaction type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AddedReaction.html).
  MessageSender get sender_id {
    try {
      return MessageSender((rawData["sender_id"] as Map));
    } catch (e) {
      return MessageSender({"@type": "error", "error": "${e}", "message": "error at AddedReaction sender_id"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AddedReactions.html).
class AddedReactions {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AddedReactions.html).
  AddedReactions(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AddedReactions.html).
  factory AddedReactions.create({
    String special_type = "addedReactions",
    int? total_count,
    List<AddedReaction>? reactions,
    String? next_offset,
  }) {
    try {
      return AddedReactions({
        "@type": special_type,
        "total_count": total_count,
        "reactions": (reactions != null)
            ? reactions.map((e) {
                return AddedReaction((e as Map)).toJson();
              }).toList()
            : null,
        "next_offset": next_offset,
      });
    } catch (e) {
      return AddedReactions({
        "@type": "error",
        "error": "${e}",
        "message": "error method AddedReactions.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AddedReactions.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AddedReactions.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AddedReactions.html).
  List<AddedReaction> get reactions {
    try {
      return (rawData["reactions"] as List)
          .map((e) {
            return AddedReaction((e as Map));
          })
          .toList()
          .cast<AddedReaction>();
    } catch (e) {
      return [
        AddedReaction({"@type": "error", "error": "${e}", "message": "error at AddedReactions reactions"})
      ].cast<AddedReaction>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AddedReactions.html).
  String? get next_offset {
    try {
      return (rawData["next_offset"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AvailableReaction.html).
class AvailableReaction {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AvailableReaction.html).
  AvailableReaction(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AvailableReaction.html).
  factory AvailableReaction.create({
    String special_type = "availableReaction",
    ReactionType? type,
    bool? needs_premium,
  }) {
    try {
      return AvailableReaction({
        "@type": special_type,
        "type": (type != null) ? type.toJson() : null,
        "needs_premium": needs_premium,
      });
    } catch (e) {
      return AvailableReaction({
        "@type": "error",
        "error": "${e}",
        "message": "error method AvailableReaction.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AvailableReaction.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AvailableReaction.html).
  ReactionType get type {
    try {
      return ReactionType((rawData["type"] as Map));
    } catch (e) {
      return ReactionType({"@type": "error", "error": "${e}", "message": "error at AvailableReaction type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AvailableReaction.html).
  bool? get needs_premium {
    try {
      return (rawData["needs_premium"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AvailableReactions.html).
class AvailableReactions {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AvailableReactions.html).
  AvailableReactions(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AvailableReactions.html).
  factory AvailableReactions.create({
    String special_type = "availableReactions",
    List<AvailableReaction>? top_reactions,
    List<AvailableReaction>? recent_reactions,
    List<AvailableReaction>? popular_reactions,
    bool? allow_custom_emoji,
  }) {
    try {
      return AvailableReactions({
        "@type": special_type,
        "top_reactions": (top_reactions != null)
            ? top_reactions.map((e) {
                return AvailableReaction((e as Map)).toJson();
              }).toList()
            : null,
        "recent_reactions": (recent_reactions != null)
            ? recent_reactions.map((e) {
                return AvailableReaction((e as Map)).toJson();
              }).toList()
            : null,
        "popular_reactions": (popular_reactions != null)
            ? popular_reactions.map((e) {
                return AvailableReaction((e as Map)).toJson();
              }).toList()
            : null,
        "allow_custom_emoji": allow_custom_emoji,
      });
    } catch (e) {
      return AvailableReactions({
        "@type": "error",
        "error": "${e}",
        "message": "error method AvailableReactions.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AvailableReactions.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AvailableReactions.html).
  List<AvailableReaction> get top_reactions {
    try {
      return (rawData["top_reactions"] as List)
          .map((e) {
            return AvailableReaction((e as Map));
          })
          .toList()
          .cast<AvailableReaction>();
    } catch (e) {
      return [
        AvailableReaction({"@type": "error", "error": "${e}", "message": "error at AvailableReactions top_reactions"})
      ].cast<AvailableReaction>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AvailableReactions.html).
  List<AvailableReaction> get recent_reactions {
    try {
      return (rawData["recent_reactions"] as List)
          .map((e) {
            return AvailableReaction((e as Map));
          })
          .toList()
          .cast<AvailableReaction>();
    } catch (e) {
      return [
        AvailableReaction({"@type": "error", "error": "${e}", "message": "error at AvailableReactions recent_reactions"})
      ].cast<AvailableReaction>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AvailableReactions.html).
  List<AvailableReaction> get popular_reactions {
    try {
      return (rawData["popular_reactions"] as List)
          .map((e) {
            return AvailableReaction((e as Map));
          })
          .toList()
          .cast<AvailableReaction>();
    } catch (e) {
      return [
        AvailableReaction({"@type": "error", "error": "${e}", "message": "error at AvailableReactions popular_reactions"})
      ].cast<AvailableReaction>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AvailableReactions.html).
  bool? get allow_custom_emoji {
    try {
      return (rawData["allow_custom_emoji"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiReaction.html).
class EmojiReaction {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiReaction.html).
  EmojiReaction(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiReaction.html).
  factory EmojiReaction.create({
    String special_type = "emojiReaction",
    String? emoji,
    String? title,
    bool? is_active,
    Sticker? static_icon,
    Sticker? appear_animation,
    Sticker? select_animation,
    Sticker? activate_animation,
    Sticker? effect_animation,
    Sticker? around_animation,
    Sticker? center_animation,
  }) {
    try {
      return EmojiReaction({
        "@type": special_type,
        "emoji": emoji,
        "title": title,
        "is_active": is_active,
        "static_icon": (static_icon != null) ? static_icon.toJson() : null,
        "appear_animation": (appear_animation != null) ? appear_animation.toJson() : null,
        "select_animation": (select_animation != null) ? select_animation.toJson() : null,
        "activate_animation": (activate_animation != null) ? activate_animation.toJson() : null,
        "effect_animation": (effect_animation != null) ? effect_animation.toJson() : null,
        "around_animation": (around_animation != null) ? around_animation.toJson() : null,
        "center_animation": (center_animation != null) ? center_animation.toJson() : null,
      });
    } catch (e) {
      return EmojiReaction({
        "@type": "error",
        "error": "${e}",
        "message": "error method EmojiReaction.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiReaction.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiReaction.html).
  String? get emoji {
    try {
      return (rawData["emoji"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiReaction.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiReaction.html).
  bool? get is_active {
    try {
      return (rawData["is_active"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiReaction.html).
  Sticker get static_icon {
    try {
      return Sticker((rawData["static_icon"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at EmojiReaction static_icon"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiReaction.html).
  Sticker get appear_animation {
    try {
      return Sticker((rawData["appear_animation"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at EmojiReaction appear_animation"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiReaction.html).
  Sticker get select_animation {
    try {
      return Sticker((rawData["select_animation"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at EmojiReaction select_animation"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiReaction.html).
  Sticker get activate_animation {
    try {
      return Sticker((rawData["activate_animation"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at EmojiReaction activate_animation"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiReaction.html).
  Sticker get effect_animation {
    try {
      return Sticker((rawData["effect_animation"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at EmojiReaction effect_animation"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiReaction.html).
  Sticker get around_animation {
    try {
      return Sticker((rawData["around_animation"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at EmojiReaction around_animation"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1EmojiReaction.html).
  Sticker get center_animation {
    try {
      return Sticker((rawData["center_animation"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at EmojiReaction center_animation"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animations.html).
class Animations {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animations.html).
  Animations(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animations.html).
  factory Animations.create({
    String special_type = "animations",
    List<Animation>? animations,
  }) {
    try {
      return Animations({
        "@type": special_type,
        "animations": (animations != null)
            ? animations.map((e) {
                return Animation((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return Animations({
        "@type": "error",
        "error": "${e}",
        "message": "error method Animations.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animations.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Animations.html).
  List<Animation> get animations {
    try {
      return (rawData["animations"] as List)
          .map((e) {
            return Animation((e as Map));
          })
          .toList()
          .cast<Animation>();
    } catch (e) {
      return [
        Animation({"@type": "error", "error": "${e}", "message": "error at Animations animations"})
      ].cast<Animation>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DiceStickers.html).
class DiceStickers {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DiceStickers.html).
  DiceStickers(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DiceStickers.html).
  factory DiceStickers.create({
    String special_type = "diceStickersRegular",
    Sticker? sticker,
    Sticker? background,
    Sticker? lever,
    Sticker? left_reel,
    Sticker? center_reel,
    Sticker? right_reel,
  }) {
    try {
      return DiceStickers({
        "@type": special_type,
        "sticker": (sticker != null) ? sticker.toJson() : null,
        "background": (background != null) ? background.toJson() : null,
        "lever": (lever != null) ? lever.toJson() : null,
        "left_reel": (left_reel != null) ? left_reel.toJson() : null,
        "center_reel": (center_reel != null) ? center_reel.toJson() : null,
        "right_reel": (right_reel != null) ? right_reel.toJson() : null,
      });
    } catch (e) {
      return DiceStickers({
        "@type": "error",
        "error": "${e}",
        "message": "error method DiceStickers.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DiceStickers.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DiceStickers.html).
  Sticker get sticker {
    try {
      return Sticker((rawData["sticker"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at DiceStickers sticker"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DiceStickers.html).
  Sticker get background {
    try {
      return Sticker((rawData["background"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at DiceStickers background"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DiceStickers.html).
  Sticker get lever {
    try {
      return Sticker((rawData["lever"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at DiceStickers lever"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DiceStickers.html).
  Sticker get left_reel {
    try {
      return Sticker((rawData["left_reel"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at DiceStickers left_reel"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DiceStickers.html).
  Sticker get center_reel {
    try {
      return Sticker((rawData["center_reel"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at DiceStickers center_reel"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DiceStickers.html).
  Sticker get right_reel {
    try {
      return Sticker((rawData["right_reel"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at DiceStickers right_reel"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ImportedContacts.html).
class ImportedContacts {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ImportedContacts.html).
  ImportedContacts(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ImportedContacts.html).
  factory ImportedContacts.create({
    String special_type = "importedContacts",
    List<int>? user_ids,
    List<int>? importer_count,
  }) {
    try {
      return ImportedContacts({
        "@type": special_type,
        "user_ids": user_ids,
        "importer_count": importer_count,
      });
    } catch (e) {
      return ImportedContacts({
        "@type": "error",
        "error": "${e}",
        "message": "error method ImportedContacts.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ImportedContacts.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ImportedContacts.html).
  List<int> get user_ids {
    try {
      return (rawData["user_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ImportedContacts.html).
  List<int> get importer_count {
    try {
      return (rawData["importer_count"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SpeechRecognitionResult.html).
class SpeechRecognitionResult {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SpeechRecognitionResult.html).
  SpeechRecognitionResult(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SpeechRecognitionResult.html).
  factory SpeechRecognitionResult.create({
    String special_type = "speechRecognitionResultPending",
    String? partial_text,
    String? text,
    Error? error,
  }) {
    try {
      return SpeechRecognitionResult({
        "@type": special_type,
        "partial_text": partial_text,
        "text": text,
        "error": (error != null) ? error.toJson() : null,
      });
    } catch (e) {
      return SpeechRecognitionResult({
        "@type": "error",
        "error": "${e}",
        "message": "error method SpeechRecognitionResult.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SpeechRecognitionResult.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SpeechRecognitionResult.html).
  String? get partial_text {
    try {
      return (rawData["partial_text"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SpeechRecognitionResult.html).
  String? get text {
    try {
      return (rawData["text"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SpeechRecognitionResult.html).
  Error get error {
    try {
      return Error((rawData["error"] as Map));
    } catch (e) {
      return Error({"@type": "error", "error": "${e}", "message": "error at SpeechRecognitionResult error"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBotColor.html).
class AttachmentMenuBotColor {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBotColor.html).
  AttachmentMenuBotColor(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBotColor.html).
  factory AttachmentMenuBotColor.create({
    String special_type = "attachmentMenuBotColor",
    int? light_color,
    int? dark_color,
  }) {
    try {
      return AttachmentMenuBotColor({
        "@type": special_type,
        "light_color": light_color,
        "dark_color": dark_color,
      });
    } catch (e) {
      return AttachmentMenuBotColor({
        "@type": "error",
        "error": "${e}",
        "message": "error method AttachmentMenuBotColor.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBotColor.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBotColor.html).
  int? get light_color {
    try {
      return (rawData["light_color"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBotColor.html).
  int? get dark_color {
    try {
      return (rawData["dark_color"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
class AttachmentMenuBot {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  AttachmentMenuBot(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  factory AttachmentMenuBot.create({
    String special_type = "attachmentMenuBot",
    int? bot_user_id,
    bool? supports_self_chat,
    bool? supports_user_chats,
    bool? supports_bot_chats,
    bool? supports_group_chats,
    bool? supports_channel_chats,
    bool? supports_settings,
    String? name,
    AttachmentMenuBotColor? name_color,
    File? default_icon,
    File? ios_static_icon,
    File? ios_animated_icon,
    File? android_icon,
    File? macos_icon,
    AttachmentMenuBotColor? icon_color,
    File? web_app_placeholder,
  }) {
    try {
      return AttachmentMenuBot({
        "@type": special_type,
        "bot_user_id": bot_user_id,
        "supports_self_chat": supports_self_chat,
        "supports_user_chats": supports_user_chats,
        "supports_bot_chats": supports_bot_chats,
        "supports_group_chats": supports_group_chats,
        "supports_channel_chats": supports_channel_chats,
        "supports_settings": supports_settings,
        "name": name,
        "name_color": (name_color != null) ? name_color.toJson() : null,
        "default_icon": (default_icon != null) ? default_icon.toJson() : null,
        "ios_static_icon": (ios_static_icon != null) ? ios_static_icon.toJson() : null,
        "ios_animated_icon": (ios_animated_icon != null) ? ios_animated_icon.toJson() : null,
        "android_icon": (android_icon != null) ? android_icon.toJson() : null,
        "macos_icon": (macos_icon != null) ? macos_icon.toJson() : null,
        "icon_color": (icon_color != null) ? icon_color.toJson() : null,
        "web_app_placeholder": (web_app_placeholder != null) ? web_app_placeholder.toJson() : null,
      });
    } catch (e) {
      return AttachmentMenuBot({
        "@type": "error",
        "error": "${e}",
        "message": "error method AttachmentMenuBot.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  int? get bot_user_id {
    try {
      return (rawData["bot_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  bool? get supports_self_chat {
    try {
      return (rawData["supports_self_chat"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  bool? get supports_user_chats {
    try {
      return (rawData["supports_user_chats"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  bool? get supports_bot_chats {
    try {
      return (rawData["supports_bot_chats"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  bool? get supports_group_chats {
    try {
      return (rawData["supports_group_chats"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  bool? get supports_channel_chats {
    try {
      return (rawData["supports_channel_chats"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  bool? get supports_settings {
    try {
      return (rawData["supports_settings"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  String? get name {
    try {
      return (rawData["name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  AttachmentMenuBotColor get name_color {
    try {
      return AttachmentMenuBotColor((rawData["name_color"] as Map));
    } catch (e) {
      return AttachmentMenuBotColor({"@type": "error", "error": "${e}", "message": "error at AttachmentMenuBot name_color"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  File get default_icon {
    try {
      return File((rawData["default_icon"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at AttachmentMenuBot default_icon"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  File get ios_static_icon {
    try {
      return File((rawData["ios_static_icon"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at AttachmentMenuBot ios_static_icon"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  File get ios_animated_icon {
    try {
      return File((rawData["ios_animated_icon"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at AttachmentMenuBot ios_animated_icon"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  File get android_icon {
    try {
      return File((rawData["android_icon"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at AttachmentMenuBot android_icon"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  File get macos_icon {
    try {
      return File((rawData["macos_icon"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at AttachmentMenuBot macos_icon"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  AttachmentMenuBotColor get icon_color {
    try {
      return AttachmentMenuBotColor((rawData["icon_color"] as Map));
    } catch (e) {
      return AttachmentMenuBotColor({"@type": "error", "error": "${e}", "message": "error at AttachmentMenuBot icon_color"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AttachmentMenuBot.html).
  File get web_app_placeholder {
    try {
      return File((rawData["web_app_placeholder"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at AttachmentMenuBot web_app_placeholder"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SentWebAppMessage.html).
class SentWebAppMessage {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SentWebAppMessage.html).
  SentWebAppMessage(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SentWebAppMessage.html).
  factory SentWebAppMessage.create({
    String special_type = "sentWebAppMessage",
    String? inline_message_id,
  }) {
    try {
      return SentWebAppMessage({
        "@type": special_type,
        "inline_message_id": inline_message_id,
      });
    } catch (e) {
      return SentWebAppMessage({
        "@type": "error",
        "error": "${e}",
        "message": "error method SentWebAppMessage.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SentWebAppMessage.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SentWebAppMessage.html).
  String? get inline_message_id {
    try {
      return (rawData["inline_message_id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1HttpUrl.html).
class HttpUrl {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1HttpUrl.html).
  HttpUrl(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1HttpUrl.html).
  factory HttpUrl.create({
    String special_type = "httpUrl",
    String? url,
  }) {
    try {
      return HttpUrl({
        "@type": special_type,
        "url": url,
      });
    } catch (e) {
      return HttpUrl({
        "@type": "error",
        "error": "${e}",
        "message": "error method HttpUrl.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1HttpUrl.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1HttpUrl.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
class InputInlineQueryResult {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  InputInlineQueryResult(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  factory InputInlineQueryResult.create({
    String special_type = "inputInlineQueryResultAnimation",
    String? id,
    String? title,
    String? thumbnail_url,
    String? thumbnail_mime_type,
    String? video_url,
    String? video_mime_type,
    int? video_duration,
    int? video_width,
    int? video_height,
    ReplyMarkup? reply_markup,
    InputMessageContent? input_message_content,
    String? url,
    bool? hide_url,
    String? description,
    int? thumbnail_width,
    int? thumbnail_height,
    String? performer,
    String? audio_url,
    int? audio_duration,
    Contact? contact,
    String? document_url,
    String? mime_type,
    String? game_short_name,
    Location? location,
    int? live_period,
    String? photo_url,
    int? photo_width,
    int? photo_height,
    String? sticker_url,
    int? sticker_width,
    int? sticker_height,
    Venue? venue,
    String? voice_note_url,
    int? voice_note_duration,
  }) {
    try {
      return InputInlineQueryResult({
        "@type": special_type,
        "id": id,
        "title": title,
        "thumbnail_url": thumbnail_url,
        "thumbnail_mime_type": thumbnail_mime_type,
        "video_url": video_url,
        "video_mime_type": video_mime_type,
        "video_duration": video_duration,
        "video_width": video_width,
        "video_height": video_height,
        "reply_markup": (reply_markup != null) ? reply_markup.toJson() : null,
        "input_message_content": (input_message_content != null) ? input_message_content.toJson() : null,
        "url": url,
        "hide_url": hide_url,
        "description": description,
        "thumbnail_width": thumbnail_width,
        "thumbnail_height": thumbnail_height,
        "performer": performer,
        "audio_url": audio_url,
        "audio_duration": audio_duration,
        "contact": (contact != null) ? contact.toJson() : null,
        "document_url": document_url,
        "mime_type": mime_type,
        "game_short_name": game_short_name,
        "location": (location != null) ? location.toJson() : null,
        "live_period": live_period,
        "photo_url": photo_url,
        "photo_width": photo_width,
        "photo_height": photo_height,
        "sticker_url": sticker_url,
        "sticker_width": sticker_width,
        "sticker_height": sticker_height,
        "venue": (venue != null) ? venue.toJson() : null,
        "voice_note_url": voice_note_url,
        "voice_note_duration": voice_note_duration,
      });
    } catch (e) {
      return InputInlineQueryResult({
        "@type": "error",
        "error": "${e}",
        "message": "error method InputInlineQueryResult.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  String? get id {
    try {
      return (rawData["id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  String? get thumbnail_url {
    try {
      return (rawData["thumbnail_url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  String? get thumbnail_mime_type {
    try {
      return (rawData["thumbnail_mime_type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  String? get video_url {
    try {
      return (rawData["video_url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  String? get video_mime_type {
    try {
      return (rawData["video_mime_type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  int? get video_duration {
    try {
      return (rawData["video_duration"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  int? get video_width {
    try {
      return (rawData["video_width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  int? get video_height {
    try {
      return (rawData["video_height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  ReplyMarkup get reply_markup {
    try {
      return ReplyMarkup((rawData["reply_markup"] as Map));
    } catch (e) {
      return ReplyMarkup({"@type": "error", "error": "${e}", "message": "error at InputInlineQueryResult reply_markup"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  InputMessageContent get input_message_content {
    try {
      return InputMessageContent((rawData["input_message_content"] as Map));
    } catch (e) {
      return InputMessageContent({"@type": "error", "error": "${e}", "message": "error at InputInlineQueryResult input_message_content"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  bool? get hide_url {
    try {
      return (rawData["hide_url"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  String? get description {
    try {
      return (rawData["description"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  int? get thumbnail_width {
    try {
      return (rawData["thumbnail_width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  int? get thumbnail_height {
    try {
      return (rawData["thumbnail_height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  String? get performer {
    try {
      return (rawData["performer"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  String? get audio_url {
    try {
      return (rawData["audio_url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  int? get audio_duration {
    try {
      return (rawData["audio_duration"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  Contact get contact {
    try {
      return Contact((rawData["contact"] as Map));
    } catch (e) {
      return Contact({"@type": "error", "error": "${e}", "message": "error at InputInlineQueryResult contact"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  String? get document_url {
    try {
      return (rawData["document_url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  String? get mime_type {
    try {
      return (rawData["mime_type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  String? get game_short_name {
    try {
      return (rawData["game_short_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  Location get location {
    try {
      return Location((rawData["location"] as Map));
    } catch (e) {
      return Location({"@type": "error", "error": "${e}", "message": "error at InputInlineQueryResult location"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  int? get live_period {
    try {
      return (rawData["live_period"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  String? get photo_url {
    try {
      return (rawData["photo_url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  int? get photo_width {
    try {
      return (rawData["photo_width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  int? get photo_height {
    try {
      return (rawData["photo_height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  String? get sticker_url {
    try {
      return (rawData["sticker_url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  int? get sticker_width {
    try {
      return (rawData["sticker_width"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  int? get sticker_height {
    try {
      return (rawData["sticker_height"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  Venue get venue {
    try {
      return Venue((rawData["venue"] as Map));
    } catch (e) {
      return Venue({"@type": "error", "error": "${e}", "message": "error at InputInlineQueryResult venue"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  String? get voice_note_url {
    try {
      return (rawData["voice_note_url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputInlineQueryResult.html).
  int? get voice_note_duration {
    try {
      return (rawData["voice_note_duration"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
class InlineQueryResult {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  InlineQueryResult(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  factory InlineQueryResult.create({
    String special_type = "inlineQueryResultArticle",
    String? id,
    String? url,
    bool? hide_url,
    String? title,
    String? description,
    Thumbnail? thumbnail,
    Contact? contact,
    Location? location,
    Venue? venue,
    Game? game,
    Animation? animation,
    Audio? audio,
    Document? document,
    Photo? photo,
    Sticker? sticker,
    Video? video,
    VoiceNote? voice_note,
  }) {
    try {
      return InlineQueryResult({
        "@type": special_type,
        "id": id,
        "url": url,
        "hide_url": hide_url,
        "title": title,
        "description": description,
        "thumbnail": (thumbnail != null) ? thumbnail.toJson() : null,
        "contact": (contact != null) ? contact.toJson() : null,
        "location": (location != null) ? location.toJson() : null,
        "venue": (venue != null) ? venue.toJson() : null,
        "game": (game != null) ? game.toJson() : null,
        "animation": (animation != null) ? animation.toJson() : null,
        "audio": (audio != null) ? audio.toJson() : null,
        "document": (document != null) ? document.toJson() : null,
        "photo": (photo != null) ? photo.toJson() : null,
        "sticker": (sticker != null) ? sticker.toJson() : null,
        "video": (video != null) ? video.toJson() : null,
        "voice_note": (voice_note != null) ? voice_note.toJson() : null,
      });
    } catch (e) {
      return InlineQueryResult({
        "@type": "error",
        "error": "${e}",
        "message": "error method InlineQueryResult.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  String? get id {
    try {
      return (rawData["id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  bool? get hide_url {
    try {
      return (rawData["hide_url"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  String? get description {
    try {
      return (rawData["description"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  Thumbnail get thumbnail {
    try {
      return Thumbnail((rawData["thumbnail"] as Map));
    } catch (e) {
      return Thumbnail({"@type": "error", "error": "${e}", "message": "error at InlineQueryResult thumbnail"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  Contact get contact {
    try {
      return Contact((rawData["contact"] as Map));
    } catch (e) {
      return Contact({"@type": "error", "error": "${e}", "message": "error at InlineQueryResult contact"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  Location get location {
    try {
      return Location((rawData["location"] as Map));
    } catch (e) {
      return Location({"@type": "error", "error": "${e}", "message": "error at InlineQueryResult location"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  Venue get venue {
    try {
      return Venue((rawData["venue"] as Map));
    } catch (e) {
      return Venue({"@type": "error", "error": "${e}", "message": "error at InlineQueryResult venue"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  Game get game {
    try {
      return Game((rawData["game"] as Map));
    } catch (e) {
      return Game({"@type": "error", "error": "${e}", "message": "error at InlineQueryResult game"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  Animation get animation {
    try {
      return Animation((rawData["animation"] as Map));
    } catch (e) {
      return Animation({"@type": "error", "error": "${e}", "message": "error at InlineQueryResult animation"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  Audio get audio {
    try {
      return Audio((rawData["audio"] as Map));
    } catch (e) {
      return Audio({"@type": "error", "error": "${e}", "message": "error at InlineQueryResult audio"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  Document get document {
    try {
      return Document((rawData["document"] as Map));
    } catch (e) {
      return Document({"@type": "error", "error": "${e}", "message": "error at InlineQueryResult document"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  Photo get photo {
    try {
      return Photo((rawData["photo"] as Map));
    } catch (e) {
      return Photo({"@type": "error", "error": "${e}", "message": "error at InlineQueryResult photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  Sticker get sticker {
    try {
      return Sticker((rawData["sticker"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at InlineQueryResult sticker"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  Video get video {
    try {
      return Video((rawData["video"] as Map));
    } catch (e) {
      return Video({"@type": "error", "error": "${e}", "message": "error at InlineQueryResult video"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResult.html).
  VoiceNote get voice_note {
    try {
      return VoiceNote((rawData["voice_note"] as Map));
    } catch (e) {
      return VoiceNote({"@type": "error", "error": "${e}", "message": "error at InlineQueryResult voice_note"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResults.html).
class InlineQueryResults {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResults.html).
  InlineQueryResults(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResults.html).
  factory InlineQueryResults.create({
    String special_type = "inlineQueryResults",
    int? inline_query_id,
    String? next_offset,
    List<InlineQueryResult>? results,
    String? switch_pm_text,
    String? switch_pm_parameter,
  }) {
    try {
      return InlineQueryResults({
        "@type": special_type,
        "inline_query_id": inline_query_id,
        "next_offset": next_offset,
        "results": (results != null)
            ? results.map((e) {
                return InlineQueryResult((e as Map)).toJson();
              }).toList()
            : null,
        "switch_pm_text": switch_pm_text,
        "switch_pm_parameter": switch_pm_parameter,
      });
    } catch (e) {
      return InlineQueryResults({
        "@type": "error",
        "error": "${e}",
        "message": "error method InlineQueryResults.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResults.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResults.html).
  int? get inline_query_id {
    try {
      return (rawData["inline_query_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResults.html).
  String? get next_offset {
    try {
      return (rawData["next_offset"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResults.html).
  List<InlineQueryResult> get results {
    try {
      return (rawData["results"] as List)
          .map((e) {
            return InlineQueryResult((e as Map));
          })
          .toList()
          .cast<InlineQueryResult>();
    } catch (e) {
      return [
        InlineQueryResult({"@type": "error", "error": "${e}", "message": "error at InlineQueryResults results"})
      ].cast<InlineQueryResult>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResults.html).
  String? get switch_pm_text {
    try {
      return (rawData["switch_pm_text"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InlineQueryResults.html).
  String? get switch_pm_parameter {
    try {
      return (rawData["switch_pm_parameter"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallbackQueryPayload.html).
class CallbackQueryPayload {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallbackQueryPayload.html).
  CallbackQueryPayload(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallbackQueryPayload.html).
  factory CallbackQueryPayload.create({
    String special_type = "callbackQueryPayloadData",
    String? data,
    String? password,
    String? game_short_name,
  }) {
    try {
      return CallbackQueryPayload({
        "@type": special_type,
        "data": data,
        "password": password,
        "game_short_name": game_short_name,
      });
    } catch (e) {
      return CallbackQueryPayload({
        "@type": "error",
        "error": "${e}",
        "message": "error method CallbackQueryPayload.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallbackQueryPayload.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallbackQueryPayload.html).
  String? get data {
    try {
      return (rawData["data"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallbackQueryPayload.html).
  String? get password {
    try {
      return (rawData["password"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallbackQueryPayload.html).
  String? get game_short_name {
    try {
      return (rawData["game_short_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallbackQueryAnswer.html).
class CallbackQueryAnswer {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallbackQueryAnswer.html).
  CallbackQueryAnswer(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallbackQueryAnswer.html).
  factory CallbackQueryAnswer.create({
    String special_type = "callbackQueryAnswer",
    String? text,
    bool? show_alert,
    String? url,
  }) {
    try {
      return CallbackQueryAnswer({
        "@type": special_type,
        "text": text,
        "show_alert": show_alert,
        "url": url,
      });
    } catch (e) {
      return CallbackQueryAnswer({
        "@type": "error",
        "error": "${e}",
        "message": "error method CallbackQueryAnswer.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallbackQueryAnswer.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallbackQueryAnswer.html).
  String? get text {
    try {
      return (rawData["text"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallbackQueryAnswer.html).
  bool? get show_alert {
    try {
      return (rawData["show_alert"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CallbackQueryAnswer.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CustomRequestResult.html).
class CustomRequestResult {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CustomRequestResult.html).
  CustomRequestResult(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CustomRequestResult.html).
  factory CustomRequestResult.create({
    String special_type = "customRequestResult",
    String? result,
  }) {
    try {
      return CustomRequestResult({
        "@type": special_type,
        "result": result,
      });
    } catch (e) {
      return CustomRequestResult({
        "@type": "error",
        "error": "${e}",
        "message": "error method CustomRequestResult.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CustomRequestResult.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CustomRequestResult.html).
  String? get result {
    try {
      return (rawData["result"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GameHighScore.html).
class GameHighScore {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GameHighScore.html).
  GameHighScore(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GameHighScore.html).
  factory GameHighScore.create({
    String special_type = "gameHighScore",
    int? position,
    int? user_id,
    int? score,
  }) {
    try {
      return GameHighScore({
        "@type": special_type,
        "position": position,
        "user_id": user_id,
        "score": score,
      });
    } catch (e) {
      return GameHighScore({
        "@type": "error",
        "error": "${e}",
        "message": "error method GameHighScore.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GameHighScore.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GameHighScore.html).
  int? get position {
    try {
      return (rawData["position"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GameHighScore.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GameHighScore.html).
  int? get score {
    try {
      return (rawData["score"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GameHighScores.html).
class GameHighScores {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GameHighScores.html).
  GameHighScores(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GameHighScores.html).
  factory GameHighScores.create({
    String special_type = "gameHighScores",
    List<GameHighScore>? scores,
  }) {
    try {
      return GameHighScores({
        "@type": special_type,
        "scores": (scores != null)
            ? scores.map((e) {
                return GameHighScore((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return GameHighScores({
        "@type": "error",
        "error": "${e}",
        "message": "error method GameHighScores.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GameHighScores.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1GameHighScores.html).
  List<GameHighScore> get scores {
    try {
      return (rawData["scores"] as List)
          .map((e) {
            return GameHighScore((e as Map));
          })
          .toList()
          .cast<GameHighScore>();
    } catch (e) {
      return [
        GameHighScore({"@type": "error", "error": "${e}", "message": "error at GameHighScores scores"})
      ].cast<GameHighScore>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
class ChatEventAction {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  ChatEventAction(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  factory ChatEventAction.create({
    String special_type = "chatEventMessageEdited",
    Message? old_message,
    Message? new_message,
    Message? message,
    ChatInviteLink? invite_link,
    int? approver_user_id,
    int? user_id,
    ChatMemberStatus? status,
    ChatMemberStatus? old_status,
    ChatMemberStatus? new_status,
    MessageSender? member_id,
    ChatAvailableReactions? old_available_reactions,
    ChatAvailableReactions? new_available_reactions,
    String? old_description,
    String? new_description,
    int? old_linked_chat_id,
    int? new_linked_chat_id,
    ChatLocation? old_location,
    ChatLocation? new_location,
    int? old_message_ttl,
    int? new_message_ttl,
    ChatPermissions? old_permissions,
    ChatPermissions? new_permissions,
    ChatPhoto? old_photo,
    ChatPhoto? new_photo,
    int? old_slow_mode_delay,
    int? new_slow_mode_delay,
    int? old_sticker_set_id,
    int? new_sticker_set_id,
    String? old_title,
    String? new_title,
    String? old_username,
    String? new_username,
    bool? has_protected_content,
    bool? can_invite_users,
    bool? is_all_history_available,
    bool? sign_messages,
    ChatInviteLink? old_invite_link,
    ChatInviteLink? new_invite_link,
    int? group_call_id,
    bool? mute_new_participants,
    MessageSender? participant_id,
    bool? is_muted,
    int? volume_level,
  }) {
    try {
      return ChatEventAction({
        "@type": special_type,
        "old_message": (old_message != null) ? old_message.toJson() : null,
        "new_message": (new_message != null) ? new_message.toJson() : null,
        "message": (message != null) ? message.toJson() : null,
        "invite_link": (invite_link != null) ? invite_link.toJson() : null,
        "approver_user_id": approver_user_id,
        "user_id": user_id,
        "status": (status != null) ? status.toJson() : null,
        "old_status": (old_status != null) ? old_status.toJson() : null,
        "new_status": (new_status != null) ? new_status.toJson() : null,
        "member_id": (member_id != null) ? member_id.toJson() : null,
        "old_available_reactions": (old_available_reactions != null) ? old_available_reactions.toJson() : null,
        "new_available_reactions": (new_available_reactions != null) ? new_available_reactions.toJson() : null,
        "old_description": old_description,
        "new_description": new_description,
        "old_linked_chat_id": old_linked_chat_id,
        "new_linked_chat_id": new_linked_chat_id,
        "old_location": (old_location != null) ? old_location.toJson() : null,
        "new_location": (new_location != null) ? new_location.toJson() : null,
        "old_message_ttl": old_message_ttl,
        "new_message_ttl": new_message_ttl,
        "old_permissions": (old_permissions != null) ? old_permissions.toJson() : null,
        "new_permissions": (new_permissions != null) ? new_permissions.toJson() : null,
        "old_photo": (old_photo != null) ? old_photo.toJson() : null,
        "new_photo": (new_photo != null) ? new_photo.toJson() : null,
        "old_slow_mode_delay": old_slow_mode_delay,
        "new_slow_mode_delay": new_slow_mode_delay,
        "old_sticker_set_id": old_sticker_set_id,
        "new_sticker_set_id": new_sticker_set_id,
        "old_title": old_title,
        "new_title": new_title,
        "old_username": old_username,
        "new_username": new_username,
        "has_protected_content": has_protected_content,
        "can_invite_users": can_invite_users,
        "is_all_history_available": is_all_history_available,
        "sign_messages": sign_messages,
        "old_invite_link": (old_invite_link != null) ? old_invite_link.toJson() : null,
        "new_invite_link": (new_invite_link != null) ? new_invite_link.toJson() : null,
        "group_call_id": group_call_id,
        "mute_new_participants": mute_new_participants,
        "participant_id": (participant_id != null) ? participant_id.toJson() : null,
        "is_muted": is_muted,
        "volume_level": volume_level,
      });
    } catch (e) {
      return ChatEventAction({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatEventAction.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  Message get old_message {
    try {
      return Message((rawData["old_message"] as Map));
    } catch (e) {
      return Message({"@type": "error", "error": "${e}", "message": "error at ChatEventAction old_message"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  Message get new_message {
    try {
      return Message((rawData["new_message"] as Map));
    } catch (e) {
      return Message({"@type": "error", "error": "${e}", "message": "error at ChatEventAction new_message"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  Message get message {
    try {
      return Message((rawData["message"] as Map));
    } catch (e) {
      return Message({"@type": "error", "error": "${e}", "message": "error at ChatEventAction message"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  ChatInviteLink get invite_link {
    try {
      return ChatInviteLink((rawData["invite_link"] as Map));
    } catch (e) {
      return ChatInviteLink({"@type": "error", "error": "${e}", "message": "error at ChatEventAction invite_link"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  int? get approver_user_id {
    try {
      return (rawData["approver_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  ChatMemberStatus get status {
    try {
      return ChatMemberStatus((rawData["status"] as Map));
    } catch (e) {
      return ChatMemberStatus({"@type": "error", "error": "${e}", "message": "error at ChatEventAction status"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  ChatMemberStatus get old_status {
    try {
      return ChatMemberStatus((rawData["old_status"] as Map));
    } catch (e) {
      return ChatMemberStatus({"@type": "error", "error": "${e}", "message": "error at ChatEventAction old_status"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  ChatMemberStatus get new_status {
    try {
      return ChatMemberStatus((rawData["new_status"] as Map));
    } catch (e) {
      return ChatMemberStatus({"@type": "error", "error": "${e}", "message": "error at ChatEventAction new_status"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  MessageSender get member_id {
    try {
      return MessageSender((rawData["member_id"] as Map));
    } catch (e) {
      return MessageSender({"@type": "error", "error": "${e}", "message": "error at ChatEventAction member_id"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  ChatAvailableReactions get old_available_reactions {
    try {
      return ChatAvailableReactions((rawData["old_available_reactions"] as Map));
    } catch (e) {
      return ChatAvailableReactions({"@type": "error", "error": "${e}", "message": "error at ChatEventAction old_available_reactions"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  ChatAvailableReactions get new_available_reactions {
    try {
      return ChatAvailableReactions((rawData["new_available_reactions"] as Map));
    } catch (e) {
      return ChatAvailableReactions({"@type": "error", "error": "${e}", "message": "error at ChatEventAction new_available_reactions"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  String? get old_description {
    try {
      return (rawData["old_description"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  String? get new_description {
    try {
      return (rawData["new_description"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  int? get old_linked_chat_id {
    try {
      return (rawData["old_linked_chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  int? get new_linked_chat_id {
    try {
      return (rawData["new_linked_chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  ChatLocation get old_location {
    try {
      return ChatLocation((rawData["old_location"] as Map));
    } catch (e) {
      return ChatLocation({"@type": "error", "error": "${e}", "message": "error at ChatEventAction old_location"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  ChatLocation get new_location {
    try {
      return ChatLocation((rawData["new_location"] as Map));
    } catch (e) {
      return ChatLocation({"@type": "error", "error": "${e}", "message": "error at ChatEventAction new_location"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  int? get old_message_ttl {
    try {
      return (rawData["old_message_ttl"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  int? get new_message_ttl {
    try {
      return (rawData["new_message_ttl"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  ChatPermissions get old_permissions {
    try {
      return ChatPermissions((rawData["old_permissions"] as Map));
    } catch (e) {
      return ChatPermissions({"@type": "error", "error": "${e}", "message": "error at ChatEventAction old_permissions"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  ChatPermissions get new_permissions {
    try {
      return ChatPermissions((rawData["new_permissions"] as Map));
    } catch (e) {
      return ChatPermissions({"@type": "error", "error": "${e}", "message": "error at ChatEventAction new_permissions"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  ChatPhoto get old_photo {
    try {
      return ChatPhoto((rawData["old_photo"] as Map));
    } catch (e) {
      return ChatPhoto({"@type": "error", "error": "${e}", "message": "error at ChatEventAction old_photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  ChatPhoto get new_photo {
    try {
      return ChatPhoto((rawData["new_photo"] as Map));
    } catch (e) {
      return ChatPhoto({"@type": "error", "error": "${e}", "message": "error at ChatEventAction new_photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  int? get old_slow_mode_delay {
    try {
      return (rawData["old_slow_mode_delay"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  int? get new_slow_mode_delay {
    try {
      return (rawData["new_slow_mode_delay"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  int? get old_sticker_set_id {
    try {
      return (rawData["old_sticker_set_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  int? get new_sticker_set_id {
    try {
      return (rawData["new_sticker_set_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  String? get old_title {
    try {
      return (rawData["old_title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  String? get new_title {
    try {
      return (rawData["new_title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  String? get old_username {
    try {
      return (rawData["old_username"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  String? get new_username {
    try {
      return (rawData["new_username"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  bool? get has_protected_content {
    try {
      return (rawData["has_protected_content"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  bool? get can_invite_users {
    try {
      return (rawData["can_invite_users"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  bool? get is_all_history_available {
    try {
      return (rawData["is_all_history_available"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  bool? get sign_messages {
    try {
      return (rawData["sign_messages"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  ChatInviteLink get old_invite_link {
    try {
      return ChatInviteLink((rawData["old_invite_link"] as Map));
    } catch (e) {
      return ChatInviteLink({"@type": "error", "error": "${e}", "message": "error at ChatEventAction old_invite_link"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  ChatInviteLink get new_invite_link {
    try {
      return ChatInviteLink((rawData["new_invite_link"] as Map));
    } catch (e) {
      return ChatInviteLink({"@type": "error", "error": "${e}", "message": "error at ChatEventAction new_invite_link"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  int? get group_call_id {
    try {
      return (rawData["group_call_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  bool? get mute_new_participants {
    try {
      return (rawData["mute_new_participants"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  MessageSender get participant_id {
    try {
      return MessageSender((rawData["participant_id"] as Map));
    } catch (e) {
      return MessageSender({"@type": "error", "error": "${e}", "message": "error at ChatEventAction participant_id"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  bool? get is_muted {
    try {
      return (rawData["is_muted"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventAction.html).
  int? get volume_level {
    try {
      return (rawData["volume_level"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEvent.html).
class ChatEvent {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEvent.html).
  ChatEvent(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEvent.html).
  factory ChatEvent.create({
    String special_type = "chatEvent",
    int? id,
    int? date,
    MessageSender? member_id,
    ChatEventAction? action,
  }) {
    try {
      return ChatEvent({
        "@type": special_type,
        "id": id,
        "date": date,
        "member_id": (member_id != null) ? member_id.toJson() : null,
        "action": (action != null) ? action.toJson() : null,
      });
    } catch (e) {
      return ChatEvent({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatEvent.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEvent.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEvent.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEvent.html).
  int? get date {
    try {
      return (rawData["date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEvent.html).
  MessageSender get member_id {
    try {
      return MessageSender((rawData["member_id"] as Map));
    } catch (e) {
      return MessageSender({"@type": "error", "error": "${e}", "message": "error at ChatEvent member_id"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEvent.html).
  ChatEventAction get action {
    try {
      return ChatEventAction((rawData["action"] as Map));
    } catch (e) {
      return ChatEventAction({"@type": "error", "error": "${e}", "message": "error at ChatEvent action"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEvents.html).
class ChatEvents {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEvents.html).
  ChatEvents(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEvents.html).
  factory ChatEvents.create({
    String special_type = "chatEvents",
    List<ChatEvent>? events,
  }) {
    try {
      return ChatEvents({
        "@type": special_type,
        "events": (events != null)
            ? events.map((e) {
                return ChatEvent((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return ChatEvents({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatEvents.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEvents.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEvents.html).
  List<ChatEvent> get events {
    try {
      return (rawData["events"] as List)
          .map((e) {
            return ChatEvent((e as Map));
          })
          .toList()
          .cast<ChatEvent>();
    } catch (e) {
      return [
        ChatEvent({"@type": "error", "error": "${e}", "message": "error at ChatEvents events"})
      ].cast<ChatEvent>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventLogFilters.html).
class ChatEventLogFilters {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventLogFilters.html).
  ChatEventLogFilters(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventLogFilters.html).
  factory ChatEventLogFilters.create({
    String special_type = "chatEventLogFilters",
    bool? message_edits,
    bool? message_deletions,
    bool? message_pins,
    bool? member_joins,
    bool? member_leaves,
    bool? member_invites,
    bool? member_promotions,
    bool? member_restrictions,
    bool? info_changes,
    bool? setting_changes,
    bool? invite_link_changes,
    bool? video_chat_changes,
  }) {
    try {
      return ChatEventLogFilters({
        "@type": special_type,
        "message_edits": message_edits,
        "message_deletions": message_deletions,
        "message_pins": message_pins,
        "member_joins": member_joins,
        "member_leaves": member_leaves,
        "member_invites": member_invites,
        "member_promotions": member_promotions,
        "member_restrictions": member_restrictions,
        "info_changes": info_changes,
        "setting_changes": setting_changes,
        "invite_link_changes": invite_link_changes,
        "video_chat_changes": video_chat_changes,
      });
    } catch (e) {
      return ChatEventLogFilters({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatEventLogFilters.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventLogFilters.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventLogFilters.html).
  bool? get message_edits {
    try {
      return (rawData["message_edits"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventLogFilters.html).
  bool? get message_deletions {
    try {
      return (rawData["message_deletions"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventLogFilters.html).
  bool? get message_pins {
    try {
      return (rawData["message_pins"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventLogFilters.html).
  bool? get member_joins {
    try {
      return (rawData["member_joins"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventLogFilters.html).
  bool? get member_leaves {
    try {
      return (rawData["member_leaves"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventLogFilters.html).
  bool? get member_invites {
    try {
      return (rawData["member_invites"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventLogFilters.html).
  bool? get member_promotions {
    try {
      return (rawData["member_promotions"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventLogFilters.html).
  bool? get member_restrictions {
    try {
      return (rawData["member_restrictions"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventLogFilters.html).
  bool? get info_changes {
    try {
      return (rawData["info_changes"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventLogFilters.html).
  bool? get setting_changes {
    try {
      return (rawData["setting_changes"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventLogFilters.html).
  bool? get invite_link_changes {
    try {
      return (rawData["invite_link_changes"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatEventLogFilters.html).
  bool? get video_chat_changes {
    try {
      return (rawData["video_chat_changes"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackStringValue.html).
class LanguagePackStringValue {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackStringValue.html).
  LanguagePackStringValue(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackStringValue.html).
  factory LanguagePackStringValue.create({
    String special_type = "languagePackStringValueOrdinary",
    String? value,
    String? zero_value,
    String? one_value,
    String? two_value,
    String? few_value,
    String? many_value,
    String? other_value,
  }) {
    try {
      return LanguagePackStringValue({
        "@type": special_type,
        "value": value,
        "zero_value": zero_value,
        "one_value": one_value,
        "two_value": two_value,
        "few_value": few_value,
        "many_value": many_value,
        "other_value": other_value,
      });
    } catch (e) {
      return LanguagePackStringValue({
        "@type": "error",
        "error": "${e}",
        "message": "error method LanguagePackStringValue.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackStringValue.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackStringValue.html).
  String? get value {
    try {
      return (rawData["value"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackStringValue.html).
  String? get zero_value {
    try {
      return (rawData["zero_value"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackStringValue.html).
  String? get one_value {
    try {
      return (rawData["one_value"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackStringValue.html).
  String? get two_value {
    try {
      return (rawData["two_value"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackStringValue.html).
  String? get few_value {
    try {
      return (rawData["few_value"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackStringValue.html).
  String? get many_value {
    try {
      return (rawData["many_value"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackStringValue.html).
  String? get other_value {
    try {
      return (rawData["other_value"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackString.html).
class LanguagePackString {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackString.html).
  LanguagePackString(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackString.html).
  factory LanguagePackString.create({
    String special_type = "languagePackString",
    String? key,
    LanguagePackStringValue? value,
  }) {
    try {
      return LanguagePackString({
        "@type": special_type,
        "key": key,
        "value": (value != null) ? value.toJson() : null,
      });
    } catch (e) {
      return LanguagePackString({
        "@type": "error",
        "error": "${e}",
        "message": "error method LanguagePackString.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackString.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackString.html).
  String? get key {
    try {
      return (rawData["key"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackString.html).
  LanguagePackStringValue get value {
    try {
      return LanguagePackStringValue((rawData["value"] as Map));
    } catch (e) {
      return LanguagePackStringValue({"@type": "error", "error": "${e}", "message": "error at LanguagePackString value"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackStrings.html).
class LanguagePackStrings {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackStrings.html).
  LanguagePackStrings(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackStrings.html).
  factory LanguagePackStrings.create({
    String special_type = "languagePackStrings",
    List<LanguagePackString>? strings,
  }) {
    try {
      return LanguagePackStrings({
        "@type": special_type,
        "strings": (strings != null)
            ? strings.map((e) {
                return LanguagePackString((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return LanguagePackStrings({
        "@type": "error",
        "error": "${e}",
        "message": "error method LanguagePackStrings.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackStrings.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackStrings.html).
  List<LanguagePackString> get strings {
    try {
      return (rawData["strings"] as List)
          .map((e) {
            return LanguagePackString((e as Map));
          })
          .toList()
          .cast<LanguagePackString>();
    } catch (e) {
      return [
        LanguagePackString({"@type": "error", "error": "${e}", "message": "error at LanguagePackStrings strings"})
      ].cast<LanguagePackString>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackInfo.html).
class LanguagePackInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackInfo.html).
  LanguagePackInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackInfo.html).
  factory LanguagePackInfo.create({
    String special_type = "languagePackInfo",
    String? id,
    String? base_language_pack_id,
    String? name,
    String? native_name,
    String? plural_code,
    bool? is_official,
    bool? is_rtl,
    bool? is_beta,
    bool? is_installed,
    int? total_string_count,
    int? translated_string_count,
    int? local_string_count,
    String? translation_url,
  }) {
    try {
      return LanguagePackInfo({
        "@type": special_type,
        "id": id,
        "base_language_pack_id": base_language_pack_id,
        "name": name,
        "native_name": native_name,
        "plural_code": plural_code,
        "is_official": is_official,
        "is_rtl": is_rtl,
        "is_beta": is_beta,
        "is_installed": is_installed,
        "total_string_count": total_string_count,
        "translated_string_count": translated_string_count,
        "local_string_count": local_string_count,
        "translation_url": translation_url,
      });
    } catch (e) {
      return LanguagePackInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method LanguagePackInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackInfo.html).
  String? get id {
    try {
      return (rawData["id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackInfo.html).
  String? get base_language_pack_id {
    try {
      return (rawData["base_language_pack_id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackInfo.html).
  String? get name {
    try {
      return (rawData["name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackInfo.html).
  String? get native_name {
    try {
      return (rawData["native_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackInfo.html).
  String? get plural_code {
    try {
      return (rawData["plural_code"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackInfo.html).
  bool? get is_official {
    try {
      return (rawData["is_official"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackInfo.html).
  bool? get is_rtl {
    try {
      return (rawData["is_rtl"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackInfo.html).
  bool? get is_beta {
    try {
      return (rawData["is_beta"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackInfo.html).
  bool? get is_installed {
    try {
      return (rawData["is_installed"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackInfo.html).
  int? get total_string_count {
    try {
      return (rawData["total_string_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackInfo.html).
  int? get translated_string_count {
    try {
      return (rawData["translated_string_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackInfo.html).
  int? get local_string_count {
    try {
      return (rawData["local_string_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LanguagePackInfo.html).
  String? get translation_url {
    try {
      return (rawData["translation_url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LocalizationTargetInfo.html).
class LocalizationTargetInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LocalizationTargetInfo.html).
  LocalizationTargetInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LocalizationTargetInfo.html).
  factory LocalizationTargetInfo.create({
    String special_type = "localizationTargetInfo",
    List<LanguagePackInfo>? language_packs,
  }) {
    try {
      return LocalizationTargetInfo({
        "@type": special_type,
        "language_packs": (language_packs != null)
            ? language_packs.map((e) {
                return LanguagePackInfo((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return LocalizationTargetInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method LocalizationTargetInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LocalizationTargetInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LocalizationTargetInfo.html).
  List<LanguagePackInfo> get language_packs {
    try {
      return (rawData["language_packs"] as List)
          .map((e) {
            return LanguagePackInfo((e as Map));
          })
          .toList()
          .cast<LanguagePackInfo>();
    } catch (e) {
      return [
        LanguagePackInfo({"@type": "error", "error": "${e}", "message": "error at LocalizationTargetInfo language_packs"})
      ].cast<LanguagePackInfo>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumLimitType.html).
class PremiumLimitType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumLimitType.html).
  PremiumLimitType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumLimitType.html).
  factory PremiumLimitType.create({
    String special_type = "premiumLimitTypeSupergroupCount",
  }) {
    try {
      return PremiumLimitType({
        "@type": special_type,
      });
    } catch (e) {
      return PremiumLimitType({
        "@type": "error",
        "error": "${e}",
        "message": "error method PremiumLimitType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumLimitType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumFeature.html).
class PremiumFeature {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumFeature.html).
  PremiumFeature(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumFeature.html).
  factory PremiumFeature.create({
    String special_type = "premiumFeatureIncreasedLimits",
  }) {
    try {
      return PremiumFeature({
        "@type": special_type,
      });
    } catch (e) {
      return PremiumFeature({
        "@type": "error",
        "error": "${e}",
        "message": "error method PremiumFeature.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumFeature.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumLimit.html).
class PremiumLimit {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumLimit.html).
  PremiumLimit(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumLimit.html).
  factory PremiumLimit.create({
    String special_type = "premiumLimit",
    PremiumLimitType? type,
    int? default_value,
    int? premium_value,
  }) {
    try {
      return PremiumLimit({
        "@type": special_type,
        "type": (type != null) ? type.toJson() : null,
        "default_value": default_value,
        "premium_value": premium_value,
      });
    } catch (e) {
      return PremiumLimit({
        "@type": "error",
        "error": "${e}",
        "message": "error method PremiumLimit.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumLimit.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumLimit.html).
  PremiumLimitType get type {
    try {
      return PremiumLimitType((rawData["type"] as Map));
    } catch (e) {
      return PremiumLimitType({"@type": "error", "error": "${e}", "message": "error at PremiumLimit type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumLimit.html).
  int? get default_value {
    try {
      return (rawData["default_value"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumLimit.html).
  int? get premium_value {
    try {
      return (rawData["premium_value"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumFeatures.html).
class PremiumFeatures {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumFeatures.html).
  PremiumFeatures(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumFeatures.html).
  factory PremiumFeatures.create({
    String special_type = "premiumFeatures",
    List<PremiumFeature>? features,
    List<PremiumLimit>? limits,
    InternalLinkType? payment_link,
  }) {
    try {
      return PremiumFeatures({
        "@type": special_type,
        "features": (features != null)
            ? features.map((e) {
                return PremiumFeature((e as Map)).toJson();
              }).toList()
            : null,
        "limits": (limits != null)
            ? limits.map((e) {
                return PremiumLimit((e as Map)).toJson();
              }).toList()
            : null,
        "payment_link": (payment_link != null) ? payment_link.toJson() : null,
      });
    } catch (e) {
      return PremiumFeatures({
        "@type": "error",
        "error": "${e}",
        "message": "error method PremiumFeatures.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumFeatures.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumFeatures.html).
  List<PremiumFeature> get features {
    try {
      return (rawData["features"] as List)
          .map((e) {
            return PremiumFeature((e as Map));
          })
          .toList()
          .cast<PremiumFeature>();
    } catch (e) {
      return [
        PremiumFeature({"@type": "error", "error": "${e}", "message": "error at PremiumFeatures features"})
      ].cast<PremiumFeature>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumFeatures.html).
  List<PremiumLimit> get limits {
    try {
      return (rawData["limits"] as List)
          .map((e) {
            return PremiumLimit((e as Map));
          })
          .toList()
          .cast<PremiumLimit>();
    } catch (e) {
      return [
        PremiumLimit({"@type": "error", "error": "${e}", "message": "error at PremiumFeatures limits"})
      ].cast<PremiumLimit>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumFeatures.html).
  InternalLinkType get payment_link {
    try {
      return InternalLinkType((rawData["payment_link"] as Map));
    } catch (e) {
      return InternalLinkType({"@type": "error", "error": "${e}", "message": "error at PremiumFeatures payment_link"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumSource.html).
class PremiumSource {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumSource.html).
  PremiumSource(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumSource.html).
  factory PremiumSource.create({
    String special_type = "premiumSourceLimitExceeded",
    PremiumLimitType? limit_type,
    PremiumFeature? feature,
    String? referrer,
  }) {
    try {
      return PremiumSource({
        "@type": special_type,
        "limit_type": (limit_type != null) ? limit_type.toJson() : null,
        "feature": (feature != null) ? feature.toJson() : null,
        "referrer": referrer,
      });
    } catch (e) {
      return PremiumSource({
        "@type": "error",
        "error": "${e}",
        "message": "error method PremiumSource.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumSource.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumSource.html).
  PremiumLimitType get limit_type {
    try {
      return PremiumLimitType((rawData["limit_type"] as Map));
    } catch (e) {
      return PremiumLimitType({"@type": "error", "error": "${e}", "message": "error at PremiumSource limit_type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumSource.html).
  PremiumFeature get feature {
    try {
      return PremiumFeature((rawData["feature"] as Map));
    } catch (e) {
      return PremiumFeature({"@type": "error", "error": "${e}", "message": "error at PremiumSource feature"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumSource.html).
  String? get referrer {
    try {
      return (rawData["referrer"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumFeaturePromotionAnimation.html).
class PremiumFeaturePromotionAnimation {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumFeaturePromotionAnimation.html).
  PremiumFeaturePromotionAnimation(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumFeaturePromotionAnimation.html).
  factory PremiumFeaturePromotionAnimation.create({
    String special_type = "premiumFeaturePromotionAnimation",
    PremiumFeature? feature,
    Animation? animation,
  }) {
    try {
      return PremiumFeaturePromotionAnimation({
        "@type": special_type,
        "feature": (feature != null) ? feature.toJson() : null,
        "animation": (animation != null) ? animation.toJson() : null,
      });
    } catch (e) {
      return PremiumFeaturePromotionAnimation({
        "@type": "error",
        "error": "${e}",
        "message": "error method PremiumFeaturePromotionAnimation.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumFeaturePromotionAnimation.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumFeaturePromotionAnimation.html).
  PremiumFeature get feature {
    try {
      return PremiumFeature((rawData["feature"] as Map));
    } catch (e) {
      return PremiumFeature({"@type": "error", "error": "${e}", "message": "error at PremiumFeaturePromotionAnimation feature"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumFeaturePromotionAnimation.html).
  Animation get animation {
    try {
      return Animation((rawData["animation"] as Map));
    } catch (e) {
      return Animation({"@type": "error", "error": "${e}", "message": "error at PremiumFeaturePromotionAnimation animation"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumState.html).
class PremiumState {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumState.html).
  PremiumState(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumState.html).
  factory PremiumState.create({
    String special_type = "premiumState",
    FormattedText? state,
    List<PremiumPaymentOption>? payment_options,
    List<PremiumFeaturePromotionAnimation>? animations,
  }) {
    try {
      return PremiumState({
        "@type": special_type,
        "state": (state != null) ? state.toJson() : null,
        "payment_options": (payment_options != null)
            ? payment_options.map((e) {
                return PremiumPaymentOption((e as Map)).toJson();
              }).toList()
            : null,
        "animations": (animations != null)
            ? animations.map((e) {
                return PremiumFeaturePromotionAnimation((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return PremiumState({
        "@type": "error",
        "error": "${e}",
        "message": "error method PremiumState.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumState.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumState.html).
  FormattedText get state {
    try {
      return FormattedText((rawData["state"] as Map));
    } catch (e) {
      return FormattedText({"@type": "error", "error": "${e}", "message": "error at PremiumState state"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumState.html).
  List<PremiumPaymentOption> get payment_options {
    try {
      return (rawData["payment_options"] as List)
          .map((e) {
            return PremiumPaymentOption((e as Map));
          })
          .toList()
          .cast<PremiumPaymentOption>();
    } catch (e) {
      return [
        PremiumPaymentOption({"@type": "error", "error": "${e}", "message": "error at PremiumState payment_options"})
      ].cast<PremiumPaymentOption>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PremiumState.html).
  List<PremiumFeaturePromotionAnimation> get animations {
    try {
      return (rawData["animations"] as List)
          .map((e) {
            return PremiumFeaturePromotionAnimation((e as Map));
          })
          .toList()
          .cast<PremiumFeaturePromotionAnimation>();
    } catch (e) {
      return [
        PremiumFeaturePromotionAnimation({"@type": "error", "error": "${e}", "message": "error at PremiumState animations"})
      ].cast<PremiumFeaturePromotionAnimation>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorePaymentPurpose.html).
class StorePaymentPurpose {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorePaymentPurpose.html).
  StorePaymentPurpose(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorePaymentPurpose.html).
  factory StorePaymentPurpose.create({
    String special_type = "storePaymentPurposePremiumSubscription",
    bool? is_restore,
    int? user_id,
    String? currency,
    int? amount,
  }) {
    try {
      return StorePaymentPurpose({
        "@type": special_type,
        "is_restore": is_restore,
        "user_id": user_id,
        "currency": currency,
        "amount": amount,
      });
    } catch (e) {
      return StorePaymentPurpose({
        "@type": "error",
        "error": "${e}",
        "message": "error method StorePaymentPurpose.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorePaymentPurpose.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorePaymentPurpose.html).
  bool? get is_restore {
    try {
      return (rawData["is_restore"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorePaymentPurpose.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorePaymentPurpose.html).
  String? get currency {
    try {
      return (rawData["currency"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorePaymentPurpose.html).
  int? get amount {
    try {
      return (rawData["amount"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeviceToken.html).
class DeviceToken {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeviceToken.html).
  DeviceToken(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeviceToken.html).
  factory DeviceToken.create({
    String special_type = "deviceTokenFirebaseCloudMessaging",
    String? token,
    bool? encrypt,
    String? device_token,
    bool? is_app_sandbox,
    String? access_token,
    String? channel_uri,
    String? endpoint,
    String? p256dh_base64url,
    String? auth_base64url,
    String? reg_id,
  }) {
    try {
      return DeviceToken({
        "@type": special_type,
        "token": token,
        "encrypt": encrypt,
        "device_token": device_token,
        "is_app_sandbox": is_app_sandbox,
        "access_token": access_token,
        "channel_uri": channel_uri,
        "endpoint": endpoint,
        "p256dh_base64url": p256dh_base64url,
        "auth_base64url": auth_base64url,
        "reg_id": reg_id,
      });
    } catch (e) {
      return DeviceToken({
        "@type": "error",
        "error": "${e}",
        "message": "error method DeviceToken.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeviceToken.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeviceToken.html).
  String? get token {
    try {
      return (rawData["token"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeviceToken.html).
  bool? get encrypt {
    try {
      return (rawData["encrypt"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeviceToken.html).
  String? get device_token {
    try {
      return (rawData["device_token"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeviceToken.html).
  bool? get is_app_sandbox {
    try {
      return (rawData["is_app_sandbox"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeviceToken.html).
  String? get access_token {
    try {
      return (rawData["access_token"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeviceToken.html).
  String? get channel_uri {
    try {
      return (rawData["channel_uri"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeviceToken.html).
  String? get endpoint {
    try {
      return (rawData["endpoint"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeviceToken.html).
  String? get p256dh_base64url {
    try {
      return (rawData["p256dh_base64url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeviceToken.html).
  String? get auth_base64url {
    try {
      return (rawData["auth_base64url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeviceToken.html).
  String? get reg_id {
    try {
      return (rawData["reg_id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushReceiverId.html).
class PushReceiverId {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushReceiverId.html).
  PushReceiverId(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushReceiverId.html).
  factory PushReceiverId.create({
    String special_type = "pushReceiverId",
    int? id,
  }) {
    try {
      return PushReceiverId({
        "@type": special_type,
        "id": id,
      });
    } catch (e) {
      return PushReceiverId({
        "@type": "error",
        "error": "${e}",
        "message": "error method PushReceiverId.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushReceiverId.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushReceiverId.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundFill.html).
class BackgroundFill {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundFill.html).
  BackgroundFill(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundFill.html).
  factory BackgroundFill.create({
    String special_type = "backgroundFillSolid",
    int? color,
    int? top_color,
    int? bottom_color,
    int? rotation_angle,
    List<int>? colors,
  }) {
    try {
      return BackgroundFill({
        "@type": special_type,
        "color": color,
        "top_color": top_color,
        "bottom_color": bottom_color,
        "rotation_angle": rotation_angle,
        "colors": colors,
      });
    } catch (e) {
      return BackgroundFill({
        "@type": "error",
        "error": "${e}",
        "message": "error method BackgroundFill.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundFill.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundFill.html).
  int? get color {
    try {
      return (rawData["color"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundFill.html).
  int? get top_color {
    try {
      return (rawData["top_color"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundFill.html).
  int? get bottom_color {
    try {
      return (rawData["bottom_color"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundFill.html).
  int? get rotation_angle {
    try {
      return (rawData["rotation_angle"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundFill.html).
  List<int> get colors {
    try {
      return (rawData["colors"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundType.html).
class BackgroundType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundType.html).
  BackgroundType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundType.html).
  factory BackgroundType.create({
    String special_type = "backgroundTypeWallpaper",
    bool? is_blurred,
    bool? is_moving,
    BackgroundFill? fill,
    int? intensity,
    bool? is_inverted,
  }) {
    try {
      return BackgroundType({
        "@type": special_type,
        "is_blurred": is_blurred,
        "is_moving": is_moving,
        "fill": (fill != null) ? fill.toJson() : null,
        "intensity": intensity,
        "is_inverted": is_inverted,
      });
    } catch (e) {
      return BackgroundType({
        "@type": "error",
        "error": "${e}",
        "message": "error method BackgroundType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundType.html).
  bool? get is_blurred {
    try {
      return (rawData["is_blurred"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundType.html).
  bool? get is_moving {
    try {
      return (rawData["is_moving"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundType.html).
  BackgroundFill get fill {
    try {
      return BackgroundFill((rawData["fill"] as Map));
    } catch (e) {
      return BackgroundFill({"@type": "error", "error": "${e}", "message": "error at BackgroundType fill"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundType.html).
  int? get intensity {
    try {
      return (rawData["intensity"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BackgroundType.html).
  bool? get is_inverted {
    try {
      return (rawData["is_inverted"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Background.html).
class Background {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Background.html).
  Background(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Background.html).
  factory Background.create({
    String special_type = "background",
    int? id,
    bool? is_default,
    bool? is_dark,
    String? name,
    Document? document,
    BackgroundType? type,
  }) {
    try {
      return Background({
        "@type": special_type,
        "id": id,
        "is_default": is_default,
        "is_dark": is_dark,
        "name": name,
        "document": (document != null) ? document.toJson() : null,
        "type": (type != null) ? type.toJson() : null,
      });
    } catch (e) {
      return Background({
        "@type": "error",
        "error": "${e}",
        "message": "error method Background.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Background.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Background.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Background.html).
  bool? get is_default {
    try {
      return (rawData["is_default"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Background.html).
  bool? get is_dark {
    try {
      return (rawData["is_dark"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Background.html).
  String? get name {
    try {
      return (rawData["name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Background.html).
  Document get document {
    try {
      return Document((rawData["document"] as Map));
    } catch (e) {
      return Document({"@type": "error", "error": "${e}", "message": "error at Background document"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Background.html).
  BackgroundType get type {
    try {
      return BackgroundType((rawData["type"] as Map));
    } catch (e) {
      return BackgroundType({"@type": "error", "error": "${e}", "message": "error at Background type"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Backgrounds.html).
class Backgrounds {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Backgrounds.html).
  Backgrounds(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Backgrounds.html).
  factory Backgrounds.create({
    String special_type = "backgrounds",
    List<Background>? backgrounds,
  }) {
    try {
      return Backgrounds({
        "@type": special_type,
        "backgrounds": (backgrounds != null)
            ? backgrounds.map((e) {
                return Background((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return Backgrounds({
        "@type": "error",
        "error": "${e}",
        "message": "error method Backgrounds.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Backgrounds.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Backgrounds.html).
  List<Background> get backgrounds {
    try {
      return (rawData["backgrounds"] as List)
          .map((e) {
            return Background((e as Map));
          })
          .toList()
          .cast<Background>();
    } catch (e) {
      return [
        Background({"@type": "error", "error": "${e}", "message": "error at Backgrounds backgrounds"})
      ].cast<Background>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputBackground.html).
class InputBackground {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputBackground.html).
  InputBackground(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputBackground.html).
  factory InputBackground.create({
    String special_type = "inputBackgroundLocal",
    InputFile? background,
    int? background_id,
  }) {
    try {
      return InputBackground({
        "@type": special_type,
        "background": (background != null) ? background.toJson() : null,
        "background_id": background_id,
      });
    } catch (e) {
      return InputBackground({
        "@type": "error",
        "error": "${e}",
        "message": "error method InputBackground.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputBackground.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputBackground.html).
  InputFile get background {
    try {
      return InputFile((rawData["background"] as Map));
    } catch (e) {
      return InputFile({"@type": "error", "error": "${e}", "message": "error at InputBackground background"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputBackground.html).
  int? get background_id {
    try {
      return (rawData["background_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeSettings.html).
class ThemeSettings {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeSettings.html).
  ThemeSettings(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeSettings.html).
  factory ThemeSettings.create({
    String special_type = "themeSettings",
    int? accent_color,
    Background? background,
    BackgroundFill? outgoing_message_fill,
    bool? animate_outgoing_message_fill,
    int? outgoing_message_accent_color,
  }) {
    try {
      return ThemeSettings({
        "@type": special_type,
        "accent_color": accent_color,
        "background": (background != null) ? background.toJson() : null,
        "outgoing_message_fill": (outgoing_message_fill != null) ? outgoing_message_fill.toJson() : null,
        "animate_outgoing_message_fill": animate_outgoing_message_fill,
        "outgoing_message_accent_color": outgoing_message_accent_color,
      });
    } catch (e) {
      return ThemeSettings({
        "@type": "error",
        "error": "${e}",
        "message": "error method ThemeSettings.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeSettings.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeSettings.html).
  int? get accent_color {
    try {
      return (rawData["accent_color"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeSettings.html).
  Background get background {
    try {
      return Background((rawData["background"] as Map));
    } catch (e) {
      return Background({"@type": "error", "error": "${e}", "message": "error at ThemeSettings background"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeSettings.html).
  BackgroundFill get outgoing_message_fill {
    try {
      return BackgroundFill((rawData["outgoing_message_fill"] as Map));
    } catch (e) {
      return BackgroundFill({"@type": "error", "error": "${e}", "message": "error at ThemeSettings outgoing_message_fill"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeSettings.html).
  bool? get animate_outgoing_message_fill {
    try {
      return (rawData["animate_outgoing_message_fill"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ThemeSettings.html).
  int? get outgoing_message_accent_color {
    try {
      return (rawData["outgoing_message_accent_color"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatTheme.html).
class ChatTheme {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatTheme.html).
  ChatTheme(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatTheme.html).
  factory ChatTheme.create({
    String special_type = "chatTheme",
    String? name,
    ThemeSettings? light_settings,
    ThemeSettings? dark_settings,
  }) {
    try {
      return ChatTheme({
        "@type": special_type,
        "name": name,
        "light_settings": (light_settings != null) ? light_settings.toJson() : null,
        "dark_settings": (dark_settings != null) ? dark_settings.toJson() : null,
      });
    } catch (e) {
      return ChatTheme({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatTheme.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatTheme.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatTheme.html).
  String? get name {
    try {
      return (rawData["name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatTheme.html).
  ThemeSettings get light_settings {
    try {
      return ThemeSettings((rawData["light_settings"] as Map));
    } catch (e) {
      return ThemeSettings({"@type": "error", "error": "${e}", "message": "error at ChatTheme light_settings"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatTheme.html).
  ThemeSettings get dark_settings {
    try {
      return ThemeSettings((rawData["dark_settings"] as Map));
    } catch (e) {
      return ThemeSettings({"@type": "error", "error": "${e}", "message": "error at ChatTheme dark_settings"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Hashtags.html).
class Hashtags {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Hashtags.html).
  Hashtags(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Hashtags.html).
  factory Hashtags.create({
    String special_type = "hashtags",
    List<String>? hashtags,
  }) {
    try {
      return Hashtags({
        "@type": special_type,
        "hashtags": hashtags,
      });
    } catch (e) {
      return Hashtags({
        "@type": "error",
        "error": "${e}",
        "message": "error method Hashtags.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Hashtags.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Hashtags.html).
  List<String> get hashtags {
    try {
      return (rawData["hashtags"] as List).cast<String>();
    } catch (e) {
      return [].cast<String>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CanTransferOwnershipResult.html).
class CanTransferOwnershipResult {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CanTransferOwnershipResult.html).
  CanTransferOwnershipResult(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CanTransferOwnershipResult.html).
  factory CanTransferOwnershipResult.create({
    String special_type = "canTransferOwnershipResultOk",
    int? retry_after,
  }) {
    try {
      return CanTransferOwnershipResult({
        "@type": special_type,
        "retry_after": retry_after,
      });
    } catch (e) {
      return CanTransferOwnershipResult({
        "@type": "error",
        "error": "${e}",
        "message": "error method CanTransferOwnershipResult.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CanTransferOwnershipResult.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CanTransferOwnershipResult.html).
  int? get retry_after {
    try {
      return (rawData["retry_after"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CheckChatUsernameResult.html).
class CheckChatUsernameResult {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CheckChatUsernameResult.html).
  CheckChatUsernameResult(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CheckChatUsernameResult.html).
  factory CheckChatUsernameResult.create({
    String special_type = "checkChatUsernameResultOk",
  }) {
    try {
      return CheckChatUsernameResult({
        "@type": special_type,
      });
    } catch (e) {
      return CheckChatUsernameResult({
        "@type": "error",
        "error": "${e}",
        "message": "error method CheckChatUsernameResult.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CheckChatUsernameResult.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CheckStickerSetNameResult.html).
class CheckStickerSetNameResult {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CheckStickerSetNameResult.html).
  CheckStickerSetNameResult(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CheckStickerSetNameResult.html).
  factory CheckStickerSetNameResult.create({
    String special_type = "checkStickerSetNameResultOk",
  }) {
    try {
      return CheckStickerSetNameResult({
        "@type": special_type,
      });
    } catch (e) {
      return CheckStickerSetNameResult({
        "@type": "error",
        "error": "${e}",
        "message": "error method CheckStickerSetNameResult.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1CheckStickerSetNameResult.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ResetPasswordResult.html).
class ResetPasswordResult {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ResetPasswordResult.html).
  ResetPasswordResult(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ResetPasswordResult.html).
  factory ResetPasswordResult.create({
    String special_type = "resetPasswordResultOk",
    int? pending_reset_date,
    int? retry_date,
  }) {
    try {
      return ResetPasswordResult({
        "@type": special_type,
        "pending_reset_date": pending_reset_date,
        "retry_date": retry_date,
      });
    } catch (e) {
      return ResetPasswordResult({
        "@type": "error",
        "error": "${e}",
        "message": "error method ResetPasswordResult.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ResetPasswordResult.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ResetPasswordResult.html).
  int? get pending_reset_date {
    try {
      return (rawData["pending_reset_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ResetPasswordResult.html).
  int? get retry_date {
    try {
      return (rawData["retry_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageFileType.html).
class MessageFileType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageFileType.html).
  MessageFileType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageFileType.html).
  factory MessageFileType.create({
    String special_type = "messageFileTypePrivate",
    String? name,
    String? title,
  }) {
    try {
      return MessageFileType({
        "@type": special_type,
        "name": name,
        "title": title,
      });
    } catch (e) {
      return MessageFileType({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageFileType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageFileType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageFileType.html).
  String? get name {
    try {
      return (rawData["name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageFileType.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
class PushMessageContent {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  PushMessageContent(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  factory PushMessageContent.create({
    String special_type = "pushMessageContentHidden",
    bool? is_pinned,
    Animation? animation,
    String? caption,
    Audio? audio,
    String? name,
    Document? document,
    String? title,
    int? score,
    String? price,
    bool? is_live,
    Photo? photo,
    bool? is_secret,
    String? question,
    bool? is_regular,
    Sticker? sticker,
    String? emoji,
    String? text,
    Video? video,
    VideoNote? video_note,
    VoiceNote? voice_note,
    String? member_name,
    bool? is_current_user,
    bool? is_returned,
    String? theme_name,
    bool? is_left,
    String? amount,
    int? total_count,
    bool? has_photos,
    bool? has_videos,
    bool? has_audios,
    bool? has_documents,
  }) {
    try {
      return PushMessageContent({
        "@type": special_type,
        "is_pinned": is_pinned,
        "animation": (animation != null) ? animation.toJson() : null,
        "caption": caption,
        "audio": (audio != null) ? audio.toJson() : null,
        "name": name,
        "document": (document != null) ? document.toJson() : null,
        "title": title,
        "score": score,
        "price": price,
        "is_live": is_live,
        "photo": (photo != null) ? photo.toJson() : null,
        "is_secret": is_secret,
        "question": question,
        "is_regular": is_regular,
        "sticker": (sticker != null) ? sticker.toJson() : null,
        "emoji": emoji,
        "text": text,
        "video": (video != null) ? video.toJson() : null,
        "video_note": (video_note != null) ? video_note.toJson() : null,
        "voice_note": (voice_note != null) ? voice_note.toJson() : null,
        "member_name": member_name,
        "is_current_user": is_current_user,
        "is_returned": is_returned,
        "theme_name": theme_name,
        "is_left": is_left,
        "amount": amount,
        "total_count": total_count,
        "has_photos": has_photos,
        "has_videos": has_videos,
        "has_audios": has_audios,
        "has_documents": has_documents,
      });
    } catch (e) {
      return PushMessageContent({
        "@type": "error",
        "error": "${e}",
        "message": "error method PushMessageContent.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  bool? get is_pinned {
    try {
      return (rawData["is_pinned"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  Animation get animation {
    try {
      return Animation((rawData["animation"] as Map));
    } catch (e) {
      return Animation({"@type": "error", "error": "${e}", "message": "error at PushMessageContent animation"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  String? get caption {
    try {
      return (rawData["caption"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  Audio get audio {
    try {
      return Audio((rawData["audio"] as Map));
    } catch (e) {
      return Audio({"@type": "error", "error": "${e}", "message": "error at PushMessageContent audio"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  String? get name {
    try {
      return (rawData["name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  Document get document {
    try {
      return Document((rawData["document"] as Map));
    } catch (e) {
      return Document({"@type": "error", "error": "${e}", "message": "error at PushMessageContent document"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  int? get score {
    try {
      return (rawData["score"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  String? get price {
    try {
      return (rawData["price"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  bool? get is_live {
    try {
      return (rawData["is_live"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  Photo get photo {
    try {
      return Photo((rawData["photo"] as Map));
    } catch (e) {
      return Photo({"@type": "error", "error": "${e}", "message": "error at PushMessageContent photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  bool? get is_secret {
    try {
      return (rawData["is_secret"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  String? get question {
    try {
      return (rawData["question"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  bool? get is_regular {
    try {
      return (rawData["is_regular"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  Sticker get sticker {
    try {
      return Sticker((rawData["sticker"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at PushMessageContent sticker"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  String? get emoji {
    try {
      return (rawData["emoji"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  String? get text {
    try {
      return (rawData["text"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  Video get video {
    try {
      return Video((rawData["video"] as Map));
    } catch (e) {
      return Video({"@type": "error", "error": "${e}", "message": "error at PushMessageContent video"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  VideoNote get video_note {
    try {
      return VideoNote((rawData["video_note"] as Map));
    } catch (e) {
      return VideoNote({"@type": "error", "error": "${e}", "message": "error at PushMessageContent video_note"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  VoiceNote get voice_note {
    try {
      return VoiceNote((rawData["voice_note"] as Map));
    } catch (e) {
      return VoiceNote({"@type": "error", "error": "${e}", "message": "error at PushMessageContent voice_note"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  String? get member_name {
    try {
      return (rawData["member_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  bool? get is_current_user {
    try {
      return (rawData["is_current_user"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  bool? get is_returned {
    try {
      return (rawData["is_returned"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  String? get theme_name {
    try {
      return (rawData["theme_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  bool? get is_left {
    try {
      return (rawData["is_left"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  String? get amount {
    try {
      return (rawData["amount"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  bool? get has_photos {
    try {
      return (rawData["has_photos"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  bool? get has_videos {
    try {
      return (rawData["has_videos"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  bool? get has_audios {
    try {
      return (rawData["has_audios"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1PushMessageContent.html).
  bool? get has_documents {
    try {
      return (rawData["has_documents"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationType.html).
class NotificationType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationType.html).
  NotificationType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationType.html).
  factory NotificationType.create({
    String special_type = "notificationTypeNewMessage",
    Message? message,
    bool? show_preview,
    int? call_id,
    int? message_id,
    MessageSender? sender_id,
    String? sender_name,
    bool? is_outgoing,
    PushMessageContent? content,
  }) {
    try {
      return NotificationType({
        "@type": special_type,
        "message": (message != null) ? message.toJson() : null,
        "show_preview": show_preview,
        "call_id": call_id,
        "message_id": message_id,
        "sender_id": (sender_id != null) ? sender_id.toJson() : null,
        "sender_name": sender_name,
        "is_outgoing": is_outgoing,
        "content": (content != null) ? content.toJson() : null,
      });
    } catch (e) {
      return NotificationType({
        "@type": "error",
        "error": "${e}",
        "message": "error method NotificationType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationType.html).
  Message get message {
    try {
      return Message((rawData["message"] as Map));
    } catch (e) {
      return Message({"@type": "error", "error": "${e}", "message": "error at NotificationType message"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationType.html).
  bool? get show_preview {
    try {
      return (rawData["show_preview"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationType.html).
  int? get call_id {
    try {
      return (rawData["call_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationType.html).
  int? get message_id {
    try {
      return (rawData["message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationType.html).
  MessageSender get sender_id {
    try {
      return MessageSender((rawData["sender_id"] as Map));
    } catch (e) {
      return MessageSender({"@type": "error", "error": "${e}", "message": "error at NotificationType sender_id"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationType.html).
  String? get sender_name {
    try {
      return (rawData["sender_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationType.html).
  bool? get is_outgoing {
    try {
      return (rawData["is_outgoing"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationType.html).
  PushMessageContent get content {
    try {
      return PushMessageContent((rawData["content"] as Map));
    } catch (e) {
      return PushMessageContent({"@type": "error", "error": "${e}", "message": "error at NotificationType content"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationGroupType.html).
class NotificationGroupType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationGroupType.html).
  NotificationGroupType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationGroupType.html).
  factory NotificationGroupType.create({
    String special_type = "notificationGroupTypeMessages",
  }) {
    try {
      return NotificationGroupType({
        "@type": special_type,
      });
    } catch (e) {
      return NotificationGroupType({
        "@type": "error",
        "error": "${e}",
        "message": "error method NotificationGroupType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationGroupType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSound.html).
class NotificationSound {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSound.html).
  NotificationSound(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSound.html).
  factory NotificationSound.create({
    String special_type = "notificationSound",
    int? id,
    int? duration,
    int? date,
    String? title,
    String? data,
    File? sound,
  }) {
    try {
      return NotificationSound({
        "@type": special_type,
        "id": id,
        "duration": duration,
        "date": date,
        "title": title,
        "data": data,
        "sound": (sound != null) ? sound.toJson() : null,
      });
    } catch (e) {
      return NotificationSound({
        "@type": "error",
        "error": "${e}",
        "message": "error method NotificationSound.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSound.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSound.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSound.html).
  int? get duration {
    try {
      return (rawData["duration"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSound.html).
  int? get date {
    try {
      return (rawData["date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSound.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSound.html).
  String? get data {
    try {
      return (rawData["data"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSound.html).
  File get sound {
    try {
      return File((rawData["sound"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at NotificationSound sound"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSounds.html).
class NotificationSounds {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSounds.html).
  NotificationSounds(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSounds.html).
  factory NotificationSounds.create({
    String special_type = "notificationSounds",
    List<NotificationSound>? notification_sounds,
  }) {
    try {
      return NotificationSounds({
        "@type": special_type,
        "notification_sounds": (notification_sounds != null)
            ? notification_sounds.map((e) {
                return NotificationSound((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return NotificationSounds({
        "@type": "error",
        "error": "${e}",
        "message": "error method NotificationSounds.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSounds.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationSounds.html).
  List<NotificationSound> get notification_sounds {
    try {
      return (rawData["notification_sounds"] as List)
          .map((e) {
            return NotificationSound((e as Map));
          })
          .toList()
          .cast<NotificationSound>();
    } catch (e) {
      return [
        NotificationSound({"@type": "error", "error": "${e}", "message": "error at NotificationSounds notification_sounds"})
      ].cast<NotificationSound>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Notification.html).
class Notification {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Notification.html).
  Notification(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Notification.html).
  factory Notification.create({
    String special_type = "notification",
    int? id,
    int? date,
    bool? is_silent,
    NotificationType? type,
  }) {
    try {
      return Notification({
        "@type": special_type,
        "id": id,
        "date": date,
        "is_silent": is_silent,
        "type": (type != null) ? type.toJson() : null,
      });
    } catch (e) {
      return Notification({
        "@type": "error",
        "error": "${e}",
        "message": "error method Notification.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Notification.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Notification.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Notification.html).
  int? get date {
    try {
      return (rawData["date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Notification.html).
  bool? get is_silent {
    try {
      return (rawData["is_silent"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Notification.html).
  NotificationType get type {
    try {
      return NotificationType((rawData["type"] as Map));
    } catch (e) {
      return NotificationType({"@type": "error", "error": "${e}", "message": "error at Notification type"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationGroup.html).
class NotificationGroup {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationGroup.html).
  NotificationGroup(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationGroup.html).
  factory NotificationGroup.create({
    String special_type = "notificationGroup",
    int? id,
    NotificationGroupType? type,
    int? chat_id,
    int? total_count,
    List<Notification>? notifications,
  }) {
    try {
      return NotificationGroup({
        "@type": special_type,
        "id": id,
        "type": (type != null) ? type.toJson() : null,
        "chat_id": chat_id,
        "total_count": total_count,
        "notifications": (notifications != null)
            ? notifications.map((e) {
                return Notification((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return NotificationGroup({
        "@type": "error",
        "error": "${e}",
        "message": "error method NotificationGroup.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationGroup.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationGroup.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationGroup.html).
  NotificationGroupType get type {
    try {
      return NotificationGroupType((rawData["type"] as Map));
    } catch (e) {
      return NotificationGroupType({"@type": "error", "error": "${e}", "message": "error at NotificationGroup type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationGroup.html).
  int? get chat_id {
    try {
      return (rawData["chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationGroup.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NotificationGroup.html).
  List<Notification> get notifications {
    try {
      return (rawData["notifications"] as List)
          .map((e) {
            return Notification((e as Map));
          })
          .toList()
          .cast<Notification>();
    } catch (e) {
      return [
        Notification({"@type": "error", "error": "${e}", "message": "error at NotificationGroup notifications"})
      ].cast<Notification>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1OptionValue.html).
class OptionValue {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1OptionValue.html).
  OptionValue(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1OptionValue.html).
  factory OptionValue.create({
    String special_type = "optionValueBoolean",
    String? value,
  }) {
    try {
      return OptionValue({
        "@type": special_type,
        "value": value,
      });
    } catch (e) {
      return OptionValue({
        "@type": "error",
        "error": "${e}",
        "message": "error method OptionValue.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1OptionValue.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1OptionValue.html).
  String? get value {
    try {
      return (rawData["value"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1JsonObjectMember.html).
class JsonObjectMember {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1JsonObjectMember.html).
  JsonObjectMember(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1JsonObjectMember.html).
  factory JsonObjectMember.create({
    String special_type = "jsonObjectMember",
    String? key,
    JsonValue? value,
  }) {
    try {
      return JsonObjectMember({
        "@type": special_type,
        "key": key,
        "value": (value != null) ? value.toJson() : null,
      });
    } catch (e) {
      return JsonObjectMember({
        "@type": "error",
        "error": "${e}",
        "message": "error method JsonObjectMember.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1JsonObjectMember.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1JsonObjectMember.html).
  String? get key {
    try {
      return (rawData["key"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1JsonObjectMember.html).
  JsonValue get value {
    try {
      return JsonValue((rawData["value"] as Map));
    } catch (e) {
      return JsonValue({"@type": "error", "error": "${e}", "message": "error at JsonObjectMember value"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1JsonValue.html).
class JsonValue {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1JsonValue.html).
  JsonValue(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1JsonValue.html).
  factory JsonValue.create({
    String special_type = "jsonValueNull",
    String? value,
    List<JsonValue>? values,
    List<JsonObjectMember>? members,
  }) {
    try {
      return JsonValue({
        "@type": special_type,
        "value": value,
        "values": (values != null)
            ? values.map((e) {
                return JsonValue((e as Map)).toJson();
              }).toList()
            : null,
        "members": (members != null)
            ? members.map((e) {
                return JsonObjectMember((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return JsonValue({
        "@type": "error",
        "error": "${e}",
        "message": "error method JsonValue.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1JsonValue.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1JsonValue.html).
  String? get value {
    try {
      return (rawData["value"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1JsonValue.html).
  List<JsonValue> get values {
    try {
      return (rawData["values"] as List)
          .map((e) {
            return JsonValue((e as Map));
          })
          .toList()
          .cast<JsonValue>();
    } catch (e) {
      return [
        JsonValue({"@type": "error", "error": "${e}", "message": "error at JsonValue values"})
      ].cast<JsonValue>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1JsonValue.html).
  List<JsonObjectMember> get members {
    try {
      return (rawData["members"] as List)
          .map((e) {
            return JsonObjectMember((e as Map));
          })
          .toList()
          .cast<JsonObjectMember>();
    } catch (e) {
      return [
        JsonObjectMember({"@type": "error", "error": "${e}", "message": "error at JsonValue members"})
      ].cast<JsonObjectMember>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserPrivacySettingRule.html).
class UserPrivacySettingRule {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserPrivacySettingRule.html).
  UserPrivacySettingRule(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserPrivacySettingRule.html).
  factory UserPrivacySettingRule.create({
    String special_type = "userPrivacySettingRuleAllowAll",
    List<int>? user_ids,
    List<int>? chat_ids,
  }) {
    try {
      return UserPrivacySettingRule({
        "@type": special_type,
        "user_ids": user_ids,
        "chat_ids": chat_ids,
      });
    } catch (e) {
      return UserPrivacySettingRule({
        "@type": "error",
        "error": "${e}",
        "message": "error method UserPrivacySettingRule.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserPrivacySettingRule.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserPrivacySettingRule.html).
  List<int> get user_ids {
    try {
      return (rawData["user_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserPrivacySettingRule.html).
  List<int> get chat_ids {
    try {
      return (rawData["chat_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserPrivacySettingRules.html).
class UserPrivacySettingRules {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserPrivacySettingRules.html).
  UserPrivacySettingRules(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserPrivacySettingRules.html).
  factory UserPrivacySettingRules.create({
    String special_type = "userPrivacySettingRules",
    List<UserPrivacySettingRule>? rules,
  }) {
    try {
      return UserPrivacySettingRules({
        "@type": special_type,
        "rules": (rules != null)
            ? rules.map((e) {
                return UserPrivacySettingRule((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return UserPrivacySettingRules({
        "@type": "error",
        "error": "${e}",
        "message": "error method UserPrivacySettingRules.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserPrivacySettingRules.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserPrivacySettingRules.html).
  List<UserPrivacySettingRule> get rules {
    try {
      return (rawData["rules"] as List)
          .map((e) {
            return UserPrivacySettingRule((e as Map));
          })
          .toList()
          .cast<UserPrivacySettingRule>();
    } catch (e) {
      return [
        UserPrivacySettingRule({"@type": "error", "error": "${e}", "message": "error at UserPrivacySettingRules rules"})
      ].cast<UserPrivacySettingRule>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserPrivacySetting.html).
class UserPrivacySetting {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserPrivacySetting.html).
  UserPrivacySetting(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserPrivacySetting.html).
  factory UserPrivacySetting.create({
    String special_type = "userPrivacySettingShowStatus",
  }) {
    try {
      return UserPrivacySetting({
        "@type": special_type,
      });
    } catch (e) {
      return UserPrivacySetting({
        "@type": "error",
        "error": "${e}",
        "message": "error method UserPrivacySetting.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserPrivacySetting.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AccountTtl.html).
class AccountTtl {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AccountTtl.html).
  AccountTtl(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AccountTtl.html).
  factory AccountTtl.create({
    String special_type = "accountTtl",
    int? days,
  }) {
    try {
      return AccountTtl({
        "@type": special_type,
        "days": days,
      });
    } catch (e) {
      return AccountTtl({
        "@type": "error",
        "error": "${e}",
        "message": "error method AccountTtl.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AccountTtl.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AccountTtl.html).
  int? get days {
    try {
      return (rawData["days"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SessionType.html).
class SessionType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SessionType.html).
  SessionType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SessionType.html).
  factory SessionType.create({
    String special_type = "sessionTypeAndroid",
  }) {
    try {
      return SessionType({
        "@type": special_type,
      });
    } catch (e) {
      return SessionType({
        "@type": "error",
        "error": "${e}",
        "message": "error method SessionType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SessionType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
class Session {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  Session(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  factory Session.create({
    String special_type = "session",
    int? id,
    bool? is_current,
    bool? is_password_pending,
    bool? can_accept_secret_chats,
    bool? can_accept_calls,
    SessionType? type,
    int? api_id,
    String? application_name,
    String? application_version,
    bool? is_official_application,
    String? device_model,
    String? platform,
    String? system_version,
    int? log_in_date,
    int? last_active_date,
    String? ip,
    String? country,
    String? region,
  }) {
    try {
      return Session({
        "@type": special_type,
        "id": id,
        "is_current": is_current,
        "is_password_pending": is_password_pending,
        "can_accept_secret_chats": can_accept_secret_chats,
        "can_accept_calls": can_accept_calls,
        "type": (type != null) ? type.toJson() : null,
        "api_id": api_id,
        "application_name": application_name,
        "application_version": application_version,
        "is_official_application": is_official_application,
        "device_model": device_model,
        "platform": platform,
        "system_version": system_version,
        "log_in_date": log_in_date,
        "last_active_date": last_active_date,
        "ip": ip,
        "country": country,
        "region": region,
      });
    } catch (e) {
      return Session({
        "@type": "error",
        "error": "${e}",
        "message": "error method Session.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  bool? get is_current {
    try {
      return (rawData["is_current"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  bool? get is_password_pending {
    try {
      return (rawData["is_password_pending"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  bool? get can_accept_secret_chats {
    try {
      return (rawData["can_accept_secret_chats"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  bool? get can_accept_calls {
    try {
      return (rawData["can_accept_calls"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  SessionType get type {
    try {
      return SessionType((rawData["type"] as Map));
    } catch (e) {
      return SessionType({"@type": "error", "error": "${e}", "message": "error at Session type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  int? get api_id {
    try {
      return (rawData["api_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  String? get application_name {
    try {
      return (rawData["application_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  String? get application_version {
    try {
      return (rawData["application_version"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  bool? get is_official_application {
    try {
      return (rawData["is_official_application"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  String? get device_model {
    try {
      return (rawData["device_model"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  String? get platform {
    try {
      return (rawData["platform"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  String? get system_version {
    try {
      return (rawData["system_version"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  int? get log_in_date {
    try {
      return (rawData["log_in_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  int? get last_active_date {
    try {
      return (rawData["last_active_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  String? get ip {
    try {
      return (rawData["ip"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  String? get country {
    try {
      return (rawData["country"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Session.html).
  String? get region {
    try {
      return (rawData["region"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sessions.html).
class Sessions {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sessions.html).
  Sessions(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sessions.html).
  factory Sessions.create({
    String special_type = "sessions",
    List<Session>? sessions,
    int? inactive_session_ttl_days,
  }) {
    try {
      return Sessions({
        "@type": special_type,
        "sessions": (sessions != null)
            ? sessions.map((e) {
                return Session((e as Map)).toJson();
              }).toList()
            : null,
        "inactive_session_ttl_days": inactive_session_ttl_days,
      });
    } catch (e) {
      return Sessions({
        "@type": "error",
        "error": "${e}",
        "message": "error method Sessions.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sessions.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sessions.html).
  List<Session> get sessions {
    try {
      return (rawData["sessions"] as List)
          .map((e) {
            return Session((e as Map));
          })
          .toList()
          .cast<Session>();
    } catch (e) {
      return [
        Session({"@type": "error", "error": "${e}", "message": "error at Sessions sessions"})
      ].cast<Session>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Sessions.html).
  int? get inactive_session_ttl_days {
    try {
      return (rawData["inactive_session_ttl_days"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsite.html).
class ConnectedWebsite {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsite.html).
  ConnectedWebsite(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsite.html).
  factory ConnectedWebsite.create({
    String special_type = "connectedWebsite",
    int? id,
    String? domain_name,
    int? bot_user_id,
    String? browser,
    String? platform,
    int? log_in_date,
    int? last_active_date,
    String? ip,
    String? location,
  }) {
    try {
      return ConnectedWebsite({
        "@type": special_type,
        "id": id,
        "domain_name": domain_name,
        "bot_user_id": bot_user_id,
        "browser": browser,
        "platform": platform,
        "log_in_date": log_in_date,
        "last_active_date": last_active_date,
        "ip": ip,
        "location": location,
      });
    } catch (e) {
      return ConnectedWebsite({
        "@type": "error",
        "error": "${e}",
        "message": "error method ConnectedWebsite.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsite.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsite.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsite.html).
  String? get domain_name {
    try {
      return (rawData["domain_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsite.html).
  int? get bot_user_id {
    try {
      return (rawData["bot_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsite.html).
  String? get browser {
    try {
      return (rawData["browser"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsite.html).
  String? get platform {
    try {
      return (rawData["platform"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsite.html).
  int? get log_in_date {
    try {
      return (rawData["log_in_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsite.html).
  int? get last_active_date {
    try {
      return (rawData["last_active_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsite.html).
  String? get ip {
    try {
      return (rawData["ip"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsite.html).
  String? get location {
    try {
      return (rawData["location"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsites.html).
class ConnectedWebsites {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsites.html).
  ConnectedWebsites(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsites.html).
  factory ConnectedWebsites.create({
    String special_type = "connectedWebsites",
    List<ConnectedWebsite>? websites,
  }) {
    try {
      return ConnectedWebsites({
        "@type": special_type,
        "websites": (websites != null)
            ? websites.map((e) {
                return ConnectedWebsite((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return ConnectedWebsites({
        "@type": "error",
        "error": "${e}",
        "message": "error method ConnectedWebsites.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsites.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectedWebsites.html).
  List<ConnectedWebsite> get websites {
    try {
      return (rawData["websites"] as List)
          .map((e) {
            return ConnectedWebsite((e as Map));
          })
          .toList()
          .cast<ConnectedWebsite>();
    } catch (e) {
      return [
        ConnectedWebsite({"@type": "error", "error": "${e}", "message": "error at ConnectedWebsites websites"})
      ].cast<ConnectedWebsite>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatReportReason.html).
class ChatReportReason {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatReportReason.html).
  ChatReportReason(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatReportReason.html).
  factory ChatReportReason.create({
    String special_type = "chatReportReasonSpam",
  }) {
    try {
      return ChatReportReason({
        "@type": special_type,
      });
    } catch (e) {
      return ChatReportReason({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatReportReason.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatReportReason.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TargetChat.html).
class TargetChat {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TargetChat.html).
  TargetChat(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TargetChat.html).
  factory TargetChat.create({
    String special_type = "targetChatCurrent",
    bool? allow_user_chats,
    bool? allow_bot_chats,
    bool? allow_group_chats,
    bool? allow_channel_chats,
    InternalLinkType? link,
  }) {
    try {
      return TargetChat({
        "@type": special_type,
        "allow_user_chats": allow_user_chats,
        "allow_bot_chats": allow_bot_chats,
        "allow_group_chats": allow_group_chats,
        "allow_channel_chats": allow_channel_chats,
        "link": (link != null) ? link.toJson() : null,
      });
    } catch (e) {
      return TargetChat({
        "@type": "error",
        "error": "${e}",
        "message": "error method TargetChat.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TargetChat.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TargetChat.html).
  bool? get allow_user_chats {
    try {
      return (rawData["allow_user_chats"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TargetChat.html).
  bool? get allow_bot_chats {
    try {
      return (rawData["allow_bot_chats"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TargetChat.html).
  bool? get allow_group_chats {
    try {
      return (rawData["allow_group_chats"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TargetChat.html).
  bool? get allow_channel_chats {
    try {
      return (rawData["allow_channel_chats"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TargetChat.html).
  InternalLinkType get link {
    try {
      return InternalLinkType((rawData["link"] as Map));
    } catch (e) {
      return InternalLinkType({"@type": "error", "error": "${e}", "message": "error at TargetChat link"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
class InternalLinkType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  InternalLinkType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  factory InternalLinkType.create({
    String special_type = "internalLinkTypeActiveSessions",
    TargetChat? target_chat,
    String? bot_username,
    String? url,
    String? code,
    String? background_name,
    String? start_parameter,
    bool? autostart,
    ChatAdministratorRights? administrator_rights,
    String? invite_link,
    String? game_short_name,
    String? fallback_url,
    String? invoice_name,
    String? language_pack_id,
    FormattedText? text,
    bool? contains_link,
    int? bot_user_id,
    String? scope,
    String? public_key,
    String? nonce,
    String? callback_url,
    String? hash,
    String? phone_number,
    String? referrer,
    String? server,
    int? port,
    ProxyType? type,
    String? chat_username,
    String? sticker_set_name,
    String? theme_name,
    String? link,
    String? invite_hash,
    bool? is_live_stream,
  }) {
    try {
      return InternalLinkType({
        "@type": special_type,
        "target_chat": (target_chat != null) ? target_chat.toJson() : null,
        "bot_username": bot_username,
        "url": url,
        "code": code,
        "background_name": background_name,
        "start_parameter": start_parameter,
        "autostart": autostart,
        "administrator_rights": (administrator_rights != null) ? administrator_rights.toJson() : null,
        "invite_link": invite_link,
        "game_short_name": game_short_name,
        "fallback_url": fallback_url,
        "invoice_name": invoice_name,
        "language_pack_id": language_pack_id,
        "text": (text != null) ? text.toJson() : null,
        "contains_link": contains_link,
        "bot_user_id": bot_user_id,
        "scope": scope,
        "public_key": public_key,
        "nonce": nonce,
        "callback_url": callback_url,
        "hash": hash,
        "phone_number": phone_number,
        "referrer": referrer,
        "server": server,
        "port": port,
        "type": (type != null) ? type.toJson() : null,
        "chat_username": chat_username,
        "sticker_set_name": sticker_set_name,
        "theme_name": theme_name,
        "link": link,
        "invite_hash": invite_hash,
        "is_live_stream": is_live_stream,
      });
    } catch (e) {
      return InternalLinkType({
        "@type": "error",
        "error": "${e}",
        "message": "error method InternalLinkType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  TargetChat get target_chat {
    try {
      return TargetChat((rawData["target_chat"] as Map));
    } catch (e) {
      return TargetChat({"@type": "error", "error": "${e}", "message": "error at InternalLinkType target_chat"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get bot_username {
    try {
      return (rawData["bot_username"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get code {
    try {
      return (rawData["code"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get background_name {
    try {
      return (rawData["background_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get start_parameter {
    try {
      return (rawData["start_parameter"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  bool? get autostart {
    try {
      return (rawData["autostart"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  ChatAdministratorRights get administrator_rights {
    try {
      return ChatAdministratorRights((rawData["administrator_rights"] as Map));
    } catch (e) {
      return ChatAdministratorRights({"@type": "error", "error": "${e}", "message": "error at InternalLinkType administrator_rights"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get invite_link {
    try {
      return (rawData["invite_link"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get game_short_name {
    try {
      return (rawData["game_short_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get fallback_url {
    try {
      return (rawData["fallback_url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get invoice_name {
    try {
      return (rawData["invoice_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get language_pack_id {
    try {
      return (rawData["language_pack_id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  FormattedText get text {
    try {
      return FormattedText((rawData["text"] as Map));
    } catch (e) {
      return FormattedText({"@type": "error", "error": "${e}", "message": "error at InternalLinkType text"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  bool? get contains_link {
    try {
      return (rawData["contains_link"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  int? get bot_user_id {
    try {
      return (rawData["bot_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get scope {
    try {
      return (rawData["scope"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get public_key {
    try {
      return (rawData["public_key"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get nonce {
    try {
      return (rawData["nonce"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get callback_url {
    try {
      return (rawData["callback_url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get hash {
    try {
      return (rawData["hash"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get phone_number {
    try {
      return (rawData["phone_number"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get referrer {
    try {
      return (rawData["referrer"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get server {
    try {
      return (rawData["server"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  int? get port {
    try {
      return (rawData["port"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  ProxyType get type {
    try {
      return ProxyType((rawData["type"] as Map));
    } catch (e) {
      return ProxyType({"@type": "error", "error": "${e}", "message": "error at InternalLinkType type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get chat_username {
    try {
      return (rawData["chat_username"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get sticker_set_name {
    try {
      return (rawData["sticker_set_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get theme_name {
    try {
      return (rawData["theme_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get link {
    try {
      return (rawData["link"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  String? get invite_hash {
    try {
      return (rawData["invite_hash"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InternalLinkType.html).
  bool? get is_live_stream {
    try {
      return (rawData["is_live_stream"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageLink.html).
class MessageLink {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageLink.html).
  MessageLink(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageLink.html).
  factory MessageLink.create({
    String special_type = "messageLink",
    String? link,
    bool? is_public,
  }) {
    try {
      return MessageLink({
        "@type": special_type,
        "link": link,
        "is_public": is_public,
      });
    } catch (e) {
      return MessageLink({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageLink.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageLink.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageLink.html).
  String? get link {
    try {
      return (rawData["link"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageLink.html).
  bool? get is_public {
    try {
      return (rawData["is_public"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageLinkInfo.html).
class MessageLinkInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageLinkInfo.html).
  MessageLinkInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageLinkInfo.html).
  factory MessageLinkInfo.create({
    String special_type = "messageLinkInfo",
    bool? is_public,
    int? chat_id,
    Message? message,
    int? media_timestamp,
    bool? for_album,
    bool? for_comment,
  }) {
    try {
      return MessageLinkInfo({
        "@type": special_type,
        "is_public": is_public,
        "chat_id": chat_id,
        "message": (message != null) ? message.toJson() : null,
        "media_timestamp": media_timestamp,
        "for_album": for_album,
        "for_comment": for_comment,
      });
    } catch (e) {
      return MessageLinkInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageLinkInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageLinkInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageLinkInfo.html).
  bool? get is_public {
    try {
      return (rawData["is_public"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageLinkInfo.html).
  int? get chat_id {
    try {
      return (rawData["chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageLinkInfo.html).
  Message get message {
    try {
      return Message((rawData["message"] as Map));
    } catch (e) {
      return Message({"@type": "error", "error": "${e}", "message": "error at MessageLinkInfo message"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageLinkInfo.html).
  int? get media_timestamp {
    try {
      return (rawData["media_timestamp"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageLinkInfo.html).
  bool? get for_album {
    try {
      return (rawData["for_album"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageLinkInfo.html).
  bool? get for_comment {
    try {
      return (rawData["for_comment"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FilePart.html).
class FilePart {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FilePart.html).
  FilePart(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FilePart.html).
  factory FilePart.create({
    String special_type = "filePart",
    String? data,
  }) {
    try {
      return FilePart({
        "@type": special_type,
        "data": data,
      });
    } catch (e) {
      return FilePart({
        "@type": "error",
        "error": "${e}",
        "message": "error method FilePart.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FilePart.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FilePart.html).
  String? get data {
    try {
      return (rawData["data"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileType.html).
class FileType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileType.html).
  FileType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileType.html).
  factory FileType.create({
    String special_type = "fileTypeNone",
  }) {
    try {
      return FileType({
        "@type": special_type,
      });
    } catch (e) {
      return FileType({
        "@type": "error",
        "error": "${e}",
        "message": "error method FileType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsByFileType.html).
class StorageStatisticsByFileType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsByFileType.html).
  StorageStatisticsByFileType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsByFileType.html).
  factory StorageStatisticsByFileType.create({
    String special_type = "storageStatisticsByFileType",
    FileType? file_type,
    int? size,
    int? count,
  }) {
    try {
      return StorageStatisticsByFileType({
        "@type": special_type,
        "file_type": (file_type != null) ? file_type.toJson() : null,
        "size": size,
        "count": count,
      });
    } catch (e) {
      return StorageStatisticsByFileType({
        "@type": "error",
        "error": "${e}",
        "message": "error method StorageStatisticsByFileType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsByFileType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsByFileType.html).
  FileType get file_type {
    try {
      return FileType((rawData["file_type"] as Map));
    } catch (e) {
      return FileType({"@type": "error", "error": "${e}", "message": "error at StorageStatisticsByFileType file_type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsByFileType.html).
  int? get size {
    try {
      return (rawData["size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsByFileType.html).
  int? get count {
    try {
      return (rawData["count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsByChat.html).
class StorageStatisticsByChat {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsByChat.html).
  StorageStatisticsByChat(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsByChat.html).
  factory StorageStatisticsByChat.create({
    String special_type = "storageStatisticsByChat",
    int? chat_id,
    int? size,
    int? count,
    List<StorageStatisticsByFileType>? by_file_type,
  }) {
    try {
      return StorageStatisticsByChat({
        "@type": special_type,
        "chat_id": chat_id,
        "size": size,
        "count": count,
        "by_file_type": (by_file_type != null)
            ? by_file_type.map((e) {
                return StorageStatisticsByFileType((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return StorageStatisticsByChat({
        "@type": "error",
        "error": "${e}",
        "message": "error method StorageStatisticsByChat.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsByChat.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsByChat.html).
  int? get chat_id {
    try {
      return (rawData["chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsByChat.html).
  int? get size {
    try {
      return (rawData["size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsByChat.html).
  int? get count {
    try {
      return (rawData["count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsByChat.html).
  List<StorageStatisticsByFileType> get by_file_type {
    try {
      return (rawData["by_file_type"] as List)
          .map((e) {
            return StorageStatisticsByFileType((e as Map));
          })
          .toList()
          .cast<StorageStatisticsByFileType>();
    } catch (e) {
      return [
        StorageStatisticsByFileType({"@type": "error", "error": "${e}", "message": "error at StorageStatisticsByChat by_file_type"})
      ].cast<StorageStatisticsByFileType>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatistics.html).
class StorageStatistics {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatistics.html).
  StorageStatistics(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatistics.html).
  factory StorageStatistics.create({
    String special_type = "storageStatistics",
    int? size,
    int? count,
    List<StorageStatisticsByChat>? by_chat,
  }) {
    try {
      return StorageStatistics({
        "@type": special_type,
        "size": size,
        "count": count,
        "by_chat": (by_chat != null)
            ? by_chat.map((e) {
                return StorageStatisticsByChat((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return StorageStatistics({
        "@type": "error",
        "error": "${e}",
        "message": "error method StorageStatistics.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatistics.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatistics.html).
  int? get size {
    try {
      return (rawData["size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatistics.html).
  int? get count {
    try {
      return (rawData["count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatistics.html).
  List<StorageStatisticsByChat> get by_chat {
    try {
      return (rawData["by_chat"] as List)
          .map((e) {
            return StorageStatisticsByChat((e as Map));
          })
          .toList()
          .cast<StorageStatisticsByChat>();
    } catch (e) {
      return [
        StorageStatisticsByChat({"@type": "error", "error": "${e}", "message": "error at StorageStatistics by_chat"})
      ].cast<StorageStatisticsByChat>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsFast.html).
class StorageStatisticsFast {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsFast.html).
  StorageStatisticsFast(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsFast.html).
  factory StorageStatisticsFast.create({
    String special_type = "storageStatisticsFast",
    int? files_size,
    int? file_count,
    int? database_size,
    int? language_pack_database_size,
    int? log_size,
  }) {
    try {
      return StorageStatisticsFast({
        "@type": special_type,
        "files_size": files_size,
        "file_count": file_count,
        "database_size": database_size,
        "language_pack_database_size": language_pack_database_size,
        "log_size": log_size,
      });
    } catch (e) {
      return StorageStatisticsFast({
        "@type": "error",
        "error": "${e}",
        "message": "error method StorageStatisticsFast.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsFast.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsFast.html).
  int? get files_size {
    try {
      return (rawData["files_size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsFast.html).
  int? get file_count {
    try {
      return (rawData["file_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsFast.html).
  int? get database_size {
    try {
      return (rawData["database_size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsFast.html).
  int? get language_pack_database_size {
    try {
      return (rawData["language_pack_database_size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StorageStatisticsFast.html).
  int? get log_size {
    try {
      return (rawData["log_size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DatabaseStatistics.html).
class DatabaseStatistics {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DatabaseStatistics.html).
  DatabaseStatistics(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DatabaseStatistics.html).
  factory DatabaseStatistics.create({
    String special_type = "databaseStatistics",
    String? statistics,
  }) {
    try {
      return DatabaseStatistics({
        "@type": special_type,
        "statistics": statistics,
      });
    } catch (e) {
      return DatabaseStatistics({
        "@type": "error",
        "error": "${e}",
        "message": "error method DatabaseStatistics.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DatabaseStatistics.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DatabaseStatistics.html).
  String? get statistics {
    try {
      return (rawData["statistics"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkType.html).
class NetworkType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkType.html).
  NetworkType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkType.html).
  factory NetworkType.create({
    String special_type = "networkTypeNone",
  }) {
    try {
      return NetworkType({
        "@type": special_type,
      });
    } catch (e) {
      return NetworkType({
        "@type": "error",
        "error": "${e}",
        "message": "error method NetworkType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkStatisticsEntry.html).
class NetworkStatisticsEntry {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkStatisticsEntry.html).
  NetworkStatisticsEntry(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkStatisticsEntry.html).
  factory NetworkStatisticsEntry.create({
    String special_type = "networkStatisticsEntryFile",
    FileType? file_type,
    NetworkType? network_type,
    int? sent_bytes,
    int? received_bytes,
    double? duration,
  }) {
    try {
      return NetworkStatisticsEntry({
        "@type": special_type,
        "file_type": (file_type != null) ? file_type.toJson() : null,
        "network_type": (network_type != null) ? network_type.toJson() : null,
        "sent_bytes": sent_bytes,
        "received_bytes": received_bytes,
        "duration": duration,
      });
    } catch (e) {
      return NetworkStatisticsEntry({
        "@type": "error",
        "error": "${e}",
        "message": "error method NetworkStatisticsEntry.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkStatisticsEntry.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkStatisticsEntry.html).
  FileType get file_type {
    try {
      return FileType((rawData["file_type"] as Map));
    } catch (e) {
      return FileType({"@type": "error", "error": "${e}", "message": "error at NetworkStatisticsEntry file_type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkStatisticsEntry.html).
  NetworkType get network_type {
    try {
      return NetworkType((rawData["network_type"] as Map));
    } catch (e) {
      return NetworkType({"@type": "error", "error": "${e}", "message": "error at NetworkStatisticsEntry network_type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkStatisticsEntry.html).
  int? get sent_bytes {
    try {
      return (rawData["sent_bytes"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkStatisticsEntry.html).
  int? get received_bytes {
    try {
      return (rawData["received_bytes"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkStatisticsEntry.html).
  double? get duration {
    try {
      return (rawData["duration"] as double);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkStatistics.html).
class NetworkStatistics {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkStatistics.html).
  NetworkStatistics(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkStatistics.html).
  factory NetworkStatistics.create({
    String special_type = "networkStatistics",
    int? since_date,
    List<NetworkStatisticsEntry>? entries,
  }) {
    try {
      return NetworkStatistics({
        "@type": special_type,
        "since_date": since_date,
        "entries": (entries != null)
            ? entries.map((e) {
                return NetworkStatisticsEntry((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return NetworkStatistics({
        "@type": "error",
        "error": "${e}",
        "message": "error method NetworkStatistics.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkStatistics.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkStatistics.html).
  int? get since_date {
    try {
      return (rawData["since_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1NetworkStatistics.html).
  List<NetworkStatisticsEntry> get entries {
    try {
      return (rawData["entries"] as List)
          .map((e) {
            return NetworkStatisticsEntry((e as Map));
          })
          .toList()
          .cast<NetworkStatisticsEntry>();
    } catch (e) {
      return [
        NetworkStatisticsEntry({"@type": "error", "error": "${e}", "message": "error at NetworkStatistics entries"})
      ].cast<NetworkStatisticsEntry>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettings.html).
class AutoDownloadSettings {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettings.html).
  AutoDownloadSettings(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettings.html).
  factory AutoDownloadSettings.create({
    String special_type = "autoDownloadSettings",
    bool? is_auto_download_enabled,
    int? max_photo_file_size,
    int? max_video_file_size,
    int? max_other_file_size,
    int? video_upload_bitrate,
    bool? preload_large_videos,
    bool? preload_next_audio,
    bool? use_less_data_for_calls,
  }) {
    try {
      return AutoDownloadSettings({
        "@type": special_type,
        "is_auto_download_enabled": is_auto_download_enabled,
        "max_photo_file_size": max_photo_file_size,
        "max_video_file_size": max_video_file_size,
        "max_other_file_size": max_other_file_size,
        "video_upload_bitrate": video_upload_bitrate,
        "preload_large_videos": preload_large_videos,
        "preload_next_audio": preload_next_audio,
        "use_less_data_for_calls": use_less_data_for_calls,
      });
    } catch (e) {
      return AutoDownloadSettings({
        "@type": "error",
        "error": "${e}",
        "message": "error method AutoDownloadSettings.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettings.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettings.html).
  bool? get is_auto_download_enabled {
    try {
      return (rawData["is_auto_download_enabled"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettings.html).
  int? get max_photo_file_size {
    try {
      return (rawData["max_photo_file_size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettings.html).
  int? get max_video_file_size {
    try {
      return (rawData["max_video_file_size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettings.html).
  int? get max_other_file_size {
    try {
      return (rawData["max_other_file_size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettings.html).
  int? get video_upload_bitrate {
    try {
      return (rawData["video_upload_bitrate"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettings.html).
  bool? get preload_large_videos {
    try {
      return (rawData["preload_large_videos"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettings.html).
  bool? get preload_next_audio {
    try {
      return (rawData["preload_next_audio"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettings.html).
  bool? get use_less_data_for_calls {
    try {
      return (rawData["use_less_data_for_calls"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettingsPresets.html).
class AutoDownloadSettingsPresets {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettingsPresets.html).
  AutoDownloadSettingsPresets(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettingsPresets.html).
  factory AutoDownloadSettingsPresets.create({
    String special_type = "autoDownloadSettingsPresets",
    AutoDownloadSettings? low,
    AutoDownloadSettings? medium,
    AutoDownloadSettings? high,
  }) {
    try {
      return AutoDownloadSettingsPresets({
        "@type": special_type,
        "low": (low != null) ? low.toJson() : null,
        "medium": (medium != null) ? medium.toJson() : null,
        "high": (high != null) ? high.toJson() : null,
      });
    } catch (e) {
      return AutoDownloadSettingsPresets({
        "@type": "error",
        "error": "${e}",
        "message": "error method AutoDownloadSettingsPresets.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettingsPresets.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettingsPresets.html).
  AutoDownloadSettings get low {
    try {
      return AutoDownloadSettings((rawData["low"] as Map));
    } catch (e) {
      return AutoDownloadSettings({"@type": "error", "error": "${e}", "message": "error at AutoDownloadSettingsPresets low"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettingsPresets.html).
  AutoDownloadSettings get medium {
    try {
      return AutoDownloadSettings((rawData["medium"] as Map));
    } catch (e) {
      return AutoDownloadSettings({"@type": "error", "error": "${e}", "message": "error at AutoDownloadSettingsPresets medium"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1AutoDownloadSettingsPresets.html).
  AutoDownloadSettings get high {
    try {
      return AutoDownloadSettings((rawData["high"] as Map));
    } catch (e) {
      return AutoDownloadSettings({"@type": "error", "error": "${e}", "message": "error at AutoDownloadSettingsPresets high"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectionState.html).
class ConnectionState {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectionState.html).
  ConnectionState(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectionState.html).
  factory ConnectionState.create({
    String special_type = "connectionStateWaitingForNetwork",
  }) {
    try {
      return ConnectionState({
        "@type": special_type,
      });
    } catch (e) {
      return ConnectionState({
        "@type": "error",
        "error": "${e}",
        "message": "error method ConnectionState.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ConnectionState.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TopChatCategory.html).
class TopChatCategory {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TopChatCategory.html).
  TopChatCategory(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TopChatCategory.html).
  factory TopChatCategory.create({
    String special_type = "topChatCategoryUsers",
  }) {
    try {
      return TopChatCategory({
        "@type": special_type,
      });
    } catch (e) {
      return TopChatCategory({
        "@type": "error",
        "error": "${e}",
        "message": "error method TopChatCategory.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TopChatCategory.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrlType.html).
class TMeUrlType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrlType.html).
  TMeUrlType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrlType.html).
  factory TMeUrlType.create({
    String special_type = "tMeUrlTypeUser",
    int? user_id,
    int? supergroup_id,
    ChatInviteLinkInfo? info,
    int? sticker_set_id,
  }) {
    try {
      return TMeUrlType({
        "@type": special_type,
        "user_id": user_id,
        "supergroup_id": supergroup_id,
        "info": (info != null) ? info.toJson() : null,
        "sticker_set_id": sticker_set_id,
      });
    } catch (e) {
      return TMeUrlType({
        "@type": "error",
        "error": "${e}",
        "message": "error method TMeUrlType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrlType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrlType.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrlType.html).
  int? get supergroup_id {
    try {
      return (rawData["supergroup_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrlType.html).
  ChatInviteLinkInfo get info {
    try {
      return ChatInviteLinkInfo((rawData["info"] as Map));
    } catch (e) {
      return ChatInviteLinkInfo({"@type": "error", "error": "${e}", "message": "error at TMeUrlType info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrlType.html).
  int? get sticker_set_id {
    try {
      return (rawData["sticker_set_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrl.html).
class TMeUrl {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrl.html).
  TMeUrl(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrl.html).
  factory TMeUrl.create({
    String special_type = "tMeUrl",
    String? url,
    TMeUrlType? type,
  }) {
    try {
      return TMeUrl({
        "@type": special_type,
        "url": url,
        "type": (type != null) ? type.toJson() : null,
      });
    } catch (e) {
      return TMeUrl({
        "@type": "error",
        "error": "${e}",
        "message": "error method TMeUrl.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrl.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrl.html).
  String? get url {
    try {
      return (rawData["url"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrl.html).
  TMeUrlType get type {
    try {
      return TMeUrlType((rawData["type"] as Map));
    } catch (e) {
      return TMeUrlType({"@type": "error", "error": "${e}", "message": "error at TMeUrl type"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrls.html).
class TMeUrls {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrls.html).
  TMeUrls(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrls.html).
  factory TMeUrls.create({
    String special_type = "tMeUrls",
    List<TMeUrl>? urls,
  }) {
    try {
      return TMeUrls({
        "@type": special_type,
        "urls": (urls != null)
            ? urls.map((e) {
                return TMeUrl((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return TMeUrls({
        "@type": "error",
        "error": "${e}",
        "message": "error method TMeUrls.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrls.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TMeUrls.html).
  List<TMeUrl> get urls {
    try {
      return (rawData["urls"] as List)
          .map((e) {
            return TMeUrl((e as Map));
          })
          .toList()
          .cast<TMeUrl>();
    } catch (e) {
      return [
        TMeUrl({"@type": "error", "error": "${e}", "message": "error at TMeUrls urls"})
      ].cast<TMeUrl>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SuggestedAction.html).
class SuggestedAction {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SuggestedAction.html).
  SuggestedAction(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SuggestedAction.html).
  factory SuggestedAction.create({
    String special_type = "suggestedActionEnableArchiveAndMuteNewChats",
    int? supergroup_id,
    int? authorization_delay,
  }) {
    try {
      return SuggestedAction({
        "@type": special_type,
        "supergroup_id": supergroup_id,
        "authorization_delay": authorization_delay,
      });
    } catch (e) {
      return SuggestedAction({
        "@type": "error",
        "error": "${e}",
        "message": "error method SuggestedAction.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SuggestedAction.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SuggestedAction.html).
  int? get supergroup_id {
    try {
      return (rawData["supergroup_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1SuggestedAction.html).
  int? get authorization_delay {
    try {
      return (rawData["authorization_delay"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Count.html).
class Count {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Count.html).
  Count(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Count.html).
  factory Count.create({
    String special_type = "count",
    int? count,
  }) {
    try {
      return Count({
        "@type": special_type,
        "count": count,
      });
    } catch (e) {
      return Count({
        "@type": "error",
        "error": "${e}",
        "message": "error method Count.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Count.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Count.html).
  int? get count {
    try {
      return (rawData["count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Text.html).
class Text {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Text.html).
  Text(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Text.html).
  factory Text.create({
    String special_type = "text",
    String? text,
  }) {
    try {
      return Text({
        "@type": special_type,
        "text": text,
      });
    } catch (e) {
      return Text({
        "@type": "error",
        "error": "${e}",
        "message": "error method Text.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Text.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Text.html).
  String? get text {
    try {
      return (rawData["text"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Seconds.html).
class Seconds {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Seconds.html).
  Seconds(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Seconds.html).
  factory Seconds.create({
    String special_type = "seconds",
    double? seconds,
  }) {
    try {
      return Seconds({
        "@type": special_type,
        "seconds": seconds,
      });
    } catch (e) {
      return Seconds({
        "@type": "error",
        "error": "${e}",
        "message": "error method Seconds.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Seconds.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Seconds.html).
  double? get seconds {
    try {
      return (rawData["seconds"] as double);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileDownloadedPrefixSize.html).
class FileDownloadedPrefixSize {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileDownloadedPrefixSize.html).
  FileDownloadedPrefixSize(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileDownloadedPrefixSize.html).
  factory FileDownloadedPrefixSize.create({
    String special_type = "fileDownloadedPrefixSize",
    int? size,
  }) {
    try {
      return FileDownloadedPrefixSize({
        "@type": special_type,
        "size": size,
      });
    } catch (e) {
      return FileDownloadedPrefixSize({
        "@type": "error",
        "error": "${e}",
        "message": "error method FileDownloadedPrefixSize.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileDownloadedPrefixSize.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1FileDownloadedPrefixSize.html).
  int? get size {
    try {
      return (rawData["size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeepLinkInfo.html).
class DeepLinkInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeepLinkInfo.html).
  DeepLinkInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeepLinkInfo.html).
  factory DeepLinkInfo.create({
    String special_type = "deepLinkInfo",
    FormattedText? text,
    bool? need_update_application,
  }) {
    try {
      return DeepLinkInfo({
        "@type": special_type,
        "text": (text != null) ? text.toJson() : null,
        "need_update_application": need_update_application,
      });
    } catch (e) {
      return DeepLinkInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method DeepLinkInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeepLinkInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeepLinkInfo.html).
  FormattedText get text {
    try {
      return FormattedText((rawData["text"] as Map));
    } catch (e) {
      return FormattedText({"@type": "error", "error": "${e}", "message": "error at DeepLinkInfo text"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DeepLinkInfo.html).
  bool? get need_update_application {
    try {
      return (rawData["need_update_application"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextParseMode.html).
class TextParseMode {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextParseMode.html).
  TextParseMode(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextParseMode.html).
  factory TextParseMode.create({
    String special_type = "textParseModeMarkdown",
    int? version,
  }) {
    try {
      return TextParseMode({
        "@type": special_type,
        "version": version,
      });
    } catch (e) {
      return TextParseMode({
        "@type": "error",
        "error": "${e}",
        "message": "error method TextParseMode.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextParseMode.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TextParseMode.html).
  int? get version {
    try {
      return (rawData["version"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ProxyType.html).
class ProxyType {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ProxyType.html).
  ProxyType(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ProxyType.html).
  factory ProxyType.create({
    String special_type = "proxyTypeSocks5",
    String? username,
    String? password,
    bool? http_only,
    String? secret,
  }) {
    try {
      return ProxyType({
        "@type": special_type,
        "username": username,
        "password": password,
        "http_only": http_only,
        "secret": secret,
      });
    } catch (e) {
      return ProxyType({
        "@type": "error",
        "error": "${e}",
        "message": "error method ProxyType.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ProxyType.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ProxyType.html).
  String? get username {
    try {
      return (rawData["username"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ProxyType.html).
  String? get password {
    try {
      return (rawData["password"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ProxyType.html).
  bool? get http_only {
    try {
      return (rawData["http_only"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ProxyType.html).
  String? get secret {
    try {
      return (rawData["secret"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Proxy.html).
class Proxy {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Proxy.html).
  Proxy(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Proxy.html).
  factory Proxy.create({
    String special_type = "proxy",
    int? id,
    String? server,
    int? port,
    int? last_used_date,
    bool? is_enabled,
    ProxyType? type,
  }) {
    try {
      return Proxy({
        "@type": special_type,
        "id": id,
        "server": server,
        "port": port,
        "last_used_date": last_used_date,
        "is_enabled": is_enabled,
        "type": (type != null) ? type.toJson() : null,
      });
    } catch (e) {
      return Proxy({
        "@type": "error",
        "error": "${e}",
        "message": "error method Proxy.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Proxy.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Proxy.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Proxy.html).
  String? get server {
    try {
      return (rawData["server"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Proxy.html).
  int? get port {
    try {
      return (rawData["port"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Proxy.html).
  int? get last_used_date {
    try {
      return (rawData["last_used_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Proxy.html).
  bool? get is_enabled {
    try {
      return (rawData["is_enabled"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Proxy.html).
  ProxyType get type {
    try {
      return ProxyType((rawData["type"] as Map));
    } catch (e) {
      return ProxyType({"@type": "error", "error": "${e}", "message": "error at Proxy type"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Proxies.html).
class Proxies {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Proxies.html).
  Proxies(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Proxies.html).
  factory Proxies.create({
    String special_type = "proxies",
    List<Proxy>? proxies,
  }) {
    try {
      return Proxies({
        "@type": special_type,
        "proxies": (proxies != null)
            ? proxies.map((e) {
                return Proxy((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return Proxies({
        "@type": "error",
        "error": "${e}",
        "message": "error method Proxies.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Proxies.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Proxies.html).
  List<Proxy> get proxies {
    try {
      return (rawData["proxies"] as List)
          .map((e) {
            return Proxy((e as Map));
          })
          .toList()
          .cast<Proxy>();
    } catch (e) {
      return [
        Proxy({"@type": "error", "error": "${e}", "message": "error at Proxies proxies"})
      ].cast<Proxy>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputSticker.html).
class InputSticker {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputSticker.html).
  InputSticker(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputSticker.html).
  factory InputSticker.create({
    String special_type = "inputSticker",
    InputFile? sticker,
    String? emojis,
    StickerFormat? format,
    MaskPosition? mask_position,
  }) {
    try {
      return InputSticker({
        "@type": special_type,
        "sticker": (sticker != null) ? sticker.toJson() : null,
        "emojis": emojis,
        "format": (format != null) ? format.toJson() : null,
        "mask_position": (mask_position != null) ? mask_position.toJson() : null,
      });
    } catch (e) {
      return InputSticker({
        "@type": "error",
        "error": "${e}",
        "message": "error method InputSticker.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputSticker.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputSticker.html).
  InputFile get sticker {
    try {
      return InputFile((rawData["sticker"] as Map));
    } catch (e) {
      return InputFile({"@type": "error", "error": "${e}", "message": "error at InputSticker sticker"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputSticker.html).
  String? get emojis {
    try {
      return (rawData["emojis"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputSticker.html).
  StickerFormat get format {
    try {
      return StickerFormat((rawData["format"] as Map));
    } catch (e) {
      return StickerFormat({"@type": "error", "error": "${e}", "message": "error at InputSticker format"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1InputSticker.html).
  MaskPosition get mask_position {
    try {
      return MaskPosition((rawData["mask_position"] as Map));
    } catch (e) {
      return MaskPosition({"@type": "error", "error": "${e}", "message": "error at InputSticker mask_position"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DateRange.html).
class DateRange {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DateRange.html).
  DateRange(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DateRange.html).
  factory DateRange.create({
    String special_type = "dateRange",
    int? start_date,
    int? end_date,
  }) {
    try {
      return DateRange({
        "@type": special_type,
        "start_date": start_date,
        "end_date": end_date,
      });
    } catch (e) {
      return DateRange({
        "@type": "error",
        "error": "${e}",
        "message": "error method DateRange.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DateRange.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DateRange.html).
  int? get start_date {
    try {
      return (rawData["start_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1DateRange.html).
  int? get end_date {
    try {
      return (rawData["end_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StatisticalValue.html).
class StatisticalValue {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StatisticalValue.html).
  StatisticalValue(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StatisticalValue.html).
  factory StatisticalValue.create({
    String special_type = "statisticalValue",
    double? value,
    double? previous_value,
    double? growth_rate_percentage,
  }) {
    try {
      return StatisticalValue({
        "@type": special_type,
        "value": value,
        "previous_value": previous_value,
        "growth_rate_percentage": growth_rate_percentage,
      });
    } catch (e) {
      return StatisticalValue({
        "@type": "error",
        "error": "${e}",
        "message": "error method StatisticalValue.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StatisticalValue.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StatisticalValue.html).
  double? get value {
    try {
      return (rawData["value"] as double);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StatisticalValue.html).
  double? get previous_value {
    try {
      return (rawData["previous_value"] as double);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StatisticalValue.html).
  double? get growth_rate_percentage {
    try {
      return (rawData["growth_rate_percentage"] as double);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StatisticalGraph.html).
class StatisticalGraph {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StatisticalGraph.html).
  StatisticalGraph(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StatisticalGraph.html).
  factory StatisticalGraph.create({
    String special_type = "statisticalGraphData",
    String? json_data,
    String? zoom_token,
    String? token,
    String? error_message,
  }) {
    try {
      return StatisticalGraph({
        "@type": special_type,
        "json_data": json_data,
        "zoom_token": zoom_token,
        "token": token,
        "error_message": error_message,
      });
    } catch (e) {
      return StatisticalGraph({
        "@type": "error",
        "error": "${e}",
        "message": "error method StatisticalGraph.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StatisticalGraph.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StatisticalGraph.html).
  String? get json_data {
    try {
      return (rawData["json_data"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StatisticalGraph.html).
  String? get zoom_token {
    try {
      return (rawData["zoom_token"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StatisticalGraph.html).
  String? get token {
    try {
      return (rawData["token"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1StatisticalGraph.html).
  String? get error_message {
    try {
      return (rawData["error_message"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsMessageInteractionInfo.html).
class ChatStatisticsMessageInteractionInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsMessageInteractionInfo.html).
  ChatStatisticsMessageInteractionInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsMessageInteractionInfo.html).
  factory ChatStatisticsMessageInteractionInfo.create({
    String special_type = "chatStatisticsMessageInteractionInfo",
    int? message_id,
    int? view_count,
    int? forward_count,
  }) {
    try {
      return ChatStatisticsMessageInteractionInfo({
        "@type": special_type,
        "message_id": message_id,
        "view_count": view_count,
        "forward_count": forward_count,
      });
    } catch (e) {
      return ChatStatisticsMessageInteractionInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatStatisticsMessageInteractionInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsMessageInteractionInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsMessageInteractionInfo.html).
  int? get message_id {
    try {
      return (rawData["message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsMessageInteractionInfo.html).
  int? get view_count {
    try {
      return (rawData["view_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsMessageInteractionInfo.html).
  int? get forward_count {
    try {
      return (rawData["forward_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsMessageSenderInfo.html).
class ChatStatisticsMessageSenderInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsMessageSenderInfo.html).
  ChatStatisticsMessageSenderInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsMessageSenderInfo.html).
  factory ChatStatisticsMessageSenderInfo.create({
    String special_type = "chatStatisticsMessageSenderInfo",
    int? user_id,
    int? sent_message_count,
    int? average_character_count,
  }) {
    try {
      return ChatStatisticsMessageSenderInfo({
        "@type": special_type,
        "user_id": user_id,
        "sent_message_count": sent_message_count,
        "average_character_count": average_character_count,
      });
    } catch (e) {
      return ChatStatisticsMessageSenderInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatStatisticsMessageSenderInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsMessageSenderInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsMessageSenderInfo.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsMessageSenderInfo.html).
  int? get sent_message_count {
    try {
      return (rawData["sent_message_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsMessageSenderInfo.html).
  int? get average_character_count {
    try {
      return (rawData["average_character_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsAdministratorActionsInfo.html).
class ChatStatisticsAdministratorActionsInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsAdministratorActionsInfo.html).
  ChatStatisticsAdministratorActionsInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsAdministratorActionsInfo.html).
  factory ChatStatisticsAdministratorActionsInfo.create({
    String special_type = "chatStatisticsAdministratorActionsInfo",
    int? user_id,
    int? deleted_message_count,
    int? banned_user_count,
    int? restricted_user_count,
  }) {
    try {
      return ChatStatisticsAdministratorActionsInfo({
        "@type": special_type,
        "user_id": user_id,
        "deleted_message_count": deleted_message_count,
        "banned_user_count": banned_user_count,
        "restricted_user_count": restricted_user_count,
      });
    } catch (e) {
      return ChatStatisticsAdministratorActionsInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatStatisticsAdministratorActionsInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsAdministratorActionsInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsAdministratorActionsInfo.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsAdministratorActionsInfo.html).
  int? get deleted_message_count {
    try {
      return (rawData["deleted_message_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsAdministratorActionsInfo.html).
  int? get banned_user_count {
    try {
      return (rawData["banned_user_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsAdministratorActionsInfo.html).
  int? get restricted_user_count {
    try {
      return (rawData["restricted_user_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsInviterInfo.html).
class ChatStatisticsInviterInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsInviterInfo.html).
  ChatStatisticsInviterInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsInviterInfo.html).
  factory ChatStatisticsInviterInfo.create({
    String special_type = "chatStatisticsInviterInfo",
    int? user_id,
    int? added_member_count,
  }) {
    try {
      return ChatStatisticsInviterInfo({
        "@type": special_type,
        "user_id": user_id,
        "added_member_count": added_member_count,
      });
    } catch (e) {
      return ChatStatisticsInviterInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatStatisticsInviterInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsInviterInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsInviterInfo.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatisticsInviterInfo.html).
  int? get added_member_count {
    try {
      return (rawData["added_member_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
class ChatStatistics {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  ChatStatistics(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  factory ChatStatistics.create({
    String special_type = "chatStatisticsSupergroup",
    DateRange? period,
    StatisticalValue? member_count,
    StatisticalValue? message_count,
    StatisticalValue? viewer_count,
    StatisticalValue? sender_count,
    StatisticalGraph? member_count_graph,
    StatisticalGraph? join_graph,
    StatisticalGraph? join_by_source_graph,
    StatisticalGraph? language_graph,
    StatisticalGraph? message_content_graph,
    StatisticalGraph? action_graph,
    StatisticalGraph? day_graph,
    StatisticalGraph? week_graph,
    List<ChatStatisticsMessageSenderInfo>? top_senders,
    List<ChatStatisticsAdministratorActionsInfo>? top_administrators,
    List<ChatStatisticsInviterInfo>? top_inviters,
    StatisticalValue? mean_view_count,
    StatisticalValue? mean_share_count,
    double? enabled_notifications_percentage,
    StatisticalGraph? mute_graph,
    StatisticalGraph? view_count_by_hour_graph,
    StatisticalGraph? view_count_by_source_graph,
    StatisticalGraph? message_interaction_graph,
    StatisticalGraph? instant_view_interaction_graph,
    List<ChatStatisticsMessageInteractionInfo>? recent_message_interactions,
  }) {
    try {
      return ChatStatistics({
        "@type": special_type,
        "period": (period != null) ? period.toJson() : null,
        "member_count": (member_count != null) ? member_count.toJson() : null,
        "message_count": (message_count != null) ? message_count.toJson() : null,
        "viewer_count": (viewer_count != null) ? viewer_count.toJson() : null,
        "sender_count": (sender_count != null) ? sender_count.toJson() : null,
        "member_count_graph": (member_count_graph != null) ? member_count_graph.toJson() : null,
        "join_graph": (join_graph != null) ? join_graph.toJson() : null,
        "join_by_source_graph": (join_by_source_graph != null) ? join_by_source_graph.toJson() : null,
        "language_graph": (language_graph != null) ? language_graph.toJson() : null,
        "message_content_graph": (message_content_graph != null) ? message_content_graph.toJson() : null,
        "action_graph": (action_graph != null) ? action_graph.toJson() : null,
        "day_graph": (day_graph != null) ? day_graph.toJson() : null,
        "week_graph": (week_graph != null) ? week_graph.toJson() : null,
        "top_senders": (top_senders != null)
            ? top_senders.map((e) {
                return ChatStatisticsMessageSenderInfo((e as Map)).toJson();
              }).toList()
            : null,
        "top_administrators": (top_administrators != null)
            ? top_administrators.map((e) {
                return ChatStatisticsAdministratorActionsInfo((e as Map)).toJson();
              }).toList()
            : null,
        "top_inviters": (top_inviters != null)
            ? top_inviters.map((e) {
                return ChatStatisticsInviterInfo((e as Map)).toJson();
              }).toList()
            : null,
        "mean_view_count": (mean_view_count != null) ? mean_view_count.toJson() : null,
        "mean_share_count": (mean_share_count != null) ? mean_share_count.toJson() : null,
        "enabled_notifications_percentage": enabled_notifications_percentage,
        "mute_graph": (mute_graph != null) ? mute_graph.toJson() : null,
        "view_count_by_hour_graph": (view_count_by_hour_graph != null) ? view_count_by_hour_graph.toJson() : null,
        "view_count_by_source_graph": (view_count_by_source_graph != null) ? view_count_by_source_graph.toJson() : null,
        "message_interaction_graph": (message_interaction_graph != null) ? message_interaction_graph.toJson() : null,
        "instant_view_interaction_graph": (instant_view_interaction_graph != null) ? instant_view_interaction_graph.toJson() : null,
        "recent_message_interactions": (recent_message_interactions != null)
            ? recent_message_interactions.map((e) {
                return ChatStatisticsMessageInteractionInfo((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return ChatStatistics({
        "@type": "error",
        "error": "${e}",
        "message": "error method ChatStatistics.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  DateRange get period {
    try {
      return DateRange((rawData["period"] as Map));
    } catch (e) {
      return DateRange({"@type": "error", "error": "${e}", "message": "error at ChatStatistics period"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalValue get member_count {
    try {
      return StatisticalValue((rawData["member_count"] as Map));
    } catch (e) {
      return StatisticalValue({"@type": "error", "error": "${e}", "message": "error at ChatStatistics member_count"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalValue get message_count {
    try {
      return StatisticalValue((rawData["message_count"] as Map));
    } catch (e) {
      return StatisticalValue({"@type": "error", "error": "${e}", "message": "error at ChatStatistics message_count"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalValue get viewer_count {
    try {
      return StatisticalValue((rawData["viewer_count"] as Map));
    } catch (e) {
      return StatisticalValue({"@type": "error", "error": "${e}", "message": "error at ChatStatistics viewer_count"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalValue get sender_count {
    try {
      return StatisticalValue((rawData["sender_count"] as Map));
    } catch (e) {
      return StatisticalValue({"@type": "error", "error": "${e}", "message": "error at ChatStatistics sender_count"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalGraph get member_count_graph {
    try {
      return StatisticalGraph((rawData["member_count_graph"] as Map));
    } catch (e) {
      return StatisticalGraph({"@type": "error", "error": "${e}", "message": "error at ChatStatistics member_count_graph"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalGraph get join_graph {
    try {
      return StatisticalGraph((rawData["join_graph"] as Map));
    } catch (e) {
      return StatisticalGraph({"@type": "error", "error": "${e}", "message": "error at ChatStatistics join_graph"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalGraph get join_by_source_graph {
    try {
      return StatisticalGraph((rawData["join_by_source_graph"] as Map));
    } catch (e) {
      return StatisticalGraph({"@type": "error", "error": "${e}", "message": "error at ChatStatistics join_by_source_graph"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalGraph get language_graph {
    try {
      return StatisticalGraph((rawData["language_graph"] as Map));
    } catch (e) {
      return StatisticalGraph({"@type": "error", "error": "${e}", "message": "error at ChatStatistics language_graph"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalGraph get message_content_graph {
    try {
      return StatisticalGraph((rawData["message_content_graph"] as Map));
    } catch (e) {
      return StatisticalGraph({"@type": "error", "error": "${e}", "message": "error at ChatStatistics message_content_graph"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalGraph get action_graph {
    try {
      return StatisticalGraph((rawData["action_graph"] as Map));
    } catch (e) {
      return StatisticalGraph({"@type": "error", "error": "${e}", "message": "error at ChatStatistics action_graph"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalGraph get day_graph {
    try {
      return StatisticalGraph((rawData["day_graph"] as Map));
    } catch (e) {
      return StatisticalGraph({"@type": "error", "error": "${e}", "message": "error at ChatStatistics day_graph"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalGraph get week_graph {
    try {
      return StatisticalGraph((rawData["week_graph"] as Map));
    } catch (e) {
      return StatisticalGraph({"@type": "error", "error": "${e}", "message": "error at ChatStatistics week_graph"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  List<ChatStatisticsMessageSenderInfo> get top_senders {
    try {
      return (rawData["top_senders"] as List)
          .map((e) {
            return ChatStatisticsMessageSenderInfo((e as Map));
          })
          .toList()
          .cast<ChatStatisticsMessageSenderInfo>();
    } catch (e) {
      return [
        ChatStatisticsMessageSenderInfo({"@type": "error", "error": "${e}", "message": "error at ChatStatistics top_senders"})
      ].cast<ChatStatisticsMessageSenderInfo>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  List<ChatStatisticsAdministratorActionsInfo> get top_administrators {
    try {
      return (rawData["top_administrators"] as List)
          .map((e) {
            return ChatStatisticsAdministratorActionsInfo((e as Map));
          })
          .toList()
          .cast<ChatStatisticsAdministratorActionsInfo>();
    } catch (e) {
      return [
        ChatStatisticsAdministratorActionsInfo({"@type": "error", "error": "${e}", "message": "error at ChatStatistics top_administrators"})
      ].cast<ChatStatisticsAdministratorActionsInfo>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  List<ChatStatisticsInviterInfo> get top_inviters {
    try {
      return (rawData["top_inviters"] as List)
          .map((e) {
            return ChatStatisticsInviterInfo((e as Map));
          })
          .toList()
          .cast<ChatStatisticsInviterInfo>();
    } catch (e) {
      return [
        ChatStatisticsInviterInfo({"@type": "error", "error": "${e}", "message": "error at ChatStatistics top_inviters"})
      ].cast<ChatStatisticsInviterInfo>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalValue get mean_view_count {
    try {
      return StatisticalValue((rawData["mean_view_count"] as Map));
    } catch (e) {
      return StatisticalValue({"@type": "error", "error": "${e}", "message": "error at ChatStatistics mean_view_count"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalValue get mean_share_count {
    try {
      return StatisticalValue((rawData["mean_share_count"] as Map));
    } catch (e) {
      return StatisticalValue({"@type": "error", "error": "${e}", "message": "error at ChatStatistics mean_share_count"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  double? get enabled_notifications_percentage {
    try {
      return (rawData["enabled_notifications_percentage"] as double);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalGraph get mute_graph {
    try {
      return StatisticalGraph((rawData["mute_graph"] as Map));
    } catch (e) {
      return StatisticalGraph({"@type": "error", "error": "${e}", "message": "error at ChatStatistics mute_graph"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalGraph get view_count_by_hour_graph {
    try {
      return StatisticalGraph((rawData["view_count_by_hour_graph"] as Map));
    } catch (e) {
      return StatisticalGraph({"@type": "error", "error": "${e}", "message": "error at ChatStatistics view_count_by_hour_graph"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalGraph get view_count_by_source_graph {
    try {
      return StatisticalGraph((rawData["view_count_by_source_graph"] as Map));
    } catch (e) {
      return StatisticalGraph({"@type": "error", "error": "${e}", "message": "error at ChatStatistics view_count_by_source_graph"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalGraph get message_interaction_graph {
    try {
      return StatisticalGraph((rawData["message_interaction_graph"] as Map));
    } catch (e) {
      return StatisticalGraph({"@type": "error", "error": "${e}", "message": "error at ChatStatistics message_interaction_graph"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  StatisticalGraph get instant_view_interaction_graph {
    try {
      return StatisticalGraph((rawData["instant_view_interaction_graph"] as Map));
    } catch (e) {
      return StatisticalGraph({"@type": "error", "error": "${e}", "message": "error at ChatStatistics instant_view_interaction_graph"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1ChatStatistics.html).
  List<ChatStatisticsMessageInteractionInfo> get recent_message_interactions {
    try {
      return (rawData["recent_message_interactions"] as List)
          .map((e) {
            return ChatStatisticsMessageInteractionInfo((e as Map));
          })
          .toList()
          .cast<ChatStatisticsMessageInteractionInfo>();
    } catch (e) {
      return [
        ChatStatisticsMessageInteractionInfo({"@type": "error", "error": "${e}", "message": "error at ChatStatistics recent_message_interactions"})
      ].cast<ChatStatisticsMessageInteractionInfo>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageStatistics.html).
class MessageStatistics {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageStatistics.html).
  MessageStatistics(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageStatistics.html).
  factory MessageStatistics.create({
    String special_type = "messageStatistics",
    StatisticalGraph? message_interaction_graph,
  }) {
    try {
      return MessageStatistics({
        "@type": special_type,
        "message_interaction_graph": (message_interaction_graph != null) ? message_interaction_graph.toJson() : null,
      });
    } catch (e) {
      return MessageStatistics({
        "@type": "error",
        "error": "${e}",
        "message": "error method MessageStatistics.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageStatistics.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1MessageStatistics.html).
  StatisticalGraph get message_interaction_graph {
    try {
      return StatisticalGraph((rawData["message_interaction_graph"] as Map));
    } catch (e) {
      return StatisticalGraph({"@type": "error", "error": "${e}", "message": "error at MessageStatistics message_interaction_graph"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Point.html).
class Point {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Point.html).
  Point(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Point.html).
  factory Point.create({
    String special_type = "point",
    double? x,
    double? y,
  }) {
    try {
      return Point({
        "@type": special_type,
        "x": x,
        "y": y,
      });
    } catch (e) {
      return Point({
        "@type": "error",
        "error": "${e}",
        "message": "error method Point.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Point.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Point.html).
  double? get x {
    try {
      return (rawData["x"] as double);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Point.html).
  double? get y {
    try {
      return (rawData["y"] as double);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VectorPathCommand.html).
class VectorPathCommand {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VectorPathCommand.html).
  VectorPathCommand(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VectorPathCommand.html).
  factory VectorPathCommand.create({
    String special_type = "vectorPathCommandLine",
    Point? end_point,
    Point? start_control_point,
    Point? end_control_point,
  }) {
    try {
      return VectorPathCommand({
        "@type": special_type,
        "end_point": (end_point != null) ? end_point.toJson() : null,
        "start_control_point": (start_control_point != null) ? start_control_point.toJson() : null,
        "end_control_point": (end_control_point != null) ? end_control_point.toJson() : null,
      });
    } catch (e) {
      return VectorPathCommand({
        "@type": "error",
        "error": "${e}",
        "message": "error method VectorPathCommand.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VectorPathCommand.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VectorPathCommand.html).
  Point get end_point {
    try {
      return Point((rawData["end_point"] as Map));
    } catch (e) {
      return Point({"@type": "error", "error": "${e}", "message": "error at VectorPathCommand end_point"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VectorPathCommand.html).
  Point get start_control_point {
    try {
      return Point((rawData["start_control_point"] as Map));
    } catch (e) {
      return Point({"@type": "error", "error": "${e}", "message": "error at VectorPathCommand start_control_point"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1VectorPathCommand.html).
  Point get end_control_point {
    try {
      return Point((rawData["end_control_point"] as Map));
    } catch (e) {
      return Point({"@type": "error", "error": "${e}", "message": "error at VectorPathCommand end_control_point"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommandScope.html).
class BotCommandScope {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommandScope.html).
  BotCommandScope(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommandScope.html).
  factory BotCommandScope.create({
    String special_type = "botCommandScopeDefault",
    int? chat_id,
    int? user_id,
  }) {
    try {
      return BotCommandScope({
        "@type": special_type,
        "chat_id": chat_id,
        "user_id": user_id,
      });
    } catch (e) {
      return BotCommandScope({
        "@type": "error",
        "error": "${e}",
        "message": "error method BotCommandScope.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommandScope.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommandScope.html).
  int? get chat_id {
    try {
      return (rawData["chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1BotCommandScope.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
class Update {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  Update(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  factory Update.create({
    String special_type = "updateAuthorizationState",
    AuthorizationState? authorization_state,
    Message? message,
    int? chat_id,
    int? message_id,
    int? old_message_id,
    int? error_code,
    String? error_message,
    MessageContent? new_content,
    int? edit_date,
    ReplyMarkup? reply_markup,
    bool? is_pinned,
    MessageInteractionInfo? interaction_info,
    int? unread_mention_count,
    List<UnreadReaction>? unread_reactions,
    int? unread_reaction_count,
    Chat? chat,
    String? title,
    ChatPhotoInfo? photo,
    ChatPermissions? permissions,
    Message? last_message,
    List<ChatPosition>? positions,
    ChatPosition? position,
    int? last_read_inbox_message_id,
    int? unread_count,
    int? last_read_outbox_message_id,
    ChatActionBar? action_bar,
    ChatAvailableReactions? available_reactions,
    DraftMessage? draft_message,
    MessageSender? message_sender_id,
    int? message_ttl,
    ScopeNotificationSettings? notification_settings,
    ChatJoinRequestsInfo? pending_join_requests,
    int? reply_markup_message_id,
    String? theme_name,
    VideoChat? video_chat,
    bool? default_disable_notification,
    bool? has_protected_content,
    bool? has_scheduled_messages,
    bool? is_blocked,
    bool? is_marked_as_unread,
    List<ChatFilterInfo>? chat_filters,
    int? main_chat_list_position,
    int? online_member_count,
    NotificationSettingsScope? scope,
    int? notification_group_id,
    Notification? notification,
    String? type,
    int? notification_settings_chat_id,
    int? notification_sound_id,
    int? total_count,
    List<Notification>? added_notifications,
    List<int>? removed_notification_ids,
    List<NotificationGroup>? groups,
    bool? have_delayed_notifications,
    bool? have_unreceived_notifications,
    List<int>? message_ids,
    bool? is_permanent,
    bool? from_cache,
    int? message_thread_id,
    MessageSender? sender_id,
    ChatAction? action,
    int? user_id,
    UserStatus? status,
    User? user,
    BasicGroup? basic_group,
    Supergroup? supergroup,
    SecretChat? secret_chat,
    UserFullInfo? user_full_info,
    int? basic_group_id,
    BasicGroupFullInfo? basic_group_full_info,
    int? supergroup_id,
    SupergroupFullInfo? supergroup_full_info,
    MessageContent? content,
    File? file,
    int? generation_id,
    String? original_path,
    String? destination_path,
    String? conversion,
    int? total_size,
    int? downloaded_size,
    FileDownload? file_download,
    DownloadedFileCounts? counts,
    int? file_id,
    int? complete_date,
    bool? is_paused,
    Call? call,
    GroupCall? group_call,
    int? group_call_id,
    GroupCallParticipant? participant,
    int? call_id,
    String? data,
    UserPrivacySetting? setting,
    UserPrivacySettingRules? rules,
    ChatList? chat_list,
    int? unread_unmuted_count,
    int? marked_as_unread_count,
    int? marked_as_unread_unmuted_count,
    String? name,
    OptionValue? value,
    StickerSet? sticker_set,
    StickerType? sticker_type,
    List<int>? sticker_set_ids,
    TrendingStickerSets? sticker_sets,
    bool? is_attached,
    List<int>? sticker_ids,
    List<int>? animation_ids,
    List<int>? notification_sound_ids,
    bool? for_dark_theme,
    Background? background,
    List<ChatTheme>? chat_themes,
    String? localization_target,
    String? language_pack_id,
    List<LanguagePackString>? strings,
    ConnectionState? state,
    String? terms_of_service_id,
    TermsOfService? terms_of_service,
    List<ChatNearby>? users_nearby,
    List<AttachmentMenuBot>? bots,
    int? web_app_launch_id,
    List<String>? emojis,
    ReactionType? reaction_type,
    Sticker? sticker,
    String? provider,
    List<SuggestedAction>? added_actions,
    List<SuggestedAction>? removed_actions,
    int? id,
    int? sender_user_id,
    Location? user_location,
    ChatType? chat_type,
    String? query,
    String? offset,
    String? result_id,
    String? inline_message_id,
    int? chat_instance,
    CallbackQueryPayload? payload,
    String? invoice_payload,
    Address? shipping_address,
    String? currency,
    int? total_amount,
    String? shipping_option_id,
    OrderInfo? order_info,
    String? event,
    int? timeout,
    Poll? poll,
    int? poll_id,
    List<int>? option_ids,
    int? actor_user_id,
    int? date,
    ChatInviteLink? invite_link,
    ChatMember? old_chat_member,
    ChatMember? new_chat_member,
    ChatJoinRequest? request,
  }) {
    try {
      return Update({
        "@type": special_type,
        "authorization_state": (authorization_state != null) ? authorization_state.toJson() : null,
        "message": (message != null) ? message.toJson() : null,
        "chat_id": chat_id,
        "message_id": message_id,
        "old_message_id": old_message_id,
        "error_code": error_code,
        "error_message": error_message,
        "new_content": (new_content != null) ? new_content.toJson() : null,
        "edit_date": edit_date,
        "reply_markup": (reply_markup != null) ? reply_markup.toJson() : null,
        "is_pinned": is_pinned,
        "interaction_info": (interaction_info != null) ? interaction_info.toJson() : null,
        "unread_mention_count": unread_mention_count,
        "unread_reactions": (unread_reactions != null)
            ? unread_reactions.map((e) {
                return UnreadReaction((e as Map)).toJson();
              }).toList()
            : null,
        "unread_reaction_count": unread_reaction_count,
        "chat": (chat != null) ? chat.toJson() : null,
        "title": title,
        "photo": (photo != null) ? photo.toJson() : null,
        "permissions": (permissions != null) ? permissions.toJson() : null,
        "last_message": (last_message != null) ? last_message.toJson() : null,
        "positions": (positions != null)
            ? positions.map((e) {
                return ChatPosition((e as Map)).toJson();
              }).toList()
            : null,
        "position": (position != null) ? position.toJson() : null,
        "last_read_inbox_message_id": last_read_inbox_message_id,
        "unread_count": unread_count,
        "last_read_outbox_message_id": last_read_outbox_message_id,
        "action_bar": (action_bar != null) ? action_bar.toJson() : null,
        "available_reactions": (available_reactions != null) ? available_reactions.toJson() : null,
        "draft_message": (draft_message != null) ? draft_message.toJson() : null,
        "message_sender_id": (message_sender_id != null) ? message_sender_id.toJson() : null,
        "message_ttl": message_ttl,
        "notification_settings": (notification_settings != null) ? notification_settings.toJson() : null,
        "pending_join_requests": (pending_join_requests != null) ? pending_join_requests.toJson() : null,
        "reply_markup_message_id": reply_markup_message_id,
        "theme_name": theme_name,
        "video_chat": (video_chat != null) ? video_chat.toJson() : null,
        "default_disable_notification": default_disable_notification,
        "has_protected_content": has_protected_content,
        "has_scheduled_messages": has_scheduled_messages,
        "is_blocked": is_blocked,
        "is_marked_as_unread": is_marked_as_unread,
        "chat_filters": (chat_filters != null)
            ? chat_filters.map((e) {
                return ChatFilterInfo((e as Map)).toJson();
              }).toList()
            : null,
        "main_chat_list_position": main_chat_list_position,
        "online_member_count": online_member_count,
        "scope": (scope != null) ? scope.toJson() : null,
        "notification_group_id": notification_group_id,
        "notification": (notification != null) ? notification.toJson() : null,
        "type": type,
        "notification_settings_chat_id": notification_settings_chat_id,
        "notification_sound_id": notification_sound_id,
        "total_count": total_count,
        "added_notifications": (added_notifications != null)
            ? added_notifications.map((e) {
                return Notification((e as Map)).toJson();
              }).toList()
            : null,
        "removed_notification_ids": removed_notification_ids,
        "groups": (groups != null)
            ? groups.map((e) {
                return NotificationGroup((e as Map)).toJson();
              }).toList()
            : null,
        "have_delayed_notifications": have_delayed_notifications,
        "have_unreceived_notifications": have_unreceived_notifications,
        "message_ids": message_ids,
        "is_permanent": is_permanent,
        "from_cache": from_cache,
        "message_thread_id": message_thread_id,
        "sender_id": (sender_id != null) ? sender_id.toJson() : null,
        "action": (action != null) ? action.toJson() : null,
        "user_id": user_id,
        "status": (status != null) ? status.toJson() : null,
        "user": (user != null) ? user.toJson() : null,
        "basic_group": (basic_group != null) ? basic_group.toJson() : null,
        "supergroup": (supergroup != null) ? supergroup.toJson() : null,
        "secret_chat": (secret_chat != null) ? secret_chat.toJson() : null,
        "user_full_info": (user_full_info != null) ? user_full_info.toJson() : null,
        "basic_group_id": basic_group_id,
        "basic_group_full_info": (basic_group_full_info != null) ? basic_group_full_info.toJson() : null,
        "supergroup_id": supergroup_id,
        "supergroup_full_info": (supergroup_full_info != null) ? supergroup_full_info.toJson() : null,
        "content": (content != null) ? content.toJson() : null,
        "file": (file != null) ? file.toJson() : null,
        "generation_id": generation_id,
        "original_path": original_path,
        "destination_path": destination_path,
        "conversion": conversion,
        "total_size": total_size,
        "downloaded_size": downloaded_size,
        "file_download": (file_download != null) ? file_download.toJson() : null,
        "counts": (counts != null) ? counts.toJson() : null,
        "file_id": file_id,
        "complete_date": complete_date,
        "is_paused": is_paused,
        "call": (call != null) ? call.toJson() : null,
        "group_call": (group_call != null) ? group_call.toJson() : null,
        "group_call_id": group_call_id,
        "participant": (participant != null) ? participant.toJson() : null,
        "call_id": call_id,
        "data": data,
        "setting": (setting != null) ? setting.toJson() : null,
        "rules": (rules != null) ? rules.toJson() : null,
        "chat_list": (chat_list != null) ? chat_list.toJson() : null,
        "unread_unmuted_count": unread_unmuted_count,
        "marked_as_unread_count": marked_as_unread_count,
        "marked_as_unread_unmuted_count": marked_as_unread_unmuted_count,
        "name": name,
        "value": (value != null) ? value.toJson() : null,
        "sticker_set": (sticker_set != null) ? sticker_set.toJson() : null,
        "sticker_type": (sticker_type != null) ? sticker_type.toJson() : null,
        "sticker_set_ids": sticker_set_ids,
        "sticker_sets": (sticker_sets != null) ? sticker_sets.toJson() : null,
        "is_attached": is_attached,
        "sticker_ids": sticker_ids,
        "animation_ids": animation_ids,
        "notification_sound_ids": notification_sound_ids,
        "for_dark_theme": for_dark_theme,
        "background": (background != null) ? background.toJson() : null,
        "chat_themes": (chat_themes != null)
            ? chat_themes.map((e) {
                return ChatTheme((e as Map)).toJson();
              }).toList()
            : null,
        "localization_target": localization_target,
        "language_pack_id": language_pack_id,
        "strings": (strings != null)
            ? strings.map((e) {
                return LanguagePackString((e as Map)).toJson();
              }).toList()
            : null,
        "state": (state != null) ? state.toJson() : null,
        "terms_of_service_id": terms_of_service_id,
        "terms_of_service": (terms_of_service != null) ? terms_of_service.toJson() : null,
        "users_nearby": (users_nearby != null)
            ? users_nearby.map((e) {
                return ChatNearby((e as Map)).toJson();
              }).toList()
            : null,
        "bots": (bots != null)
            ? bots.map((e) {
                return AttachmentMenuBot((e as Map)).toJson();
              }).toList()
            : null,
        "web_app_launch_id": web_app_launch_id,
        "emojis": emojis,
        "reaction_type": (reaction_type != null) ? reaction_type.toJson() : null,
        "sticker": (sticker != null) ? sticker.toJson() : null,
        "provider": provider,
        "added_actions": (added_actions != null)
            ? added_actions.map((e) {
                return SuggestedAction((e as Map)).toJson();
              }).toList()
            : null,
        "removed_actions": (removed_actions != null)
            ? removed_actions.map((e) {
                return SuggestedAction((e as Map)).toJson();
              }).toList()
            : null,
        "id": id,
        "sender_user_id": sender_user_id,
        "user_location": (user_location != null) ? user_location.toJson() : null,
        "chat_type": (chat_type != null) ? chat_type.toJson() : null,
        "query": query,
        "offset": offset,
        "result_id": result_id,
        "inline_message_id": inline_message_id,
        "chat_instance": chat_instance,
        "payload": (payload != null) ? payload.toJson() : null,
        "invoice_payload": invoice_payload,
        "shipping_address": (shipping_address != null) ? shipping_address.toJson() : null,
        "currency": currency,
        "total_amount": total_amount,
        "shipping_option_id": shipping_option_id,
        "order_info": (order_info != null) ? order_info.toJson() : null,
        "event": event,
        "timeout": timeout,
        "poll": (poll != null) ? poll.toJson() : null,
        "poll_id": poll_id,
        "option_ids": option_ids,
        "actor_user_id": actor_user_id,
        "date": date,
        "invite_link": (invite_link != null) ? invite_link.toJson() : null,
        "old_chat_member": (old_chat_member != null) ? old_chat_member.toJson() : null,
        "new_chat_member": (new_chat_member != null) ? new_chat_member.toJson() : null,
        "request": (request != null) ? request.toJson() : null,
      });
    } catch (e) {
      return Update({
        "@type": "error",
        "error": "${e}",
        "message": "error method Update.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  AuthorizationState get authorization_state {
    try {
      return AuthorizationState((rawData["authorization_state"] as Map));
    } catch (e) {
      return AuthorizationState({"@type": "error", "error": "${e}", "message": "error at Update authorization_state"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  Message get message {
    try {
      return Message((rawData["message"] as Map));
    } catch (e) {
      return Message({"@type": "error", "error": "${e}", "message": "error at Update message"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get chat_id {
    try {
      return (rawData["chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get message_id {
    try {
      return (rawData["message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get old_message_id {
    try {
      return (rawData["old_message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get error_code {
    try {
      return (rawData["error_code"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get error_message {
    try {
      return (rawData["error_message"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  MessageContent get new_content {
    try {
      return MessageContent((rawData["new_content"] as Map));
    } catch (e) {
      return MessageContent({"@type": "error", "error": "${e}", "message": "error at Update new_content"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get edit_date {
    try {
      return (rawData["edit_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  ReplyMarkup get reply_markup {
    try {
      return ReplyMarkup((rawData["reply_markup"] as Map));
    } catch (e) {
      return ReplyMarkup({"@type": "error", "error": "${e}", "message": "error at Update reply_markup"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  bool? get is_pinned {
    try {
      return (rawData["is_pinned"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  MessageInteractionInfo get interaction_info {
    try {
      return MessageInteractionInfo((rawData["interaction_info"] as Map));
    } catch (e) {
      return MessageInteractionInfo({"@type": "error", "error": "${e}", "message": "error at Update interaction_info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get unread_mention_count {
    try {
      return (rawData["unread_mention_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<UnreadReaction> get unread_reactions {
    try {
      return (rawData["unread_reactions"] as List)
          .map((e) {
            return UnreadReaction((e as Map));
          })
          .toList()
          .cast<UnreadReaction>();
    } catch (e) {
      return [
        UnreadReaction({"@type": "error", "error": "${e}", "message": "error at Update unread_reactions"})
      ].cast<UnreadReaction>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get unread_reaction_count {
    try {
      return (rawData["unread_reaction_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  Chat get chat {
    try {
      return Chat((rawData["chat"] as Map));
    } catch (e) {
      return Chat({"@type": "error", "error": "${e}", "message": "error at Update chat"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get title {
    try {
      return (rawData["title"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  ChatPhotoInfo get photo {
    try {
      return ChatPhotoInfo((rawData["photo"] as Map));
    } catch (e) {
      return ChatPhotoInfo({"@type": "error", "error": "${e}", "message": "error at Update photo"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  ChatPermissions get permissions {
    try {
      return ChatPermissions((rawData["permissions"] as Map));
    } catch (e) {
      return ChatPermissions({"@type": "error", "error": "${e}", "message": "error at Update permissions"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  Message get last_message {
    try {
      return Message((rawData["last_message"] as Map));
    } catch (e) {
      return Message({"@type": "error", "error": "${e}", "message": "error at Update last_message"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<ChatPosition> get positions {
    try {
      return (rawData["positions"] as List)
          .map((e) {
            return ChatPosition((e as Map));
          })
          .toList()
          .cast<ChatPosition>();
    } catch (e) {
      return [
        ChatPosition({"@type": "error", "error": "${e}", "message": "error at Update positions"})
      ].cast<ChatPosition>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  ChatPosition get position {
    try {
      return ChatPosition((rawData["position"] as Map));
    } catch (e) {
      return ChatPosition({"@type": "error", "error": "${e}", "message": "error at Update position"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get last_read_inbox_message_id {
    try {
      return (rawData["last_read_inbox_message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get unread_count {
    try {
      return (rawData["unread_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get last_read_outbox_message_id {
    try {
      return (rawData["last_read_outbox_message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  ChatActionBar get action_bar {
    try {
      return ChatActionBar((rawData["action_bar"] as Map));
    } catch (e) {
      return ChatActionBar({"@type": "error", "error": "${e}", "message": "error at Update action_bar"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  ChatAvailableReactions get available_reactions {
    try {
      return ChatAvailableReactions((rawData["available_reactions"] as Map));
    } catch (e) {
      return ChatAvailableReactions({"@type": "error", "error": "${e}", "message": "error at Update available_reactions"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  DraftMessage get draft_message {
    try {
      return DraftMessage((rawData["draft_message"] as Map));
    } catch (e) {
      return DraftMessage({"@type": "error", "error": "${e}", "message": "error at Update draft_message"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  MessageSender get message_sender_id {
    try {
      return MessageSender((rawData["message_sender_id"] as Map));
    } catch (e) {
      return MessageSender({"@type": "error", "error": "${e}", "message": "error at Update message_sender_id"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get message_ttl {
    try {
      return (rawData["message_ttl"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  ScopeNotificationSettings get notification_settings {
    try {
      return ScopeNotificationSettings((rawData["notification_settings"] as Map));
    } catch (e) {
      return ScopeNotificationSettings({"@type": "error", "error": "${e}", "message": "error at Update notification_settings"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  ChatJoinRequestsInfo get pending_join_requests {
    try {
      return ChatJoinRequestsInfo((rawData["pending_join_requests"] as Map));
    } catch (e) {
      return ChatJoinRequestsInfo({"@type": "error", "error": "${e}", "message": "error at Update pending_join_requests"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get reply_markup_message_id {
    try {
      return (rawData["reply_markup_message_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get theme_name {
    try {
      return (rawData["theme_name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  VideoChat get video_chat {
    try {
      return VideoChat((rawData["video_chat"] as Map));
    } catch (e) {
      return VideoChat({"@type": "error", "error": "${e}", "message": "error at Update video_chat"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  bool? get default_disable_notification {
    try {
      return (rawData["default_disable_notification"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  bool? get has_protected_content {
    try {
      return (rawData["has_protected_content"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  bool? get has_scheduled_messages {
    try {
      return (rawData["has_scheduled_messages"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  bool? get is_blocked {
    try {
      return (rawData["is_blocked"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  bool? get is_marked_as_unread {
    try {
      return (rawData["is_marked_as_unread"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<ChatFilterInfo> get chat_filters {
    try {
      return (rawData["chat_filters"] as List)
          .map((e) {
            return ChatFilterInfo((e as Map));
          })
          .toList()
          .cast<ChatFilterInfo>();
    } catch (e) {
      return [
        ChatFilterInfo({"@type": "error", "error": "${e}", "message": "error at Update chat_filters"})
      ].cast<ChatFilterInfo>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get main_chat_list_position {
    try {
      return (rawData["main_chat_list_position"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get online_member_count {
    try {
      return (rawData["online_member_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  NotificationSettingsScope get scope {
    try {
      return NotificationSettingsScope((rawData["scope"] as Map));
    } catch (e) {
      return NotificationSettingsScope({"@type": "error", "error": "${e}", "message": "error at Update scope"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get notification_group_id {
    try {
      return (rawData["notification_group_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  Notification get notification {
    try {
      return Notification((rawData["notification"] as Map));
    } catch (e) {
      return Notification({"@type": "error", "error": "${e}", "message": "error at Update notification"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get type {
    try {
      return (rawData["type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get notification_settings_chat_id {
    try {
      return (rawData["notification_settings_chat_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get notification_sound_id {
    try {
      return (rawData["notification_sound_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get total_count {
    try {
      return (rawData["total_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<Notification> get added_notifications {
    try {
      return (rawData["added_notifications"] as List)
          .map((e) {
            return Notification((e as Map));
          })
          .toList()
          .cast<Notification>();
    } catch (e) {
      return [
        Notification({"@type": "error", "error": "${e}", "message": "error at Update added_notifications"})
      ].cast<Notification>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<int> get removed_notification_ids {
    try {
      return (rawData["removed_notification_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<NotificationGroup> get groups {
    try {
      return (rawData["groups"] as List)
          .map((e) {
            return NotificationGroup((e as Map));
          })
          .toList()
          .cast<NotificationGroup>();
    } catch (e) {
      return [
        NotificationGroup({"@type": "error", "error": "${e}", "message": "error at Update groups"})
      ].cast<NotificationGroup>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  bool? get have_delayed_notifications {
    try {
      return (rawData["have_delayed_notifications"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  bool? get have_unreceived_notifications {
    try {
      return (rawData["have_unreceived_notifications"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<int> get message_ids {
    try {
      return (rawData["message_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  bool? get is_permanent {
    try {
      return (rawData["is_permanent"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  bool? get from_cache {
    try {
      return (rawData["from_cache"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get message_thread_id {
    try {
      return (rawData["message_thread_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  MessageSender get sender_id {
    try {
      return MessageSender((rawData["sender_id"] as Map));
    } catch (e) {
      return MessageSender({"@type": "error", "error": "${e}", "message": "error at Update sender_id"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  ChatAction get action {
    try {
      return ChatAction((rawData["action"] as Map));
    } catch (e) {
      return ChatAction({"@type": "error", "error": "${e}", "message": "error at Update action"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get user_id {
    try {
      return (rawData["user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  UserStatus get status {
    try {
      return UserStatus((rawData["status"] as Map));
    } catch (e) {
      return UserStatus({"@type": "error", "error": "${e}", "message": "error at Update status"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  User get user {
    try {
      return User((rawData["user"] as Map));
    } catch (e) {
      return User({"@type": "error", "error": "${e}", "message": "error at Update user"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  BasicGroup get basic_group {
    try {
      return BasicGroup((rawData["basic_group"] as Map));
    } catch (e) {
      return BasicGroup({"@type": "error", "error": "${e}", "message": "error at Update basic_group"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  Supergroup get supergroup {
    try {
      return Supergroup((rawData["supergroup"] as Map));
    } catch (e) {
      return Supergroup({"@type": "error", "error": "${e}", "message": "error at Update supergroup"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  SecretChat get secret_chat {
    try {
      return SecretChat((rawData["secret_chat"] as Map));
    } catch (e) {
      return SecretChat({"@type": "error", "error": "${e}", "message": "error at Update secret_chat"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  UserFullInfo get user_full_info {
    try {
      return UserFullInfo((rawData["user_full_info"] as Map));
    } catch (e) {
      return UserFullInfo({"@type": "error", "error": "${e}", "message": "error at Update user_full_info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get basic_group_id {
    try {
      return (rawData["basic_group_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  BasicGroupFullInfo get basic_group_full_info {
    try {
      return BasicGroupFullInfo((rawData["basic_group_full_info"] as Map));
    } catch (e) {
      return BasicGroupFullInfo({"@type": "error", "error": "${e}", "message": "error at Update basic_group_full_info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get supergroup_id {
    try {
      return (rawData["supergroup_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  SupergroupFullInfo get supergroup_full_info {
    try {
      return SupergroupFullInfo((rawData["supergroup_full_info"] as Map));
    } catch (e) {
      return SupergroupFullInfo({"@type": "error", "error": "${e}", "message": "error at Update supergroup_full_info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  MessageContent get content {
    try {
      return MessageContent((rawData["content"] as Map));
    } catch (e) {
      return MessageContent({"@type": "error", "error": "${e}", "message": "error at Update content"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  File get file {
    try {
      return File((rawData["file"] as Map));
    } catch (e) {
      return File({"@type": "error", "error": "${e}", "message": "error at Update file"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get generation_id {
    try {
      return (rawData["generation_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get original_path {
    try {
      return (rawData["original_path"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get destination_path {
    try {
      return (rawData["destination_path"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get conversion {
    try {
      return (rawData["conversion"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get total_size {
    try {
      return (rawData["total_size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get downloaded_size {
    try {
      return (rawData["downloaded_size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  FileDownload get file_download {
    try {
      return FileDownload((rawData["file_download"] as Map));
    } catch (e) {
      return FileDownload({"@type": "error", "error": "${e}", "message": "error at Update file_download"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  DownloadedFileCounts get counts {
    try {
      return DownloadedFileCounts((rawData["counts"] as Map));
    } catch (e) {
      return DownloadedFileCounts({"@type": "error", "error": "${e}", "message": "error at Update counts"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get file_id {
    try {
      return (rawData["file_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get complete_date {
    try {
      return (rawData["complete_date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  bool? get is_paused {
    try {
      return (rawData["is_paused"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  Call get call {
    try {
      return Call((rawData["call"] as Map));
    } catch (e) {
      return Call({"@type": "error", "error": "${e}", "message": "error at Update call"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  GroupCall get group_call {
    try {
      return GroupCall((rawData["group_call"] as Map));
    } catch (e) {
      return GroupCall({"@type": "error", "error": "${e}", "message": "error at Update group_call"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get group_call_id {
    try {
      return (rawData["group_call_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  GroupCallParticipant get participant {
    try {
      return GroupCallParticipant((rawData["participant"] as Map));
    } catch (e) {
      return GroupCallParticipant({"@type": "error", "error": "${e}", "message": "error at Update participant"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get call_id {
    try {
      return (rawData["call_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get data {
    try {
      return (rawData["data"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  UserPrivacySetting get setting {
    try {
      return UserPrivacySetting((rawData["setting"] as Map));
    } catch (e) {
      return UserPrivacySetting({"@type": "error", "error": "${e}", "message": "error at Update setting"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  UserPrivacySettingRules get rules {
    try {
      return UserPrivacySettingRules((rawData["rules"] as Map));
    } catch (e) {
      return UserPrivacySettingRules({"@type": "error", "error": "${e}", "message": "error at Update rules"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  ChatList get chat_list {
    try {
      return ChatList((rawData["chat_list"] as Map));
    } catch (e) {
      return ChatList({"@type": "error", "error": "${e}", "message": "error at Update chat_list"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get unread_unmuted_count {
    try {
      return (rawData["unread_unmuted_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get marked_as_unread_count {
    try {
      return (rawData["marked_as_unread_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get marked_as_unread_unmuted_count {
    try {
      return (rawData["marked_as_unread_unmuted_count"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get name {
    try {
      return (rawData["name"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  OptionValue get value {
    try {
      return OptionValue((rawData["value"] as Map));
    } catch (e) {
      return OptionValue({"@type": "error", "error": "${e}", "message": "error at Update value"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  StickerSet get sticker_set {
    try {
      return StickerSet((rawData["sticker_set"] as Map));
    } catch (e) {
      return StickerSet({"@type": "error", "error": "${e}", "message": "error at Update sticker_set"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  StickerType get sticker_type {
    try {
      return StickerType((rawData["sticker_type"] as Map));
    } catch (e) {
      return StickerType({"@type": "error", "error": "${e}", "message": "error at Update sticker_type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<int> get sticker_set_ids {
    try {
      return (rawData["sticker_set_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  TrendingStickerSets get sticker_sets {
    try {
      return TrendingStickerSets((rawData["sticker_sets"] as Map));
    } catch (e) {
      return TrendingStickerSets({"@type": "error", "error": "${e}", "message": "error at Update sticker_sets"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  bool? get is_attached {
    try {
      return (rawData["is_attached"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<int> get sticker_ids {
    try {
      return (rawData["sticker_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<int> get animation_ids {
    try {
      return (rawData["animation_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<int> get notification_sound_ids {
    try {
      return (rawData["notification_sound_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  bool? get for_dark_theme {
    try {
      return (rawData["for_dark_theme"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  Background get background {
    try {
      return Background((rawData["background"] as Map));
    } catch (e) {
      return Background({"@type": "error", "error": "${e}", "message": "error at Update background"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<ChatTheme> get chat_themes {
    try {
      return (rawData["chat_themes"] as List)
          .map((e) {
            return ChatTheme((e as Map));
          })
          .toList()
          .cast<ChatTheme>();
    } catch (e) {
      return [
        ChatTheme({"@type": "error", "error": "${e}", "message": "error at Update chat_themes"})
      ].cast<ChatTheme>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get localization_target {
    try {
      return (rawData["localization_target"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get language_pack_id {
    try {
      return (rawData["language_pack_id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<LanguagePackString> get strings {
    try {
      return (rawData["strings"] as List)
          .map((e) {
            return LanguagePackString((e as Map));
          })
          .toList()
          .cast<LanguagePackString>();
    } catch (e) {
      return [
        LanguagePackString({"@type": "error", "error": "${e}", "message": "error at Update strings"})
      ].cast<LanguagePackString>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  ConnectionState get state {
    try {
      return ConnectionState((rawData["state"] as Map));
    } catch (e) {
      return ConnectionState({"@type": "error", "error": "${e}", "message": "error at Update state"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get terms_of_service_id {
    try {
      return (rawData["terms_of_service_id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  TermsOfService get terms_of_service {
    try {
      return TermsOfService((rawData["terms_of_service"] as Map));
    } catch (e) {
      return TermsOfService({"@type": "error", "error": "${e}", "message": "error at Update terms_of_service"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<ChatNearby> get users_nearby {
    try {
      return (rawData["users_nearby"] as List)
          .map((e) {
            return ChatNearby((e as Map));
          })
          .toList()
          .cast<ChatNearby>();
    } catch (e) {
      return [
        ChatNearby({"@type": "error", "error": "${e}", "message": "error at Update users_nearby"})
      ].cast<ChatNearby>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<AttachmentMenuBot> get bots {
    try {
      return (rawData["bots"] as List)
          .map((e) {
            return AttachmentMenuBot((e as Map));
          })
          .toList()
          .cast<AttachmentMenuBot>();
    } catch (e) {
      return [
        AttachmentMenuBot({"@type": "error", "error": "${e}", "message": "error at Update bots"})
      ].cast<AttachmentMenuBot>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get web_app_launch_id {
    try {
      return (rawData["web_app_launch_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<String> get emojis {
    try {
      return (rawData["emojis"] as List).cast<String>();
    } catch (e) {
      return [].cast<String>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  ReactionType get reaction_type {
    try {
      return ReactionType((rawData["reaction_type"] as Map));
    } catch (e) {
      return ReactionType({"@type": "error", "error": "${e}", "message": "error at Update reaction_type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  Sticker get sticker {
    try {
      return Sticker((rawData["sticker"] as Map));
    } catch (e) {
      return Sticker({"@type": "error", "error": "${e}", "message": "error at Update sticker"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get provider {
    try {
      return (rawData["provider"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<SuggestedAction> get added_actions {
    try {
      return (rawData["added_actions"] as List)
          .map((e) {
            return SuggestedAction((e as Map));
          })
          .toList()
          .cast<SuggestedAction>();
    } catch (e) {
      return [
        SuggestedAction({"@type": "error", "error": "${e}", "message": "error at Update added_actions"})
      ].cast<SuggestedAction>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<SuggestedAction> get removed_actions {
    try {
      return (rawData["removed_actions"] as List)
          .map((e) {
            return SuggestedAction((e as Map));
          })
          .toList()
          .cast<SuggestedAction>();
    } catch (e) {
      return [
        SuggestedAction({"@type": "error", "error": "${e}", "message": "error at Update removed_actions"})
      ].cast<SuggestedAction>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get id {
    try {
      return (rawData["id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get sender_user_id {
    try {
      return (rawData["sender_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  Location get user_location {
    try {
      return Location((rawData["user_location"] as Map));
    } catch (e) {
      return Location({"@type": "error", "error": "${e}", "message": "error at Update user_location"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  ChatType get chat_type {
    try {
      return ChatType((rawData["chat_type"] as Map));
    } catch (e) {
      return ChatType({"@type": "error", "error": "${e}", "message": "error at Update chat_type"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get query {
    try {
      return (rawData["query"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get offset {
    try {
      return (rawData["offset"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get result_id {
    try {
      return (rawData["result_id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get inline_message_id {
    try {
      return (rawData["inline_message_id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get chat_instance {
    try {
      return (rawData["chat_instance"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  CallbackQueryPayload get payload {
    try {
      return CallbackQueryPayload((rawData["payload"] as Map));
    } catch (e) {
      return CallbackQueryPayload({"@type": "error", "error": "${e}", "message": "error at Update payload"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get invoice_payload {
    try {
      return (rawData["invoice_payload"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  Address get shipping_address {
    try {
      return Address((rawData["shipping_address"] as Map));
    } catch (e) {
      return Address({"@type": "error", "error": "${e}", "message": "error at Update shipping_address"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get currency {
    try {
      return (rawData["currency"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get total_amount {
    try {
      return (rawData["total_amount"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get shipping_option_id {
    try {
      return (rawData["shipping_option_id"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  OrderInfo get order_info {
    try {
      return OrderInfo((rawData["order_info"] as Map));
    } catch (e) {
      return OrderInfo({"@type": "error", "error": "${e}", "message": "error at Update order_info"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  String? get event {
    try {
      return (rawData["event"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get timeout {
    try {
      return (rawData["timeout"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  Poll get poll {
    try {
      return Poll((rawData["poll"] as Map));
    } catch (e) {
      return Poll({"@type": "error", "error": "${e}", "message": "error at Update poll"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get poll_id {
    try {
      return (rawData["poll_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  List<int> get option_ids {
    try {
      return (rawData["option_ids"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get actor_user_id {
    try {
      return (rawData["actor_user_id"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  int? get date {
    try {
      return (rawData["date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  ChatInviteLink get invite_link {
    try {
      return ChatInviteLink((rawData["invite_link"] as Map));
    } catch (e) {
      return ChatInviteLink({"@type": "error", "error": "${e}", "message": "error at Update invite_link"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  ChatMember get old_chat_member {
    try {
      return ChatMember((rawData["old_chat_member"] as Map));
    } catch (e) {
      return ChatMember({"@type": "error", "error": "${e}", "message": "error at Update old_chat_member"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  ChatMember get new_chat_member {
    try {
      return ChatMember((rawData["new_chat_member"] as Map));
    } catch (e) {
      return ChatMember({"@type": "error", "error": "${e}", "message": "error at Update new_chat_member"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Update.html).
  ChatJoinRequest get request {
    try {
      return ChatJoinRequest((rawData["request"] as Map));
    } catch (e) {
      return ChatJoinRequest({"@type": "error", "error": "${e}", "message": "error at Update request"});
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Updates.html).
class Updates {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Updates.html).
  Updates(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Updates.html).
  factory Updates.create({
    String special_type = "updates",
    List<Update>? updates,
  }) {
    try {
      return Updates({
        "@type": special_type,
        "updates": (updates != null)
            ? updates.map((e) {
                return Update((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return Updates({
        "@type": "error",
        "error": "${e}",
        "message": "error method Updates.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Updates.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1Updates.html).
  List<Update> get updates {
    try {
      return (rawData["updates"] as List)
          .map((e) {
            return Update((e as Map));
          })
          .toList()
          .cast<Update>();
    } catch (e) {
      return [
        Update({"@type": "error", "error": "${e}", "message": "error at Updates updates"})
      ].cast<Update>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LogStream.html).
class LogStream {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LogStream.html).
  LogStream(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LogStream.html).
  factory LogStream.create({
    String special_type = "logStreamDefault",
    String? path,
    int? max_file_size,
    bool? redirect_stderr,
  }) {
    try {
      return LogStream({
        "@type": special_type,
        "path": path,
        "max_file_size": max_file_size,
        "redirect_stderr": redirect_stderr,
      });
    } catch (e) {
      return LogStream({
        "@type": "error",
        "error": "${e}",
        "message": "error method LogStream.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LogStream.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LogStream.html).
  String? get path {
    try {
      return (rawData["path"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LogStream.html).
  int? get max_file_size {
    try {
      return (rawData["max_file_size"] as int);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LogStream.html).
  bool? get redirect_stderr {
    try {
      return (rawData["redirect_stderr"] as bool);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LogVerbosityLevel.html).
class LogVerbosityLevel {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LogVerbosityLevel.html).
  LogVerbosityLevel(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LogVerbosityLevel.html).
  factory LogVerbosityLevel.create({
    String special_type = "logVerbosityLevel",
    int? verbosity_level,
  }) {
    try {
      return LogVerbosityLevel({
        "@type": special_type,
        "verbosity_level": verbosity_level,
      });
    } catch (e) {
      return LogVerbosityLevel({
        "@type": "error",
        "error": "${e}",
        "message": "error method LogVerbosityLevel.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LogVerbosityLevel.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LogVerbosityLevel.html).
  int? get verbosity_level {
    try {
      return (rawData["verbosity_level"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LogTags.html).
class LogTags {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LogTags.html).
  LogTags(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LogTags.html).
  factory LogTags.create({
    String special_type = "logTags",
    List<String>? tags,
  }) {
    try {
      return LogTags({
        "@type": special_type,
        "tags": tags,
      });
    } catch (e) {
      return LogTags({
        "@type": "error",
        "error": "${e}",
        "message": "error method LogTags.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LogTags.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1LogTags.html).
  List<String> get tags {
    try {
      return (rawData["tags"] as List).cast<String>();
    } catch (e) {
      return [].cast<String>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserSupportInfo.html).
class UserSupportInfo {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserSupportInfo.html).
  UserSupportInfo(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserSupportInfo.html).
  factory UserSupportInfo.create({
    String special_type = "userSupportInfo",
    FormattedText? message,
    String? author,
    int? date,
  }) {
    try {
      return UserSupportInfo({
        "@type": special_type,
        "message": (message != null) ? message.toJson() : null,
        "author": author,
        "date": date,
      });
    } catch (e) {
      return UserSupportInfo({
        "@type": "error",
        "error": "${e}",
        "message": "error method UserSupportInfo.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserSupportInfo.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserSupportInfo.html).
  FormattedText get message {
    try {
      return FormattedText((rawData["message"] as Map));
    } catch (e) {
      return FormattedText({"@type": "error", "error": "${e}", "message": "error at UserSupportInfo message"});
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserSupportInfo.html).
  String? get author {
    try {
      return (rawData["author"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1UserSupportInfo.html).
  int? get date {
    try {
      return (rawData["date"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestInt.html).
class TestInt {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestInt.html).
  TestInt(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestInt.html).
  factory TestInt.create({
    String special_type = "testInt",
    int? value,
  }) {
    try {
      return TestInt({
        "@type": special_type,
        "value": value,
      });
    } catch (e) {
      return TestInt({
        "@type": "error",
        "error": "${e}",
        "message": "error method TestInt.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestInt.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestInt.html).
  int? get value {
    try {
      return (rawData["value"] as int);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestString.html).
class TestString {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestString.html).
  TestString(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestString.html).
  factory TestString.create({
    String special_type = "testString",
    String? value,
  }) {
    try {
      return TestString({
        "@type": special_type,
        "value": value,
      });
    } catch (e) {
      return TestString({
        "@type": "error",
        "error": "${e}",
        "message": "error method TestString.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestString.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestString.html).
  String? get value {
    try {
      return (rawData["value"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestBytes.html).
class TestBytes {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestBytes.html).
  TestBytes(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestBytes.html).
  factory TestBytes.create({
    String special_type = "testBytes",
    String? value,
  }) {
    try {
      return TestBytes({
        "@type": special_type,
        "value": value,
      });
    } catch (e) {
      return TestBytes({
        "@type": "error",
        "error": "${e}",
        "message": "error method TestBytes.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestBytes.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestBytes.html).
  String? get value {
    try {
      return (rawData["value"] as String);
    } catch (e) {
      return null;
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorInt.html).
class TestVectorInt {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorInt.html).
  TestVectorInt(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorInt.html).
  factory TestVectorInt.create({
    String special_type = "testVectorInt",
    List<int>? value,
  }) {
    try {
      return TestVectorInt({
        "@type": special_type,
        "value": value,
      });
    } catch (e) {
      return TestVectorInt({
        "@type": "error",
        "error": "${e}",
        "message": "error method TestVectorInt.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorInt.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorInt.html).
  List<int> get value {
    try {
      return (rawData["value"] as List).cast<int>();
    } catch (e) {
      return [].cast<int>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorIntObject.html).
class TestVectorIntObject {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorIntObject.html).
  TestVectorIntObject(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorIntObject.html).
  factory TestVectorIntObject.create({
    String special_type = "testVectorIntObject",
    List<TestInt>? value,
  }) {
    try {
      return TestVectorIntObject({
        "@type": special_type,
        "value": (value != null)
            ? value.map((e) {
                return TestInt((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return TestVectorIntObject({
        "@type": "error",
        "error": "${e}",
        "message": "error method TestVectorIntObject.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorIntObject.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorIntObject.html).
  List<TestInt> get value {
    try {
      return (rawData["value"] as List)
          .map((e) {
            return TestInt((e as Map));
          })
          .toList()
          .cast<TestInt>();
    } catch (e) {
      return [
        TestInt({"@type": "error", "error": "${e}", "message": "error at TestVectorIntObject value"})
      ].cast<TestInt>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorString.html).
class TestVectorString {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorString.html).
  TestVectorString(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorString.html).
  factory TestVectorString.create({
    String special_type = "testVectorString",
    List<String>? value,
  }) {
    try {
      return TestVectorString({
        "@type": special_type,
        "value": value,
      });
    } catch (e) {
      return TestVectorString({
        "@type": "error",
        "error": "${e}",
        "message": "error method TestVectorString.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorString.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorString.html).
  List<String> get value {
    try {
      return (rawData["value"] as List).cast<String>();
    } catch (e) {
      return [].cast<String>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}

/// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorStringObject.html).
class TestVectorStringObject {
  late Map rawData;

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorStringObject.html).
  TestVectorStringObject(this.rawData);

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorStringObject.html).
  factory TestVectorStringObject.create({
    String special_type = "testVectorStringObject",
    List<TestString>? value,
  }) {
    try {
      return TestVectorStringObject({
        "@type": special_type,
        "value": (value != null)
            ? value.map((e) {
                return TestString((e as Map)).toJson();
              }).toList()
            : null,
      });
    } catch (e) {
      return TestVectorStringObject({
        "@type": "error",
        "error": "${e}",
        "message": "error method TestVectorStringObject.create",
      });
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorStringObject.html).
  String? get special_type {
    try {
      return (rawData["@type"] as String);
    } catch (e) {
      return null;
    }
  }

  /// Tdlib Api methods full check [Tdlib-Functions](https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1TestVectorStringObject.html).
  List<TestString> get value {
    try {
      return (rawData["value"] as List)
          .map((e) {
            return TestString((e as Map));
          })
          .toList()
          .cast<TestString>();
    } catch (e) {
      return [
        TestString({"@type": "error", "error": "${e}", "message": "error at TestVectorStringObject value"})
      ].cast<TestString>();
    }
  }

  /// return origin data without null
  Map toMap() {
    return rawData.removeValueNull();
  }

  /// return origin data without null
  Map toJson() {
    return rawData.removeValueNull();
  }

  /// convert map to json string
  @override
  String toString() {
    return json.encode(rawData.removeValueNull());
  }
}
